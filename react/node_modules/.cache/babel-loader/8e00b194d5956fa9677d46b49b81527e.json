{"ast":null,"code":"\"use strict\";\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nvar State = function () {\n  function State() {\n    _classCallCheck(this, State);\n\n    this.publishers = {\n      camera: {},\n      screen: {}\n    };\n    this.subscribers = {\n      camera: {},\n      screen: {}\n    };\n    this.streams = {}; // Map stream ids to subscriber/publisher ids\n\n    this.streamMap = {}; // OpenTok session\n\n    this.session = null; // OpenTok credentials\n\n    this.credentials = null; // Session Connection Status\n\n    this.connected = false;\n  } // Set the current connection state\n\n\n  _createClass(State, [{\n    key: \"setConnected\",\n    value: function setConnected(connected) {\n      this.connected = connected;\n    } // Get the current OpenTok session\n\n  }, {\n    key: \"getSession\",\n    value: function getSession() {\n      return this.session;\n    } // Set the current OpenTok session\n\n  }, {\n    key: \"setSession\",\n    value: function setSession(session) {\n      this.session = session;\n    } // Get the current OpenTok credentials\n\n  }, {\n    key: \"getCredentials\",\n    value: function getCredentials() {\n      return this.credentials;\n    } // Set the current OpenTok credentials\n\n  }, {\n    key: \"setCredentials\",\n    value: function setCredentials(credentials) {\n      this.credentials = credentials;\n    }\n    /**\n     * Returns the count of current publishers and subscribers by type\n     * @retuns {Object}\n     *    {\n     *      publishers: {\n     *        camera: 1,\n     *        screen: 1,\n     *        total: 2\n     *      },\n     *      subscribers: {\n     *        camera: 3,\n     *        screen: 1,\n     *        total: 4\n     *      }\n     *   }\n     */\n\n  }, {\n    key: \"pubSubCount\",\n    value: function pubSubCount() {\n      var publishers = this.publishers,\n          subscribers = this.subscribers;\n      /* eslint-disable no-param-reassign */\n\n      var pubs = Object.keys(publishers).reduce(function (acc, source) {\n        acc[source] = Object.keys(publishers[source]).length;\n        acc.total += acc[source];\n        return acc;\n      }, {\n        camera: 0,\n        screen: 0,\n        total: 0\n      });\n      var subs = Object.keys(subscribers).reduce(function (acc, source) {\n        acc[source] = Object.keys(subscribers[source]).length;\n        acc.total += acc[source];\n        return acc;\n      }, {\n        camera: 0,\n        screen: 0,\n        total: 0\n      });\n      /* eslint-enable no-param-reassign */\n\n      return {\n        publisher: pubs,\n        subscriber: subs\n      };\n    }\n    /**\n     * Returns the current publishers and subscribers, along with a count of each\n     */\n\n  }, {\n    key: \"getPubSub\",\n    value: function getPubSub() {\n      var publishers = this.publishers,\n          subscribers = this.subscribers;\n      return {\n        publishers: publishers,\n        subscribers: subscribers,\n        meta: this.pubSubCount()\n      };\n    }\n  }, {\n    key: \"addPublisher\",\n    value: function addPublisher(type, publisher) {\n      this.streamMap[publisher.streamId] = publisher.id;\n      this.publishers[type][publisher.id] = publisher;\n    }\n  }, {\n    key: \"removePublisher\",\n    value: function removePublisher(type, publisher) {\n      var id = publisher.id || this.streamMap[publisher.streamId];\n      delete this.publishers[type][id];\n    }\n  }, {\n    key: \"removeAllPublishers\",\n    value: function removeAllPublishers() {\n      this.publishers.camera = {};\n      this.publishers.screen = {};\n    }\n  }, {\n    key: \"addSubscriber\",\n    value: function addSubscriber(subscriber) {\n      var type = subscriber.stream.videoType;\n      var streamId = subscriber.stream.id;\n      this.subscribers[type][subscriber.id] = subscriber;\n      this.streamMap[streamId] = subscriber.id;\n    }\n  }, {\n    key: \"removeSubscriber\",\n    value: function removeSubscriber() {\n      var subscriber = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var stream = subscriber.stream;\n      var type = stream && stream.videoType;\n      delete this.subscribers[type][subscriber.id];\n    }\n  }, {\n    key: \"addStream\",\n    value: function addStream(stream) {\n      this.streams[stream.id] = stream;\n    }\n  }, {\n    key: \"removeStream\",\n    value: function removeStream(stream) {\n      var type = stream.videoType;\n      var subscriberId = this.streamMap[stream.id];\n      delete this.streamMap[stream.id];\n      delete this.streams[stream.id];\n      this.removeSubscriber(this.subscribers[type][subscriberId]);\n    }\n  }, {\n    key: \"getStreams\",\n    value: function getStreams() {\n      return this.streams;\n    }\n    /** Reset streams, publishers, and subscribers */\n\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this.streams = {};\n      this.streamMap = {};\n      this.publishers = {\n        camera: {},\n        screen: {}\n      };\n      this.subscribers = {\n        camera: {},\n        screen: {}\n      };\n    }\n  }, {\n    key: \"all\",\n    value: function all() {\n      var streams = this.streams,\n          streamMap = this.streamMap,\n          connected = this.connected;\n      return Object.assign({}, this.getPubSub(), {\n        streams: streams,\n        streamMap: streamMap,\n        connected: connected\n      });\n    }\n  }]);\n\n  return State;\n}();\n\nmodule.exports = State;","map":{"version":3,"sources":["/home/fizoumizou/Documents/pfe/react/node_modules/opentok-accelerator-core/dist/sdk-wrapper/state.js"],"names":["_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","Constructor","protoProps","staticProps","prototype","_classCallCheck","instance","TypeError","State","publishers","camera","screen","subscribers","streams","streamMap","session","credentials","connected","value","setConnected","getSession","setSession","getCredentials","setCredentials","pubSubCount","pubs","keys","reduce","acc","source","total","subs","publisher","subscriber","getPubSub","meta","addPublisher","type","streamId","id","removePublisher","removeAllPublishers","addSubscriber","stream","videoType","removeSubscriber","arguments","undefined","addStream","removeStream","subscriberId","getStreams","reset","all","assign","module","exports"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar State = function () {\n  function State() {\n    _classCallCheck(this, State);\n\n    this.publishers = {\n      camera: {},\n      screen: {}\n    };\n\n    this.subscribers = {\n      camera: {},\n      screen: {}\n    };\n\n    this.streams = {};\n\n    // Map stream ids to subscriber/publisher ids\n    this.streamMap = {};\n\n    // OpenTok session\n    this.session = null;\n\n    // OpenTok credentials\n    this.credentials = null;\n\n    // Session Connection Status\n    this.connected = false;\n  }\n\n  // Set the current connection state\n\n\n  _createClass(State, [{\n    key: \"setConnected\",\n    value: function setConnected(connected) {\n      this.connected = connected;\n    }\n\n    // Get the current OpenTok session\n\n  }, {\n    key: \"getSession\",\n    value: function getSession() {\n      return this.session;\n    }\n\n    // Set the current OpenTok session\n\n  }, {\n    key: \"setSession\",\n    value: function setSession(session) {\n      this.session = session;\n    }\n\n    // Get the current OpenTok credentials\n\n  }, {\n    key: \"getCredentials\",\n    value: function getCredentials() {\n      return this.credentials;\n    }\n    // Set the current OpenTok credentials\n\n  }, {\n    key: \"setCredentials\",\n    value: function setCredentials(credentials) {\n      this.credentials = credentials;\n    }\n\n    /**\n     * Returns the count of current publishers and subscribers by type\n     * @retuns {Object}\n     *    {\n     *      publishers: {\n     *        camera: 1,\n     *        screen: 1,\n     *        total: 2\n     *      },\n     *      subscribers: {\n     *        camera: 3,\n     *        screen: 1,\n     *        total: 4\n     *      }\n     *   }\n     */\n\n  }, {\n    key: \"pubSubCount\",\n    value: function pubSubCount() {\n      var publishers = this.publishers,\n          subscribers = this.subscribers;\n      /* eslint-disable no-param-reassign */\n\n      var pubs = Object.keys(publishers).reduce(function (acc, source) {\n        acc[source] = Object.keys(publishers[source]).length;\n        acc.total += acc[source];\n        return acc;\n      }, { camera: 0, screen: 0, total: 0 });\n\n      var subs = Object.keys(subscribers).reduce(function (acc, source) {\n        acc[source] = Object.keys(subscribers[source]).length;\n        acc.total += acc[source];\n        return acc;\n      }, { camera: 0, screen: 0, total: 0 });\n      /* eslint-enable no-param-reassign */\n      return { publisher: pubs, subscriber: subs };\n    }\n\n    /**\n     * Returns the current publishers and subscribers, along with a count of each\n     */\n\n  }, {\n    key: \"getPubSub\",\n    value: function getPubSub() {\n      var publishers = this.publishers,\n          subscribers = this.subscribers;\n\n      return { publishers: publishers, subscribers: subscribers, meta: this.pubSubCount() };\n    }\n  }, {\n    key: \"addPublisher\",\n    value: function addPublisher(type, publisher) {\n      this.streamMap[publisher.streamId] = publisher.id;\n      this.publishers[type][publisher.id] = publisher;\n    }\n  }, {\n    key: \"removePublisher\",\n    value: function removePublisher(type, publisher) {\n      var id = publisher.id || this.streamMap[publisher.streamId];\n      delete this.publishers[type][id];\n    }\n  }, {\n    key: \"removeAllPublishers\",\n    value: function removeAllPublishers() {\n      this.publishers.camera = {};\n      this.publishers.screen = {};\n    }\n  }, {\n    key: \"addSubscriber\",\n    value: function addSubscriber(subscriber) {\n      var type = subscriber.stream.videoType;\n      var streamId = subscriber.stream.id;\n      this.subscribers[type][subscriber.id] = subscriber;\n      this.streamMap[streamId] = subscriber.id;\n    }\n  }, {\n    key: \"removeSubscriber\",\n    value: function removeSubscriber() {\n      var subscriber = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var stream = subscriber.stream;\n\n      var type = stream && stream.videoType;\n      delete this.subscribers[type][subscriber.id];\n    }\n  }, {\n    key: \"addStream\",\n    value: function addStream(stream) {\n      this.streams[stream.id] = stream;\n    }\n  }, {\n    key: \"removeStream\",\n    value: function removeStream(stream) {\n      var type = stream.videoType;\n      var subscriberId = this.streamMap[stream.id];\n      delete this.streamMap[stream.id];\n      delete this.streams[stream.id];\n      this.removeSubscriber(this.subscribers[type][subscriberId]);\n    }\n  }, {\n    key: \"getStreams\",\n    value: function getStreams() {\n      return this.streams;\n    }\n\n    /** Reset streams, publishers, and subscribers */\n\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this.streams = {};\n      this.streamMap = {};\n      this.publishers = { camera: {}, screen: {} };\n      this.subscribers = { camera: {}, screen: {} };\n    }\n  }, {\n    key: \"all\",\n    value: function all() {\n      var streams = this.streams,\n          streamMap = this.streamMap,\n          connected = this.connected;\n\n      return Object.assign({}, this.getPubSub(), { streams: streams, streamMap: streamMap, connected: connected });\n    }\n  }]);\n\n  return State;\n}();\n\nmodule.exports = State;"]},"metadata":{},"sourceType":"script"}