{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nvar camelize_1 = __importDefault(require(\"camelize\"));\n\nvar content_security_policy_builder_1 = __importDefault(require(\"content-security-policy-builder\"));\n\nvar bowser_1 = __importDefault(require(\"bowser\"));\n\nvar is_function_1 = __importDefault(require(\"./lib/is-function\"));\n\nvar check_options_1 = __importDefault(require(\"./lib/check-options\"));\n\nvar contains_function_1 = __importDefault(require(\"./lib/contains-function\"));\n\nvar get_header_keys_for_browser_1 = __importDefault(require(\"./lib/get-header-keys-for-browser\"));\n\nvar transform_directives_for_browser_1 = __importDefault(require(\"./lib/transform-directives-for-browser\"));\n\nvar parse_dynamic_directives_1 = __importDefault(require(\"./lib/parse-dynamic-directives\"));\n\nvar config_1 = __importDefault(require(\"./lib/config\"));\n\nmodule.exports = function csp(options) {\n  check_options_1.default(options);\n  var originalDirectives = camelize_1.default(options.directives || {});\n  var directivesAreDynamic = contains_function_1.default(originalDirectives);\n  var shouldBrowserSniff = options.browserSniff !== false;\n\n  if (shouldBrowserSniff) {\n    return function csp(req, res, next) {\n      var userAgent = req.headers['user-agent'];\n      var browser;\n\n      if (userAgent) {\n        browser = bowser_1.default.getParser(userAgent);\n      } else {\n        browser = undefined;\n      }\n\n      var headerKeys;\n\n      if (options.setAllHeaders || !userAgent) {\n        headerKeys = config_1.default.allHeaders;\n      } else {\n        headerKeys = get_header_keys_for_browser_1.default(browser, options);\n      }\n\n      if (headerKeys.length === 0) {\n        next();\n        return;\n      }\n\n      var directives = transform_directives_for_browser_1.default(browser, originalDirectives);\n\n      if (directivesAreDynamic) {\n        directives = parse_dynamic_directives_1.default(directives, [req, res]);\n      }\n\n      var policyString = content_security_policy_builder_1.default({\n        directives: directives\n      });\n      headerKeys.forEach(function (headerKey) {\n        if (is_function_1.default(options.reportOnly) && options.reportOnly(req, res) || !is_function_1.default(options.reportOnly) && options.reportOnly) {\n          headerKey += '-Report-Only';\n        }\n\n        res.setHeader(headerKey, policyString);\n      });\n      next();\n    };\n  } else {\n    var headerKeys_1 = options.setAllHeaders ? config_1.default.allHeaders : ['Content-Security-Policy'];\n    return function csp(req, res, next) {\n      var directives = parse_dynamic_directives_1.default(originalDirectives, [req, res]);\n      var policyString = content_security_policy_builder_1.default({\n        directives: directives\n      });\n\n      if (is_function_1.default(options.reportOnly) && options.reportOnly(req, res) || !is_function_1.default(options.reportOnly) && options.reportOnly) {\n        headerKeys_1.forEach(function (headerKey) {\n          res.setHeader(headerKey + \"-Report-Only\", policyString);\n        });\n      } else {\n        headerKeys_1.forEach(function (headerKey) {\n          res.setHeader(headerKey, policyString);\n        });\n      }\n\n      next();\n    };\n  }\n};","map":{"version":3,"sources":["/home/fizoumizou/Documents/pfe/react/node_modules/helmet-csp/dist/index.js"],"names":["__importDefault","mod","__esModule","camelize_1","require","content_security_policy_builder_1","bowser_1","is_function_1","check_options_1","contains_function_1","get_header_keys_for_browser_1","transform_directives_for_browser_1","parse_dynamic_directives_1","config_1","module","exports","csp","options","default","originalDirectives","directives","directivesAreDynamic","shouldBrowserSniff","browserSniff","req","res","next","userAgent","headers","browser","getParser","undefined","headerKeys","setAllHeaders","allHeaders","length","policyString","forEach","headerKey","reportOnly","setHeader","headerKeys_1"],"mappings":"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","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar camelize_1 = __importDefault(require(\"camelize\"));\nvar content_security_policy_builder_1 = __importDefault(require(\"content-security-policy-builder\"));\nvar bowser_1 = __importDefault(require(\"bowser\"));\nvar is_function_1 = __importDefault(require(\"./lib/is-function\"));\nvar check_options_1 = __importDefault(require(\"./lib/check-options\"));\nvar contains_function_1 = __importDefault(require(\"./lib/contains-function\"));\nvar get_header_keys_for_browser_1 = __importDefault(require(\"./lib/get-header-keys-for-browser\"));\nvar transform_directives_for_browser_1 = __importDefault(require(\"./lib/transform-directives-for-browser\"));\nvar parse_dynamic_directives_1 = __importDefault(require(\"./lib/parse-dynamic-directives\"));\nvar config_1 = __importDefault(require(\"./lib/config\"));\nmodule.exports = function csp(options) {\n    check_options_1.default(options);\n    var originalDirectives = camelize_1.default(options.directives || {});\n    var directivesAreDynamic = contains_function_1.default(originalDirectives);\n    var shouldBrowserSniff = options.browserSniff !== false;\n    if (shouldBrowserSniff) {\n        return function csp(req, res, next) {\n            var userAgent = req.headers['user-agent'];\n            var browser;\n            if (userAgent) {\n                browser = bowser_1.default.getParser(userAgent);\n            }\n            else {\n                browser = undefined;\n            }\n            var headerKeys;\n            if (options.setAllHeaders || !userAgent) {\n                headerKeys = config_1.default.allHeaders;\n            }\n            else {\n                headerKeys = get_header_keys_for_browser_1.default(browser, options);\n            }\n            if (headerKeys.length === 0) {\n                next();\n                return;\n            }\n            var directives = transform_directives_for_browser_1.default(browser, originalDirectives);\n            if (directivesAreDynamic) {\n                directives = parse_dynamic_directives_1.default(directives, [req, res]);\n            }\n            var policyString = content_security_policy_builder_1.default({ directives: directives });\n            headerKeys.forEach(function (headerKey) {\n                if (is_function_1.default(options.reportOnly) && options.reportOnly(req, res) ||\n                    !is_function_1.default(options.reportOnly) && options.reportOnly) {\n                    headerKey += '-Report-Only';\n                }\n                res.setHeader(headerKey, policyString);\n            });\n            next();\n        };\n    }\n    else {\n        var headerKeys_1 = options.setAllHeaders ? config_1.default.allHeaders : ['Content-Security-Policy'];\n        return function csp(req, res, next) {\n            var directives = parse_dynamic_directives_1.default(originalDirectives, [req, res]);\n            var policyString = content_security_policy_builder_1.default({ directives: directives });\n            if (is_function_1.default(options.reportOnly) && options.reportOnly(req, res) ||\n                !is_function_1.default(options.reportOnly) && options.reportOnly) {\n                headerKeys_1.forEach(function (headerKey) {\n                    res.setHeader(headerKey + \"-Report-Only\", policyString);\n                });\n            }\n            else {\n                headerKeys_1.forEach(function (headerKey) {\n                    res.setHeader(headerKey, policyString);\n                });\n            }\n            next();\n        };\n    }\n};\n"]},"metadata":{},"sourceType":"script"}