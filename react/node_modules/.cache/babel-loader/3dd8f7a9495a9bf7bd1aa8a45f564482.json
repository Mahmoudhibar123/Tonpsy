{"ast":null,"code":"\"use strict\";\n\nfunction getHeaderValueFromOptions(options) {\n  var DEFAULT_PERMITTED_POLICIES = 'none';\n  var ALLOWED_POLICIES = ['none', 'master-only', 'by-content-type', 'all'];\n  var permittedPolicies;\n\n  if ('permittedPolicies' in options) {\n    permittedPolicies = options.permittedPolicies;\n  } else {\n    permittedPolicies = DEFAULT_PERMITTED_POLICIES;\n  }\n\n  if (ALLOWED_POLICIES.indexOf(permittedPolicies) === -1) {\n    throw new Error(\"\\\"\" + permittedPolicies + \"\\\" is not a valid permitted policy. Allowed values: \" + ALLOWED_POLICIES.join(', ') + \".\");\n  }\n\n  return permittedPolicies;\n}\n\nmodule.exports = function crossdomain(options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var headerValue = getHeaderValueFromOptions(options);\n  return function crossdomain(_req, res, next) {\n    res.setHeader('X-Permitted-Cross-Domain-Policies', headerValue);\n    next();\n  };\n};","map":{"version":3,"sources":["/home/fizoumizou/Documents/pfe/react/node_modules/helmet-crossdomain/dist/index.js"],"names":["getHeaderValueFromOptions","options","DEFAULT_PERMITTED_POLICIES","ALLOWED_POLICIES","permittedPolicies","indexOf","Error","join","module","exports","crossdomain","headerValue","_req","res","next","setHeader"],"mappings":"AAAA;;AACA,SAASA,yBAAT,CAAmCC,OAAnC,EAA4C;AACxC,MAAIC,0BAA0B,GAAG,MAAjC;AACA,MAAIC,gBAAgB,GAAG,CACnB,MADmB,EAEnB,aAFmB,EAGnB,iBAHmB,EAInB,KAJmB,CAAvB;AAMA,MAAIC,iBAAJ;;AACA,MAAI,uBAAuBH,OAA3B,EAAoC;AAChCG,IAAAA,iBAAiB,GAAGH,OAAO,CAACG,iBAA5B;AACH,GAFD,MAGK;AACDA,IAAAA,iBAAiB,GAAGF,0BAApB;AACH;;AACD,MAAIC,gBAAgB,CAACE,OAAjB,CAAyBD,iBAAzB,MAAgD,CAAC,CAArD,EAAwD;AACpD,UAAM,IAAIE,KAAJ,CAAU,OAAOF,iBAAP,GAA2B,sDAA3B,GAAoFD,gBAAgB,CAACI,IAAjB,CAAsB,IAAtB,CAApF,GAAkH,GAA5H,CAAN;AACH;;AACD,SAAOH,iBAAP;AACH;;AACDI,MAAM,CAACC,OAAP,GAAiB,SAASC,WAAT,CAAqBT,OAArB,EAA8B;AAC3C,MAAIA,OAAO,KAAK,KAAK,CAArB,EAAwB;AAAEA,IAAAA,OAAO,GAAG,EAAV;AAAe;;AACzC,MAAIU,WAAW,GAAGX,yBAAyB,CAACC,OAAD,CAA3C;AACA,SAAO,SAASS,WAAT,CAAqBE,IAArB,EAA2BC,GAA3B,EAAgCC,IAAhC,EAAsC;AACzCD,IAAAA,GAAG,CAACE,SAAJ,CAAc,mCAAd,EAAmDJ,WAAnD;AACAG,IAAAA,IAAI;AACP,GAHD;AAIH,CAPD","sourcesContent":["\"use strict\";\nfunction getHeaderValueFromOptions(options) {\n    var DEFAULT_PERMITTED_POLICIES = 'none';\n    var ALLOWED_POLICIES = [\n        'none',\n        'master-only',\n        'by-content-type',\n        'all',\n    ];\n    var permittedPolicies;\n    if ('permittedPolicies' in options) {\n        permittedPolicies = options.permittedPolicies;\n    }\n    else {\n        permittedPolicies = DEFAULT_PERMITTED_POLICIES;\n    }\n    if (ALLOWED_POLICIES.indexOf(permittedPolicies) === -1) {\n        throw new Error(\"\\\"\" + permittedPolicies + \"\\\" is not a valid permitted policy. Allowed values: \" + ALLOWED_POLICIES.join(', ') + \".\");\n    }\n    return permittedPolicies;\n}\nmodule.exports = function crossdomain(options) {\n    if (options === void 0) { options = {}; }\n    var headerValue = getHeaderValueFromOptions(options);\n    return function crossdomain(_req, res, next) {\n        res.setHeader('X-Permitted-Cross-Domain-Policies', headerValue);\n        next();\n    };\n};\n"]},"metadata":{},"sourceType":"script"}