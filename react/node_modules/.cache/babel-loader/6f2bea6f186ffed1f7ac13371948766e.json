{"ast":null,"code":"\"use strict\";\n\nfunction doesUserAgentMatchOldInternetExplorer(userAgent) {\n  if (!userAgent) {\n    return false;\n  }\n\n  var matches = /msie\\s*(\\d{1,2})/i.exec(userAgent);\n  return matches ? parseFloat(matches[1]) < 9 : false;\n}\n\nfunction getHeaderValueFromOptions(options) {\n  var directives = ['1'];\n  var isBlockMode;\n\n  if ('mode' in options) {\n    if (options.mode === 'block') {\n      isBlockMode = true;\n    } else if (options.mode === null) {\n      isBlockMode = false;\n    } else {\n      throw new Error('The `mode` option must be set to \"block\" or null.');\n    }\n  } else {\n    isBlockMode = true;\n  }\n\n  if (isBlockMode) {\n    directives.push('mode=block');\n  }\n\n  if (options.reportUri) {\n    directives.push(\"report=\" + options.reportUri);\n  }\n\n  return directives.join('; ');\n}\n\nmodule.exports = function xXssProtection(options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var headerValue = getHeaderValueFromOptions(options);\n\n  if (options.setOnOldIE) {\n    return function xXssProtection(_req, res, next) {\n      res.setHeader('X-XSS-Protection', headerValue);\n      next();\n    };\n  } else {\n    return function xXssProtection(req, res, next) {\n      var value = doesUserAgentMatchOldInternetExplorer(req.headers['user-agent']) ? '0' : headerValue;\n      res.setHeader('X-XSS-Protection', value);\n      next();\n    };\n  }\n};","map":{"version":3,"sources":["/home/fizoumizou/Documents/pfe/react/node_modules/x-xss-protection/dist/index.js"],"names":["doesUserAgentMatchOldInternetExplorer","userAgent","matches","exec","parseFloat","getHeaderValueFromOptions","options","directives","isBlockMode","mode","Error","push","reportUri","join","module","exports","xXssProtection","headerValue","setOnOldIE","_req","res","next","setHeader","req","value","headers"],"mappings":"AAAA;;AACA,SAASA,qCAAT,CAA+CC,SAA/C,EAA0D;AACtD,MAAI,CAACA,SAAL,EAAgB;AACZ,WAAO,KAAP;AACH;;AACD,MAAIC,OAAO,GAAG,oBAAoBC,IAApB,CAAyBF,SAAzB,CAAd;AACA,SAAOC,OAAO,GAAGE,UAAU,CAACF,OAAO,CAAC,CAAD,CAAR,CAAV,GAAyB,CAA5B,GAAgC,KAA9C;AACH;;AACD,SAASG,yBAAT,CAAmCC,OAAnC,EAA4C;AACxC,MAAIC,UAAU,GAAG,CAAC,GAAD,CAAjB;AACA,MAAIC,WAAJ;;AACA,MAAI,UAAUF,OAAd,EAAuB;AACnB,QAAIA,OAAO,CAACG,IAAR,KAAiB,OAArB,EAA8B;AAC1BD,MAAAA,WAAW,GAAG,IAAd;AACH,KAFD,MAGK,IAAIF,OAAO,CAACG,IAAR,KAAiB,IAArB,EAA2B;AAC5BD,MAAAA,WAAW,GAAG,KAAd;AACH,KAFI,MAGA;AACD,YAAM,IAAIE,KAAJ,CAAU,mDAAV,CAAN;AACH;AACJ,GAVD,MAWK;AACDF,IAAAA,WAAW,GAAG,IAAd;AACH;;AACD,MAAIA,WAAJ,EAAiB;AACbD,IAAAA,UAAU,CAACI,IAAX,CAAgB,YAAhB;AACH;;AACD,MAAIL,OAAO,CAACM,SAAZ,EAAuB;AACnBL,IAAAA,UAAU,CAACI,IAAX,CAAgB,YAAYL,OAAO,CAACM,SAApC;AACH;;AACD,SAAOL,UAAU,CAACM,IAAX,CAAgB,IAAhB,CAAP;AACH;;AACDC,MAAM,CAACC,OAAP,GAAiB,SAASC,cAAT,CAAwBV,OAAxB,EAAiC;AAC9C,MAAIA,OAAO,KAAK,KAAK,CAArB,EAAwB;AAAEA,IAAAA,OAAO,GAAG,EAAV;AAAe;;AACzC,MAAIW,WAAW,GAAGZ,yBAAyB,CAACC,OAAD,CAA3C;;AACA,MAAIA,OAAO,CAACY,UAAZ,EAAwB;AACpB,WAAO,SAASF,cAAT,CAAwBG,IAAxB,EAA8BC,GAA9B,EAAmCC,IAAnC,EAAyC;AAC5CD,MAAAA,GAAG,CAACE,SAAJ,CAAc,kBAAd,EAAkCL,WAAlC;AACAI,MAAAA,IAAI;AACP,KAHD;AAIH,GALD,MAMK;AACD,WAAO,SAASL,cAAT,CAAwBO,GAAxB,EAA6BH,GAA7B,EAAkCC,IAAlC,EAAwC;AAC3C,UAAIG,KAAK,GAAGxB,qCAAqC,CAACuB,GAAG,CAACE,OAAJ,CAAY,YAAZ,CAAD,CAArC,GAAmE,GAAnE,GAAyER,WAArF;AACAG,MAAAA,GAAG,CAACE,SAAJ,CAAc,kBAAd,EAAkCE,KAAlC;AACAH,MAAAA,IAAI;AACP,KAJD;AAKH;AACJ,CAhBD","sourcesContent":["\"use strict\";\nfunction doesUserAgentMatchOldInternetExplorer(userAgent) {\n    if (!userAgent) {\n        return false;\n    }\n    var matches = /msie\\s*(\\d{1,2})/i.exec(userAgent);\n    return matches ? parseFloat(matches[1]) < 9 : false;\n}\nfunction getHeaderValueFromOptions(options) {\n    var directives = ['1'];\n    var isBlockMode;\n    if ('mode' in options) {\n        if (options.mode === 'block') {\n            isBlockMode = true;\n        }\n        else if (options.mode === null) {\n            isBlockMode = false;\n        }\n        else {\n            throw new Error('The `mode` option must be set to \"block\" or null.');\n        }\n    }\n    else {\n        isBlockMode = true;\n    }\n    if (isBlockMode) {\n        directives.push('mode=block');\n    }\n    if (options.reportUri) {\n        directives.push(\"report=\" + options.reportUri);\n    }\n    return directives.join('; ');\n}\nmodule.exports = function xXssProtection(options) {\n    if (options === void 0) { options = {}; }\n    var headerValue = getHeaderValueFromOptions(options);\n    if (options.setOnOldIE) {\n        return function xXssProtection(_req, res, next) {\n            res.setHeader('X-XSS-Protection', headerValue);\n            next();\n        };\n    }\n    else {\n        return function xXssProtection(req, res, next) {\n            var value = doesUserAgentMatchOldInternetExplorer(req.headers['user-agent']) ? '0' : headerValue;\n            res.setHeader('X-XSS-Protection', value);\n            next();\n        };\n    }\n};\n"]},"metadata":{},"sourceType":"script"}