{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nvar config_1 = __importDefault(require(\"./config\"));\n\nfunction goodBrowser() {\n  return ['Content-Security-Policy'];\n}\n\nvar handlersByBrowserName = {\n  'Android Browser': function AndroidBrowser(browser) {\n    var osVersionName = browser.getOS().versionName;\n\n    if (osVersionName && parseFloat(osVersionName) < 4.4) {\n      return [];\n    }\n\n    return ['Content-Security-Policy'];\n  },\n  Chrome: function Chrome(browser) {\n    var browserVersion = parseFloat(browser.getBrowserVersion());\n\n    if (browserVersion >= 14 && browserVersion < 25) {\n      return ['X-WebKit-CSP'];\n    } else if (browserVersion >= 25) {\n      return ['Content-Security-Policy'];\n    } else {\n      return [];\n    }\n  },\n  'Chrome Mobile': function ChromeMobile(browser, options) {\n    if (browser.getOSName() === 'iOS') {\n      return ['Content-Security-Policy'];\n    } else {\n      return handlersByBrowserName['Android Browser'](browser, options);\n    }\n  },\n  Firefox: function Firefox(browser) {\n    var osName = browser.getOSName();\n\n    if (osName === 'iOS') {\n      return ['Content-Security-Policy'];\n    }\n\n    var browserVersion = parseFloat(browser.getBrowserVersion());\n\n    if (osName === 'Android') {\n      if (browserVersion >= 25) {\n        return ['Content-Security-Policy'];\n      } else {\n        return ['X-Content-Security-Policy'];\n      }\n    } else if (browser.getPlatformType(true) === 'mobile') {\n      // This is probably Firefox OS.\n      if (browserVersion >= 32) {\n        return ['Content-Security-Policy'];\n      } else {\n        return ['X-Content-Security-Policy'];\n      }\n    } else if (browserVersion >= 23) {\n      return ['Content-Security-Policy'];\n    } else if (browserVersion >= 4 && browserVersion < 23) {\n      return ['X-Content-Security-Policy'];\n    } else {\n      return [];\n    }\n  },\n  'Internet Explorer': function InternetExplorer(browser) {\n    var browserVersion = parseFloat(browser.getBrowserVersion());\n    var header = browserVersion < 12 ? 'X-Content-Security-Policy' : 'Content-Security-Policy';\n    return [header];\n  },\n  'Microsoft Edge': goodBrowser,\n  'Microsoft Edge Mobile': goodBrowser,\n  Opera: function Opera(browser) {\n    var browserVersion = parseFloat(browser.getBrowserVersion());\n\n    if (browserVersion >= 15) {\n      return ['Content-Security-Policy'];\n    } else {\n      return [];\n    }\n  },\n  Safari: function Safari(browser) {\n    var browserVersion = parseFloat(browser.getBrowserVersion());\n\n    if (browserVersion >= 7) {\n      return ['Content-Security-Policy'];\n    } else if (browserVersion >= 6) {\n      return ['X-WebKit-CSP'];\n    } else {\n      return [];\n    }\n  }\n};\n\nmodule.exports = function getHeaderKeysForBrowser(browser, options) {\n  if (!browser) {\n    return config_1.default.allHeaders;\n  }\n\n  if (options.disableAndroid && browser.getOSName() === 'Android') {\n    return [];\n  }\n\n  var browserName = browser.getBrowserName();\n\n  if (Object.prototype.hasOwnProperty.call(handlersByBrowserName, browserName)) {\n    return handlersByBrowserName[browserName](browser, options);\n  } else {\n    return config_1.default.allHeaders;\n  }\n};","map":{"version":3,"sources":["/home/fizoumizou/Documents/pfe/react/node_modules/helmet-csp/dist/lib/get-header-keys-for-browser.js"],"names":["__importDefault","mod","__esModule","config_1","require","goodBrowser","handlersByBrowserName","browser","osVersionName","getOS","versionName","parseFloat","Chrome","browserVersion","getBrowserVersion","options","getOSName","Firefox","osName","getPlatformType","header","Opera","Safari","module","exports","getHeaderKeysForBrowser","default","allHeaders","disableAndroid","browserName","getBrowserName","Object","prototype","hasOwnProperty","call"],"mappings":"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","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar config_1 = __importDefault(require(\"./config\"));\nfunction goodBrowser() {\n    return ['Content-Security-Policy'];\n}\nvar handlersByBrowserName = {\n    'Android Browser': function (browser) {\n        var osVersionName = browser.getOS().versionName;\n        if (osVersionName && parseFloat(osVersionName) < 4.4) {\n            return [];\n        }\n        return ['Content-Security-Policy'];\n    },\n    Chrome: function (browser) {\n        var browserVersion = parseFloat(browser.getBrowserVersion());\n        if (browserVersion >= 14 && browserVersion < 25) {\n            return ['X-WebKit-CSP'];\n        }\n        else if (browserVersion >= 25) {\n            return ['Content-Security-Policy'];\n        }\n        else {\n            return [];\n        }\n    },\n    'Chrome Mobile': function (browser, options) {\n        if (browser.getOSName() === 'iOS') {\n            return ['Content-Security-Policy'];\n        }\n        else {\n            return handlersByBrowserName['Android Browser'](browser, options);\n        }\n    },\n    Firefox: function (browser) {\n        var osName = browser.getOSName();\n        if (osName === 'iOS') {\n            return ['Content-Security-Policy'];\n        }\n        var browserVersion = parseFloat(browser.getBrowserVersion());\n        if (osName === 'Android') {\n            if (browserVersion >= 25) {\n                return ['Content-Security-Policy'];\n            }\n            else {\n                return ['X-Content-Security-Policy'];\n            }\n        }\n        else if (browser.getPlatformType(true) === 'mobile') {\n            // This is probably Firefox OS.\n            if (browserVersion >= 32) {\n                return ['Content-Security-Policy'];\n            }\n            else {\n                return ['X-Content-Security-Policy'];\n            }\n        }\n        else if (browserVersion >= 23) {\n            return ['Content-Security-Policy'];\n        }\n        else if (browserVersion >= 4 && browserVersion < 23) {\n            return ['X-Content-Security-Policy'];\n        }\n        else {\n            return [];\n        }\n    },\n    'Internet Explorer': function (browser) {\n        var browserVersion = parseFloat(browser.getBrowserVersion());\n        var header = browserVersion < 12 ? 'X-Content-Security-Policy' : 'Content-Security-Policy';\n        return [header];\n    },\n    'Microsoft Edge': goodBrowser,\n    'Microsoft Edge Mobile': goodBrowser,\n    Opera: function (browser) {\n        var browserVersion = parseFloat(browser.getBrowserVersion());\n        if (browserVersion >= 15) {\n            return ['Content-Security-Policy'];\n        }\n        else {\n            return [];\n        }\n    },\n    Safari: function (browser) {\n        var browserVersion = parseFloat(browser.getBrowserVersion());\n        if (browserVersion >= 7) {\n            return ['Content-Security-Policy'];\n        }\n        else if (browserVersion >= 6) {\n            return ['X-WebKit-CSP'];\n        }\n        else {\n            return [];\n        }\n    },\n};\nmodule.exports = function getHeaderKeysForBrowser(browser, options) {\n    if (!browser) {\n        return config_1.default.allHeaders;\n    }\n    if (options.disableAndroid && browser.getOSName() === 'Android') {\n        return [];\n    }\n    var browserName = browser.getBrowserName();\n    if (Object.prototype.hasOwnProperty.call(handlersByBrowserName, browserName)) {\n        return handlersByBrowserName[browserName](browser, options);\n    }\n    else {\n        return config_1.default.allHeaders;\n    }\n};\n"]},"metadata":{},"sourceType":"script"}