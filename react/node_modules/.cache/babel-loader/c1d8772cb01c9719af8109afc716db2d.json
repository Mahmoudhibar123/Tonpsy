{"ast":null,"code":"var badArgumentsError = new Error('hpkp must be called with a maxAge and at least two SHA-256s (one actually used and another kept as a backup).');\n\nmodule.exports = function hpkp(passedOptions) {\n  var options = parseOptions(passedOptions);\n  var headerKey = getHeaderKey(options);\n  var headerValue = getHeaderValue(options);\n  return function hpkp(req, res, next) {\n    var setHeader = true;\n    var setIf = options.setIf;\n\n    if (setIf) {\n      setHeader = setIf(req, res);\n    }\n\n    if (setHeader) {\n      res.setHeader(headerKey, headerValue);\n    }\n\n    next();\n  };\n};\n\nfunction parseOptions(options) {\n  if (!options) {\n    throw badArgumentsError;\n  }\n\n  if (options.maxage && options.maxAge) {\n    throw badArgumentsError;\n  }\n\n  var maxAge = options.maxAge;\n  var sha256s = options.sha256s;\n  var setIf = options.setIf;\n\n  if (!maxAge || maxAge <= 0) {\n    throw badArgumentsError;\n  }\n\n  if (!sha256s || sha256s.length < 2) {\n    throw badArgumentsError;\n  }\n\n  if (setIf && typeof setIf !== 'function') {\n    throw new TypeError('setIf must be a function.');\n  }\n\n  if (options.reportOnly && !options.reportUri) {\n    throw badArgumentsError;\n  }\n\n  return {\n    maxAge: maxAge,\n    sha256s: sha256s,\n    includeSubDomains: options.includeSubDomains || options.includeSubdomains,\n    reportUri: options.reportUri,\n    reportOnly: options.reportOnly,\n    setIf: setIf\n  };\n}\n\nfunction getHeaderKey(options) {\n  var header = 'Public-Key-Pins';\n\n  if (options.reportOnly) {\n    header += '-Report-Only';\n  }\n\n  return header;\n}\n\nfunction getHeaderValue(options) {\n  var result = options.sha256s.map(function (sha) {\n    return 'pin-sha256=\"' + sha + '\"';\n  });\n  result.push('max-age=' + Math.round(options.maxAge));\n\n  if (options.includeSubDomains) {\n    result.push('includeSubDomains');\n  }\n\n  if (options.reportUri) {\n    result.push('report-uri=\"' + options.reportUri + '\"');\n  }\n\n  return result.join('; ');\n}","map":{"version":3,"sources":["/home/fizoumizou/Documents/pfe/react/node_modules/hpkp/index.js"],"names":["badArgumentsError","Error","module","exports","hpkp","passedOptions","options","parseOptions","headerKey","getHeaderKey","headerValue","getHeaderValue","req","res","next","setHeader","setIf","maxage","maxAge","sha256s","length","TypeError","reportOnly","reportUri","includeSubDomains","includeSubdomains","header","result","map","sha","push","Math","round","join"],"mappings":"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","sourcesContent":["var badArgumentsError = new Error('hpkp must be called with a maxAge and at least two SHA-256s (one actually used and another kept as a backup).')\n\nmodule.exports = function hpkp (passedOptions) {\n  var options = parseOptions(passedOptions)\n  var headerKey = getHeaderKey(options)\n  var headerValue = getHeaderValue(options)\n\n  return function hpkp (req, res, next) {\n    var setHeader = true\n    var setIf = options.setIf\n\n    if (setIf) {\n      setHeader = setIf(req, res)\n    }\n\n    if (setHeader) {\n      res.setHeader(headerKey, headerValue)\n    }\n\n    next()\n  }\n}\n\nfunction parseOptions (options) {\n  if (!options) { throw badArgumentsError }\n\n  if (options.maxage && options.maxAge) { throw badArgumentsError }\n\n  var maxAge = options.maxAge\n  var sha256s = options.sha256s\n  var setIf = options.setIf\n\n  if (!maxAge || maxAge <= 0) { throw badArgumentsError }\n  if (!sha256s || sha256s.length < 2) { throw badArgumentsError }\n  if (setIf && (typeof setIf !== 'function')) {\n    throw new TypeError('setIf must be a function.')\n  }\n\n  if (options.reportOnly && !options.reportUri) { throw badArgumentsError }\n\n  return {\n    maxAge: maxAge,\n    sha256s: sha256s,\n    includeSubDomains: options.includeSubDomains || options.includeSubdomains,\n    reportUri: options.reportUri,\n    reportOnly: options.reportOnly,\n    setIf: setIf\n  }\n}\n\nfunction getHeaderKey (options) {\n  var header = 'Public-Key-Pins'\n  if (options.reportOnly) {\n    header += '-Report-Only'\n  }\n  return header\n}\n\nfunction getHeaderValue (options) {\n  var result = options.sha256s.map(function (sha) {\n    return 'pin-sha256=\"' + sha + '\"'\n  })\n  result.push('max-age=' + Math.round(options.maxAge))\n  if (options.includeSubDomains) {\n    result.push('includeSubDomains')\n  }\n  if (options.reportUri) {\n    result.push('report-uri=\"' + options.reportUri + '\"')\n  }\n  return result.join('; ')\n}\n"]},"metadata":{},"sourceType":"script"}