{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nvar is_function_1 = __importDefault(require(\"./is-function\"));\n\nvar is_string_1 = __importDefault(require(\"./is-string\"));\n\nmodule.exports = function parseDynamicDirectives(directives, functionArgs) {\n  var result = {};\n  Object.keys(directives).forEach(function (key) {\n    var typedKey = key;\n    var value = directives[typedKey];\n\n    if (Array.isArray(value)) {\n      result[typedKey] = value.map(function (element) {\n        if (is_function_1.default(element)) {\n          return element.apply(void 0, functionArgs);\n        } else {\n          return element;\n        }\n      });\n    } else if (is_function_1.default(value)) {\n      result[typedKey] = value.apply(void 0, functionArgs);\n    } else if (value === true || is_string_1.default(value)) {\n      result[typedKey] = value;\n    }\n  });\n  return result;\n};","map":{"version":3,"sources":["/home/fizoumizou/Documents/pfe/react/node_modules/helmet-csp/dist/lib/parse-dynamic-directives.js"],"names":["__importDefault","mod","__esModule","is_function_1","require","is_string_1","module","exports","parseDynamicDirectives","directives","functionArgs","result","Object","keys","forEach","key","typedKey","value","Array","isArray","map","element","default","apply"],"mappings":"AAAA;;AACA,IAAIA,eAAe,GAAI,QAAQ,KAAKA,eAAd,IAAkC,UAAUC,GAAV,EAAe;AACnE,SAAQA,GAAG,IAAIA,GAAG,CAACC,UAAZ,GAA0BD,GAA1B,GAAgC;AAAE,eAAWA;AAAb,GAAvC;AACH,CAFD;;AAGA,IAAIE,aAAa,GAAGH,eAAe,CAACI,OAAO,CAAC,eAAD,CAAR,CAAnC;;AACA,IAAIC,WAAW,GAAGL,eAAe,CAACI,OAAO,CAAC,aAAD,CAAR,CAAjC;;AACAE,MAAM,CAACC,OAAP,GAAiB,SAASC,sBAAT,CAAgCC,UAAhC,EAA4CC,YAA5C,EAA0D;AACvE,MAAIC,MAAM,GAAG,EAAb;AACAC,EAAAA,MAAM,CAACC,IAAP,CAAYJ,UAAZ,EAAwBK,OAAxB,CAAgC,UAAUC,GAAV,EAAe;AAC3C,QAAIC,QAAQ,GAAGD,GAAf;AACA,QAAIE,KAAK,GAAGR,UAAU,CAACO,QAAD,CAAtB;;AACA,QAAIE,KAAK,CAACC,OAAN,CAAcF,KAAd,CAAJ,EAA0B;AACtBN,MAAAA,MAAM,CAACK,QAAD,CAAN,GAAmBC,KAAK,CAACG,GAAN,CAAU,UAAUC,OAAV,EAAmB;AAC5C,YAAIlB,aAAa,CAACmB,OAAd,CAAsBD,OAAtB,CAAJ,EAAoC;AAChC,iBAAOA,OAAO,CAACE,KAAR,CAAc,KAAK,CAAnB,EAAsBb,YAAtB,CAAP;AACH,SAFD,MAGK;AACD,iBAAOW,OAAP;AACH;AACJ,OAPkB,CAAnB;AAQH,KATD,MAUK,IAAIlB,aAAa,CAACmB,OAAd,CAAsBL,KAAtB,CAAJ,EAAkC;AACnCN,MAAAA,MAAM,CAACK,QAAD,CAAN,GAAmBC,KAAK,CAACM,KAAN,CAAY,KAAK,CAAjB,EAAoBb,YAApB,CAAnB;AACH,KAFI,MAGA,IAAIO,KAAK,KAAK,IAAV,IAAkBZ,WAAW,CAACiB,OAAZ,CAAoBL,KAApB,CAAtB,EAAkD;AACnDN,MAAAA,MAAM,CAACK,QAAD,CAAN,GAAmBC,KAAnB;AACH;AACJ,GAnBD;AAoBA,SAAON,MAAP;AACH,CAvBD","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar is_function_1 = __importDefault(require(\"./is-function\"));\nvar is_string_1 = __importDefault(require(\"./is-string\"));\nmodule.exports = function parseDynamicDirectives(directives, functionArgs) {\n    var result = {};\n    Object.keys(directives).forEach(function (key) {\n        var typedKey = key;\n        var value = directives[typedKey];\n        if (Array.isArray(value)) {\n            result[typedKey] = value.map(function (element) {\n                if (is_function_1.default(element)) {\n                    return element.apply(void 0, functionArgs);\n                }\n                else {\n                    return element;\n                }\n            });\n        }\n        else if (is_function_1.default(value)) {\n            result[typedKey] = value.apply(void 0, functionArgs);\n        }\n        else if (value === true || is_string_1.default(value)) {\n            result[typedKey] = value;\n        }\n    });\n    return result;\n};\n"]},"metadata":{},"sourceType":"script"}