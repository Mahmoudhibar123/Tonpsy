{"ast":null,"code":"\"use strict\";\n\nfunction parseActionOption(actionOption) {\n  var invalidActionErr = new Error('action must be undefined, \"DENY\", \"ALLOW-FROM\", or \"SAMEORIGIN\".');\n\n  if (actionOption === undefined) {\n    actionOption = 'SAMEORIGIN';\n  } else if (actionOption instanceof String) {\n    actionOption = actionOption.valueOf();\n  }\n\n  var result;\n\n  if (typeof actionOption === 'string') {\n    result = actionOption.toUpperCase();\n  } else {\n    throw invalidActionErr;\n  }\n\n  if (result === 'ALLOWFROM') {\n    result = 'ALLOW-FROM';\n  } else if (result === 'SAME-ORIGIN') {\n    result = 'SAMEORIGIN';\n  }\n\n  if (['DENY', 'ALLOW-FROM', 'SAMEORIGIN'].indexOf(result) === -1) {\n    throw invalidActionErr;\n  }\n\n  return result;\n}\n\nfunction parseDomainOption(domainOption) {\n  if (domainOption instanceof String) {\n    domainOption = domainOption.valueOf();\n  }\n\n  if (typeof domainOption !== 'string') {\n    throw new Error('ALLOW-FROM action requires a string domain parameter.');\n  } else if (!domainOption.length) {\n    throw new Error('domain parameter must not be empty.');\n  }\n\n  return domainOption;\n}\n\nfunction getHeaderValueFromOptions(options) {\n  options = options || {};\n  var action = parseActionOption(options.action);\n\n  if (action === 'ALLOW-FROM') {\n    var domain = parseDomainOption(options.domain);\n    return action + \" \" + domain;\n  } else {\n    return action;\n  }\n}\n\nmodule.exports = function frameguard(options) {\n  var headerValue = getHeaderValueFromOptions(options);\n  return function frameguard(_req, res, next) {\n    res.setHeader('X-Frame-Options', headerValue);\n    next();\n  };\n};","map":{"version":3,"sources":["/home/fizoumizou/Documents/pfe/react/node_modules/frameguard/dist/index.js"],"names":["parseActionOption","actionOption","invalidActionErr","Error","undefined","String","valueOf","result","toUpperCase","indexOf","parseDomainOption","domainOption","length","getHeaderValueFromOptions","options","action","domain","module","exports","frameguard","headerValue","_req","res","next","setHeader"],"mappings":"AAAA;;AACA,SAASA,iBAAT,CAA2BC,YAA3B,EAAyC;AACrC,MAAIC,gBAAgB,GAAG,IAAIC,KAAJ,CAAU,kEAAV,CAAvB;;AACA,MAAIF,YAAY,KAAKG,SAArB,EAAgC;AAC5BH,IAAAA,YAAY,GAAG,YAAf;AACH,GAFD,MAGK,IAAIA,YAAY,YAAYI,MAA5B,EAAoC;AACrCJ,IAAAA,YAAY,GAAGA,YAAY,CAACK,OAAb,EAAf;AACH;;AACD,MAAIC,MAAJ;;AACA,MAAI,OAAON,YAAP,KAAwB,QAA5B,EAAsC;AAClCM,IAAAA,MAAM,GAAGN,YAAY,CAACO,WAAb,EAAT;AACH,GAFD,MAGK;AACD,UAAMN,gBAAN;AACH;;AACD,MAAIK,MAAM,KAAK,WAAf,EAA4B;AACxBA,IAAAA,MAAM,GAAG,YAAT;AACH,GAFD,MAGK,IAAIA,MAAM,KAAK,aAAf,EAA8B;AAC/BA,IAAAA,MAAM,GAAG,YAAT;AACH;;AACD,MAAI,CAAC,MAAD,EAAS,YAAT,EAAuB,YAAvB,EAAqCE,OAArC,CAA6CF,MAA7C,MAAyD,CAAC,CAA9D,EAAiE;AAC7D,UAAML,gBAAN;AACH;;AACD,SAAOK,MAAP;AACH;;AACD,SAASG,iBAAT,CAA2BC,YAA3B,EAAyC;AACrC,MAAIA,YAAY,YAAYN,MAA5B,EAAoC;AAChCM,IAAAA,YAAY,GAAGA,YAAY,CAACL,OAAb,EAAf;AACH;;AACD,MAAI,OAAOK,YAAP,KAAwB,QAA5B,EAAsC;AAClC,UAAM,IAAIR,KAAJ,CAAU,uDAAV,CAAN;AACH,GAFD,MAGK,IAAI,CAACQ,YAAY,CAACC,MAAlB,EAA0B;AAC3B,UAAM,IAAIT,KAAJ,CAAU,qCAAV,CAAN;AACH;;AACD,SAAOQ,YAAP;AACH;;AACD,SAASE,yBAAT,CAAmCC,OAAnC,EAA4C;AACxCA,EAAAA,OAAO,GAAGA,OAAO,IAAI,EAArB;AACA,MAAIC,MAAM,GAAGf,iBAAiB,CAACc,OAAO,CAACC,MAAT,CAA9B;;AACA,MAAIA,MAAM,KAAK,YAAf,EAA6B;AACzB,QAAIC,MAAM,GAAGN,iBAAiB,CAACI,OAAO,CAACE,MAAT,CAA9B;AACA,WAAOD,MAAM,GAAG,GAAT,GAAeC,MAAtB;AACH,GAHD,MAIK;AACD,WAAOD,MAAP;AACH;AACJ;;AACDE,MAAM,CAACC,OAAP,GAAiB,SAASC,UAAT,CAAoBL,OAApB,EAA6B;AAC1C,MAAIM,WAAW,GAAGP,yBAAyB,CAACC,OAAD,CAA3C;AACA,SAAO,SAASK,UAAT,CAAoBE,IAApB,EAA0BC,GAA1B,EAA+BC,IAA/B,EAAqC;AACxCD,IAAAA,GAAG,CAACE,SAAJ,CAAc,iBAAd,EAAiCJ,WAAjC;AACAG,IAAAA,IAAI;AACP,GAHD;AAIH,CAND","sourcesContent":["\"use strict\";\nfunction parseActionOption(actionOption) {\n    var invalidActionErr = new Error('action must be undefined, \"DENY\", \"ALLOW-FROM\", or \"SAMEORIGIN\".');\n    if (actionOption === undefined) {\n        actionOption = 'SAMEORIGIN';\n    }\n    else if (actionOption instanceof String) {\n        actionOption = actionOption.valueOf();\n    }\n    var result;\n    if (typeof actionOption === 'string') {\n        result = actionOption.toUpperCase();\n    }\n    else {\n        throw invalidActionErr;\n    }\n    if (result === 'ALLOWFROM') {\n        result = 'ALLOW-FROM';\n    }\n    else if (result === 'SAME-ORIGIN') {\n        result = 'SAMEORIGIN';\n    }\n    if (['DENY', 'ALLOW-FROM', 'SAMEORIGIN'].indexOf(result) === -1) {\n        throw invalidActionErr;\n    }\n    return result;\n}\nfunction parseDomainOption(domainOption) {\n    if (domainOption instanceof String) {\n        domainOption = domainOption.valueOf();\n    }\n    if (typeof domainOption !== 'string') {\n        throw new Error('ALLOW-FROM action requires a string domain parameter.');\n    }\n    else if (!domainOption.length) {\n        throw new Error('domain parameter must not be empty.');\n    }\n    return domainOption;\n}\nfunction getHeaderValueFromOptions(options) {\n    options = options || {};\n    var action = parseActionOption(options.action);\n    if (action === 'ALLOW-FROM') {\n        var domain = parseDomainOption(options.domain);\n        return action + \" \" + domain;\n    }\n    else {\n        return action;\n    }\n}\nmodule.exports = function frameguard(options) {\n    var headerValue = getHeaderValueFromOptions(options);\n    return function frameguard(_req, res, next) {\n        res.setHeader('X-Frame-Options', headerValue);\n        next();\n    };\n};\n"]},"metadata":{},"sourceType":"script"}