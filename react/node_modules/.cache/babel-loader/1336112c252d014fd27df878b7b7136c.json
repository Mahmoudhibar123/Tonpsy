{"ast":null,"code":"\"use strict\";\n\nfunction parseMaxAge(option) {\n  if (option === undefined) {\n    return 0;\n  }\n\n  if (typeof option !== 'number' || option < 0) {\n    throw new Error(option + \" is not a valid value for maxAge. Please choose a positive integer.\");\n  }\n\n  return option;\n}\n\nfunction getHeaderValueFromOptions(options) {\n  options = options || {};\n  var directives = [];\n\n  if (options.enforce) {\n    directives.push('enforce');\n  }\n\n  directives.push(\"max-age=\" + parseMaxAge(options.maxAge));\n\n  if (options.reportUri) {\n    directives.push(\"report-uri=\\\"\" + options.reportUri + \"\\\"\");\n  }\n\n  return directives.join(', ');\n}\n\nmodule.exports = function expectCt(options) {\n  var headerValue = getHeaderValueFromOptions(options);\n  return function expectCt(_req, res, next) {\n    res.setHeader('Expect-CT', headerValue);\n    next();\n  };\n};","map":{"version":3,"sources":["/home/fizoumizou/Documents/pfe/react/node_modules/expect-ct/dist/index.js"],"names":["parseMaxAge","option","undefined","Error","getHeaderValueFromOptions","options","directives","enforce","push","maxAge","reportUri","join","module","exports","expectCt","headerValue","_req","res","next","setHeader"],"mappings":"AAAA;;AACA,SAASA,WAAT,CAAqBC,MAArB,EAA6B;AACzB,MAAIA,MAAM,KAAKC,SAAf,EAA0B;AACtB,WAAO,CAAP;AACH;;AACD,MAAI,OAAOD,MAAP,KAAkB,QAAlB,IAA8BA,MAAM,GAAG,CAA3C,EAA8C;AAC1C,UAAM,IAAIE,KAAJ,CAAUF,MAAM,GAAG,qEAAnB,CAAN;AACH;;AACD,SAAOA,MAAP;AACH;;AACD,SAASG,yBAAT,CAAmCC,OAAnC,EAA4C;AACxCA,EAAAA,OAAO,GAAGA,OAAO,IAAI,EAArB;AACA,MAAIC,UAAU,GAAG,EAAjB;;AACA,MAAID,OAAO,CAACE,OAAZ,EAAqB;AACjBD,IAAAA,UAAU,CAACE,IAAX,CAAgB,SAAhB;AACH;;AACDF,EAAAA,UAAU,CAACE,IAAX,CAAgB,aAAaR,WAAW,CAACK,OAAO,CAACI,MAAT,CAAxC;;AACA,MAAIJ,OAAO,CAACK,SAAZ,EAAuB;AACnBJ,IAAAA,UAAU,CAACE,IAAX,CAAgB,kBAAkBH,OAAO,CAACK,SAA1B,GAAsC,IAAtD;AACH;;AACD,SAAOJ,UAAU,CAACK,IAAX,CAAgB,IAAhB,CAAP;AACH;;AACDC,MAAM,CAACC,OAAP,GAAiB,SAASC,QAAT,CAAkBT,OAAlB,EAA2B;AACxC,MAAIU,WAAW,GAAGX,yBAAyB,CAACC,OAAD,CAA3C;AACA,SAAO,SAASS,QAAT,CAAkBE,IAAlB,EAAwBC,GAAxB,EAA6BC,IAA7B,EAAmC;AACtCD,IAAAA,GAAG,CAACE,SAAJ,CAAc,WAAd,EAA2BJ,WAA3B;AACAG,IAAAA,IAAI;AACP,GAHD;AAIH,CAND","sourcesContent":["\"use strict\";\nfunction parseMaxAge(option) {\n    if (option === undefined) {\n        return 0;\n    }\n    if (typeof option !== 'number' || option < 0) {\n        throw new Error(option + \" is not a valid value for maxAge. Please choose a positive integer.\");\n    }\n    return option;\n}\nfunction getHeaderValueFromOptions(options) {\n    options = options || {};\n    var directives = [];\n    if (options.enforce) {\n        directives.push('enforce');\n    }\n    directives.push(\"max-age=\" + parseMaxAge(options.maxAge));\n    if (options.reportUri) {\n        directives.push(\"report-uri=\\\"\" + options.reportUri + \"\\\"\");\n    }\n    return directives.join(', ');\n}\nmodule.exports = function expectCt(options) {\n    var headerValue = getHeaderValueFromOptions(options);\n    return function expectCt(_req, res, next) {\n        res.setHeader('Expect-CT', headerValue);\n        next();\n    };\n};\n"]},"metadata":{},"sourceType":"script"}