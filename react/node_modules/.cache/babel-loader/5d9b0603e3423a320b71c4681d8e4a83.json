{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nvar config_1 = __importDefault(require(\"../../config\"));\n\nvar is_function_1 = __importDefault(require(\"../../is-function\"));\n\nmodule.exports = function sandboxCheck(key, value) {\n  if (value === false) {\n    return;\n  }\n\n  if (value === true) {\n    return;\n  }\n\n  if (!Array.isArray(value)) {\n    throw new Error(\"\\\"\" + value + \"\\\" is not a valid value for \" + key + \". Use an array of strings or `true`.\");\n  }\n\n  if (value.length === 0) {\n    throw new Error(key + \" must have at least one value. To block everything, set \" + key + \" to `true`.\");\n  }\n\n  value.forEach(function (expression) {\n    if (is_function_1.default(expression)) {\n      return;\n    }\n\n    if (config_1.default.sandboxDirectives.indexOf(expression) === -1) {\n      throw new Error(\"\\\"\" + expression + \"\\\" is not a valid \" + key + \" directive. Remove it.\");\n    }\n  });\n};","map":{"version":3,"sources":["/home/fizoumizou/Documents/pfe/react/node_modules/helmet-csp/dist/lib/check-options/check-directive/sandbox.js"],"names":["__importDefault","mod","__esModule","config_1","require","is_function_1","module","exports","sandboxCheck","key","value","Array","isArray","Error","length","forEach","expression","default","sandboxDirectives","indexOf"],"mappings":"AAAA;;AACA,IAAIA,eAAe,GAAI,QAAQ,KAAKA,eAAd,IAAkC,UAAUC,GAAV,EAAe;AACnE,SAAQA,GAAG,IAAIA,GAAG,CAACC,UAAZ,GAA0BD,GAA1B,GAAgC;AAAE,eAAWA;AAAb,GAAvC;AACH,CAFD;;AAGA,IAAIE,QAAQ,GAAGH,eAAe,CAACI,OAAO,CAAC,cAAD,CAAR,CAA9B;;AACA,IAAIC,aAAa,GAAGL,eAAe,CAACI,OAAO,CAAC,mBAAD,CAAR,CAAnC;;AACAE,MAAM,CAACC,OAAP,GAAiB,SAASC,YAAT,CAAsBC,GAAtB,EAA2BC,KAA3B,EAAkC;AAC/C,MAAIA,KAAK,KAAK,KAAd,EAAqB;AACjB;AACH;;AACD,MAAIA,KAAK,KAAK,IAAd,EAAoB;AAChB;AACH;;AACD,MAAI,CAACC,KAAK,CAACC,OAAN,CAAcF,KAAd,CAAL,EAA2B;AACvB,UAAM,IAAIG,KAAJ,CAAU,OAAOH,KAAP,GAAe,8BAAf,GAAgDD,GAAhD,GAAsD,sCAAhE,CAAN;AACH;;AACD,MAAIC,KAAK,CAACI,MAAN,KAAiB,CAArB,EAAwB;AACpB,UAAM,IAAID,KAAJ,CAAUJ,GAAG,GAAG,0DAAN,GAAmEA,GAAnE,GAAyE,aAAnF,CAAN;AACH;;AACDC,EAAAA,KAAK,CAACK,OAAN,CAAc,UAAUC,UAAV,EAAsB;AAChC,QAAIX,aAAa,CAACY,OAAd,CAAsBD,UAAtB,CAAJ,EAAuC;AACnC;AACH;;AACD,QAAIb,QAAQ,CAACc,OAAT,CAAiBC,iBAAjB,CAAmCC,OAAnC,CAA2CH,UAA3C,MAA2D,CAAC,CAAhE,EAAmE;AAC/D,YAAM,IAAIH,KAAJ,CAAU,OAAOG,UAAP,GAAoB,oBAApB,GAA2CP,GAA3C,GAAiD,wBAA3D,CAAN;AACH;AACJ,GAPD;AAQH,CArBD","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar config_1 = __importDefault(require(\"../../config\"));\nvar is_function_1 = __importDefault(require(\"../../is-function\"));\nmodule.exports = function sandboxCheck(key, value) {\n    if (value === false) {\n        return;\n    }\n    if (value === true) {\n        return;\n    }\n    if (!Array.isArray(value)) {\n        throw new Error(\"\\\"\" + value + \"\\\" is not a valid value for \" + key + \". Use an array of strings or `true`.\");\n    }\n    if (value.length === 0) {\n        throw new Error(key + \" must have at least one value. To block everything, set \" + key + \" to `true`.\");\n    }\n    value.forEach(function (expression) {\n        if (is_function_1.default(expression)) {\n            return;\n        }\n        if (config_1.default.sandboxDirectives.indexOf(expression) === -1) {\n            throw new Error(\"\\\"\" + expression + \"\\\" is not a valid \" + key + \" directive. Remove it.\");\n        }\n    });\n};\n"]},"metadata":{},"sourceType":"script"}