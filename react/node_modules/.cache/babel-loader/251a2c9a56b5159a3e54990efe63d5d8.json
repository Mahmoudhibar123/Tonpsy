{"ast":null,"code":"\"use strict\";\n\nfunction isPlainObject(value) {\n  return Boolean(value && !Array.isArray(value) && typeof value === 'object');\n}\n\nfunction getHeaderValueFromOptions(options) {\n  var FEATURES = {\n    accelerometer: 'accelerometer',\n    ambientLightSensor: 'ambient-light-sensor',\n    autoplay: 'autoplay',\n    camera: 'camera',\n    documentDomain: 'document-domain',\n    documentWrite: 'document-write',\n    encryptedMedia: 'encrypted-media',\n    fontDisplayLateSwap: 'font-display-late-swap',\n    fullscreen: 'fullscreen',\n    geolocation: 'geolocation',\n    gyroscope: 'gyroscope',\n    layoutAnimations: 'layout-animations',\n    legacyImageFormats: 'legacy-image-formats',\n    loadingFrameDefaultEager: 'loading-frame-default-eager',\n    magnetometer: 'magnetometer',\n    microphone: 'microphone',\n    midi: 'midi',\n    notifications: 'notifications',\n    oversizedImages: 'oversized-images',\n    payment: 'payment',\n    pictureInPicture: 'picture-in-picture',\n    push: 'push',\n    serial: 'serial',\n    speaker: 'speaker',\n    syncScript: 'sync-script',\n    syncXhr: 'sync-xhr',\n    unoptimizedImages: 'unoptimized-images',\n    unoptimizedLosslessImages: 'unoptimized-lossless-images',\n    unoptimizedLossyImages: 'unoptimized-lossy-images',\n    unsizedMedia: 'unsized-media',\n    usb: 'usb',\n    verticalScroll: 'vertical-scroll',\n    vibrate: 'vibrate',\n    vr: 'vr',\n    wakeLock: 'wake-lock',\n    xr: 'xr'\n  };\n\n  if (!isPlainObject(options)) {\n    throw new Error('featurePolicy must be called with an object argument. See the documentation.');\n  }\n\n  var features = options.features;\n\n  if (!isPlainObject(features)) {\n    throw new Error('featurePolicy must have a single key, \"features\", which is an object of features. See the documentation.');\n  }\n\n  var result = Object.keys(features).map(function (featureKeyCamelCase) {\n    if (!Object.prototype.hasOwnProperty.call(FEATURES, featureKeyCamelCase)) {\n      throw new Error(\"featurePolicy does not support the \\\"\" + featureKeyCamelCase + \"\\\" feature.\");\n    }\n\n    var featureValue = features[featureKeyCamelCase];\n\n    if (!Array.isArray(featureValue) || featureValue.length === 0) {\n      throw new Error(\"The value of the \\\"\" + featureKeyCamelCase + \"\\\" feature must be a non-empty array.\");\n    }\n\n    var containsStar = false;\n    var containsNone = false;\n    featureValue.forEach(function (allowed) {\n      if (allowed === '*') {\n        containsStar = true;\n      } else if (allowed === \"'none'\") {\n        containsNone = true;\n      } else if (allowed === 'self') {\n        throw new Error(\"'self' must be quoted.\");\n      } else if (allowed === 'none') {\n        throw new Error(\"'none' must be quoted.\");\n      }\n    });\n\n    if (featureValue.length > 1) {\n      if (containsStar) {\n        throw new Error(\"The value of the \\\"\" + featureKeyCamelCase + \"\\\" feature cannot contain * and other values.\");\n      } else if (containsNone) {\n        throw new Error(\"The value of the \\\"\" + featureKeyCamelCase + \"\\\" feature cannot contain 'none' and other values.\");\n      }\n    }\n\n    var featureKeyDashed = FEATURES[featureKeyCamelCase];\n    return [featureKeyDashed].concat(featureValue).join(' ');\n  }).join(';');\n\n  if (result.length === 0) {\n    throw new Error('At least one feature is required.');\n  }\n\n  return result;\n}\n\nmodule.exports = function featurePolicy(options) {\n  var headerValue = getHeaderValueFromOptions(options);\n  return function featurePolicy(_req, res, next) {\n    res.setHeader('Feature-Policy', headerValue);\n    next();\n  };\n};","map":{"version":3,"sources":["/home/fizoumizou/Documents/pfe/react/node_modules/feature-policy/dist/index.js"],"names":["isPlainObject","value","Boolean","Array","isArray","getHeaderValueFromOptions","options","FEATURES","accelerometer","ambientLightSensor","autoplay","camera","documentDomain","documentWrite","encryptedMedia","fontDisplayLateSwap","fullscreen","geolocation","gyroscope","layoutAnimations","legacyImageFormats","loadingFrameDefaultEager","magnetometer","microphone","midi","notifications","oversizedImages","payment","pictureInPicture","push","serial","speaker","syncScript","syncXhr","unoptimizedImages","unoptimizedLosslessImages","unoptimizedLossyImages","unsizedMedia","usb","verticalScroll","vibrate","vr","wakeLock","xr","Error","features","result","Object","keys","map","featureKeyCamelCase","prototype","hasOwnProperty","call","featureValue","length","containsStar","containsNone","forEach","allowed","featureKeyDashed","concat","join","module","exports","featurePolicy","headerValue","_req","res","next","setHeader"],"mappings":"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","sourcesContent":["\"use strict\";\nfunction isPlainObject(value) {\n    return Boolean(value &&\n        !Array.isArray(value) &&\n        typeof value === 'object');\n}\nfunction getHeaderValueFromOptions(options) {\n    var FEATURES = {\n        accelerometer: 'accelerometer',\n        ambientLightSensor: 'ambient-light-sensor',\n        autoplay: 'autoplay',\n        camera: 'camera',\n        documentDomain: 'document-domain',\n        documentWrite: 'document-write',\n        encryptedMedia: 'encrypted-media',\n        fontDisplayLateSwap: 'font-display-late-swap',\n        fullscreen: 'fullscreen',\n        geolocation: 'geolocation',\n        gyroscope: 'gyroscope',\n        layoutAnimations: 'layout-animations',\n        legacyImageFormats: 'legacy-image-formats',\n        loadingFrameDefaultEager: 'loading-frame-default-eager',\n        magnetometer: 'magnetometer',\n        microphone: 'microphone',\n        midi: 'midi',\n        notifications: 'notifications',\n        oversizedImages: 'oversized-images',\n        payment: 'payment',\n        pictureInPicture: 'picture-in-picture',\n        push: 'push',\n        serial: 'serial',\n        speaker: 'speaker',\n        syncScript: 'sync-script',\n        syncXhr: 'sync-xhr',\n        unoptimizedImages: 'unoptimized-images',\n        unoptimizedLosslessImages: 'unoptimized-lossless-images',\n        unoptimizedLossyImages: 'unoptimized-lossy-images',\n        unsizedMedia: 'unsized-media',\n        usb: 'usb',\n        verticalScroll: 'vertical-scroll',\n        vibrate: 'vibrate',\n        vr: 'vr',\n        wakeLock: 'wake-lock',\n        xr: 'xr',\n    };\n    if (!isPlainObject(options)) {\n        throw new Error('featurePolicy must be called with an object argument. See the documentation.');\n    }\n    var features = options.features;\n    if (!isPlainObject(features)) {\n        throw new Error('featurePolicy must have a single key, \"features\", which is an object of features. See the documentation.');\n    }\n    var result = Object.keys(features).map(function (featureKeyCamelCase) {\n        if (!Object.prototype.hasOwnProperty.call(FEATURES, featureKeyCamelCase)) {\n            throw new Error(\"featurePolicy does not support the \\\"\" + featureKeyCamelCase + \"\\\" feature.\");\n        }\n        var featureValue = features[featureKeyCamelCase];\n        if (!Array.isArray(featureValue) || featureValue.length === 0) {\n            throw new Error(\"The value of the \\\"\" + featureKeyCamelCase + \"\\\" feature must be a non-empty array.\");\n        }\n        var containsStar = false;\n        var containsNone = false;\n        featureValue.forEach(function (allowed) {\n            if (allowed === '*') {\n                containsStar = true;\n            }\n            else if (allowed === \"'none'\") {\n                containsNone = true;\n            }\n            else if (allowed === 'self') {\n                throw new Error(\"'self' must be quoted.\");\n            }\n            else if (allowed === 'none') {\n                throw new Error(\"'none' must be quoted.\");\n            }\n        });\n        if (featureValue.length > 1) {\n            if (containsStar) {\n                throw new Error(\"The value of the \\\"\" + featureKeyCamelCase + \"\\\" feature cannot contain * and other values.\");\n            }\n            else if (containsNone) {\n                throw new Error(\"The value of the \\\"\" + featureKeyCamelCase + \"\\\" feature cannot contain 'none' and other values.\");\n            }\n        }\n        var featureKeyDashed = FEATURES[featureKeyCamelCase];\n        return [featureKeyDashed].concat(featureValue).join(' ');\n    }).join(';');\n    if (result.length === 0) {\n        throw new Error('At least one feature is required.');\n    }\n    return result;\n}\nmodule.exports = function featurePolicy(options) {\n    var headerValue = getHeaderValueFromOptions(options);\n    return function featurePolicy(_req, res, next) {\n        res.setHeader('Feature-Policy', headerValue);\n        next();\n    };\n};\n"]},"metadata":{},"sourceType":"script"}