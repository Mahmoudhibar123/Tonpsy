{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nvar dasherize_1 = __importDefault(require(\"dasherize\"));\n\nvar check_directive_1 = __importDefault(require(\"./check-directive\"));\n\nfunction isObject(value) {\n  return Object.prototype.toString.call(value) === '[object Object]';\n}\n\nmodule.exports = function (options) {\n  if (!isObject(options)) {\n    throw new Error('csp must be called with an object argument. See the documentation.');\n  }\n\n  var directives = options.directives;\n\n  if (!isObject(directives) || Object.keys(directives).length === 0) {\n    throw new Error('csp must have at least one directive under the \"directives\" key. See the documentation.');\n  }\n\n  Object.keys(directives).forEach(function (directiveKey) {\n    var typedKey = directiveKey;\n    check_directive_1.default(dasherize_1.default(directiveKey), directives[typedKey], options);\n  });\n};","map":{"version":3,"sources":["/home/fizoumizou/Documents/pfe/react/node_modules/helmet-csp/dist/lib/check-options/index.js"],"names":["__importDefault","mod","__esModule","dasherize_1","require","check_directive_1","isObject","value","Object","prototype","toString","call","module","exports","options","Error","directives","keys","length","forEach","directiveKey","typedKey","default"],"mappings":"AAAA;;AACA,IAAIA,eAAe,GAAI,QAAQ,KAAKA,eAAd,IAAkC,UAAUC,GAAV,EAAe;AACnE,SAAQA,GAAG,IAAIA,GAAG,CAACC,UAAZ,GAA0BD,GAA1B,GAAgC;AAAE,eAAWA;AAAb,GAAvC;AACH,CAFD;;AAGA,IAAIE,WAAW,GAAGH,eAAe,CAACI,OAAO,CAAC,WAAD,CAAR,CAAjC;;AACA,IAAIC,iBAAiB,GAAGL,eAAe,CAACI,OAAO,CAAC,mBAAD,CAAR,CAAvC;;AACA,SAASE,QAAT,CAAkBC,KAAlB,EAAyB;AACrB,SAAOC,MAAM,CAACC,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+BJ,KAA/B,MAA0C,iBAAjD;AACH;;AACDK,MAAM,CAACC,OAAP,GAAiB,UAAUC,OAAV,EAAmB;AAChC,MAAI,CAACR,QAAQ,CAACQ,OAAD,CAAb,EAAwB;AACpB,UAAM,IAAIC,KAAJ,CAAU,oEAAV,CAAN;AACH;;AACD,MAAIC,UAAU,GAAGF,OAAO,CAACE,UAAzB;;AACA,MAAI,CAACV,QAAQ,CAACU,UAAD,CAAT,IAAyBR,MAAM,CAACS,IAAP,CAAYD,UAAZ,EAAwBE,MAAxB,KAAmC,CAAhE,EAAmE;AAC/D,UAAM,IAAIH,KAAJ,CAAU,yFAAV,CAAN;AACH;;AACDP,EAAAA,MAAM,CAACS,IAAP,CAAYD,UAAZ,EAAwBG,OAAxB,CAAgC,UAAUC,YAAV,EAAwB;AACpD,QAAIC,QAAQ,GAAGD,YAAf;AACAf,IAAAA,iBAAiB,CAACiB,OAAlB,CAA0BnB,WAAW,CAACmB,OAAZ,CAAoBF,YAApB,CAA1B,EAA6DJ,UAAU,CAACK,QAAD,CAAvE,EAAmFP,OAAnF;AACH,GAHD;AAIH,CAZD","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar dasherize_1 = __importDefault(require(\"dasherize\"));\nvar check_directive_1 = __importDefault(require(\"./check-directive\"));\nfunction isObject(value) {\n    return Object.prototype.toString.call(value) === '[object Object]';\n}\nmodule.exports = function (options) {\n    if (!isObject(options)) {\n        throw new Error('csp must be called with an object argument. See the documentation.');\n    }\n    var directives = options.directives;\n    if (!isObject(directives) || Object.keys(directives).length === 0) {\n        throw new Error('csp must have at least one directive under the \"directives\" key. See the documentation.');\n    }\n    Object.keys(directives).forEach(function (directiveKey) {\n        var typedKey = directiveKey;\n        check_directive_1.default(dasherize_1.default(directiveKey), directives[typedKey], options);\n    });\n};\n"]},"metadata":{},"sourceType":"script"}