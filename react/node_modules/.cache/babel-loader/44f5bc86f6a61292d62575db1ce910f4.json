{"ast":null,"code":"function detectBrowser() {\n  var navigator = window && window.navigator; // Fail early if it's not a browser\n\n  if (typeof window === 'undefined' || !window.navigator) {\n    return 'not a browser';\n  } // Firefox.\n\n\n  if (navigator.mozGetUserMedia) {\n    return 'Firefox';\n  }\n\n  if (navigator.webkitGetUserMedia) {\n    // Chrome, Chromium, Webview, Opera, all use the chrome shim for now\n    if (window.hasOwnProperty('webkitRTCPeerConnection')) {\n      return 'Chrome';\n    }\n\n    if (navigator.userAgent.match(/Version\\/(\\d+).(\\d+)/)) {\n      return 'Safari';\n    }\n\n    return 'WebKit browser without WebRTC support';\n  }\n\n  if (navigator.mediaDevices && navigator.userAgent.match(/Edge\\/(\\d+).(\\d+)$/)) {\n    // Edge.\n    return 'Edge';\n  }\n\n  if (navigator.userAgent.indexOf('MSIE ') > 0 || !!navigator.userAgent.match(/Trident.*rv\\:11\\./)) {\n    return 'Internet Explorer';\n  }\n\n  if (navigator.mediaDevices && navigator.userAgent.match(/AppleWebKit\\/(\\d+)\\./)) {\n    // Safari, with webkitGetUserMedia removed.\n    return 'Safari';\n  } // Default fallthrough: not supported.\n\n\n  return 'unsupported browser';\n}\n\n;\n\nfunction firefoxExtensionRequired() {\n  var match = navigator.userAgent.match(/(?:firefox|iceweasel|fxios)[ \\/](\\d+(\\.\\d+)?)/i);\n  var version = match && match.length > 1 && match[1] || '';\n  return version < '52.0';\n}\n\n;\n/* global chrome OT ScreenSharingAccPack OTKAnalytics define */\n\n(function () {\n  /** Include external dependencies */\n  var _;\n\n  var $;\n  var OTKAnalytics;\n\n  if (typeof module === 'object' && typeof module.exports === 'object') {\n    /* eslint-disable import/no-unresolved */\n    _ = require('underscore');\n    $ = require('jquery');\n    OTKAnalytics = require('opentok-solutions-logging');\n    /* eslint-enable import/no-unresolved */\n  } else {\n    _ = this._;\n    $ = this.$;\n    OTKAnalytics = this.OTKAnalytics;\n  }\n  /** Private Variables*/\n\n\n  var _this; // Reference to instance of ScreenSharingAccPack\n\n\n  var _active; // Currently sharing screen?\n\n\n  var _accPack; // Common layer API\n\n\n  var _session; // OpenTok session\n\n\n  var _screenSharingControl = ['<div class=\"ots-video-control circle share-screen\" id=\"startScreenSharing\"></div>'].join('\\n');\n\n  var _screenSharingView = ['<div class=\"hidden\" id=\"screenShareView\">', '<div class=\"ots-feed-main-video\">', '<div class=\"ots-feed-holder\" id=\"videoHolderScreenShare\"></div>', '<div class=\"ots-feed-mask\"></div>', '<img src=\"https://assets.tokbox.com/solutions/images/widget-video-mask.png\"/>', '</div>', '<div class=\"ots-feed-call-controls\" id=\"feedControlsFromScreen\">', '<button class=\"ots-icon-screen active hidden\" id=\"endScreenShareBtn\"></button>', '</div>', '</div>'].join('\\n');\n\n  var _screenDialogsExtensions = [\n  /* eslint-disable max-len */\n  '<div id=\"dialog-form-chrome\" class=\"ots-ss-modal\" style=\"display: none;\">', '<div class=\"ots-modal-body\">', '<div class=\"ots-modal-title with-icon\">', '<i class=\"ots-icon-share-large\"></i>', '<span>Screen Share<br/>Extension Installation</span>', '</div>', '<p>You need a Chrome extension to share your screen. Install Screensharing Extension. Once you have installed, please, click the share screen button again.</p>', '<button id=\"btn-install-plugin-chrome\" class=\"ots-btn-install\">Accept</button>', '<button id=\"btn-cancel-plugin-chrome\" class=\"ots-cancel-btn-install\"></button>', '</div>', '</div>', '<div id=\"dialog-form-ff\" class=\"ots-ss-modal\" style=\"display: none;\">', '<div class=\"ots-modal-body\">', '<div class=\"ots-modal-title with-icon\">', '<i class=\"ots-icon-share-large\"></i>', '<span>Screen Share<br/>Extension Installation</span>', '</div>', '<p>You need a Firefox extension to share your screen. Install Screensharing Extension. Once you have installed, refresh your browser and click the share screen button again.</p>', '<a href=\"#\" id=\"btn-install-plugin-ff\" class=\"ots-btn-install\">Install extension</a>', '<a href=\"#\" id=\"btn-cancel-plugin-ff\" class=\"ots-cancel-btn-install\"></a>', '</div>', '</div>'\n  /* eslint-enable max-len */\n  ].join('\\n');\n  /** Private Methods */\n\n  /** Analytics */\n\n\n  var _otkanalytics; // vars for the analytics logs. Internal use\n\n\n  var _logEventData = {\n    clientVersion: 'js-vsol-1.0.33',\n    // x.y.z filled by npm build script\n    componentId: 'screenSharingAccPack',\n    name: 'guidScreensharingAccPack',\n    actionInitialize: 'Init',\n    actionStart: 'Start',\n    actionEnd: 'End',\n    enableAnnotations: 'EnableAnnotations',\n    disableAnnotations: 'DisableAnnotations',\n    enableAudioScreenSharing: 'EnableAudioScreenSharing',\n    disableAudioScreenSharing: 'DisableAudioScreenSharing',\n    variationAttempt: 'Attempt',\n    variationError: 'Failure',\n    variationSuccess: 'Success'\n  };\n\n  var _logAnalytics = function _logAnalytics() {\n    // init the analytics logs\n    var _source = window.location.href;\n    var otkanalyticsData = {\n      clientVersion: _logEventData.clientVersion,\n      source: _source,\n      componentId: _logEventData.componentId,\n      name: _logEventData.name\n    };\n    _otkanalytics = new OTKAnalytics(otkanalyticsData);\n    var sessionInfo = {\n      sessionId: _session.id,\n      connectionId: _session.connection.connectionId,\n      partnerId: _session.apiKey\n    };\n\n    _otkanalytics.addSessionInfo(sessionInfo);\n  };\n\n  var _log = function _log(action, variation) {\n    var data = {\n      action: action,\n      variation: variation\n    };\n\n    _otkanalytics.logEvent(data);\n  };\n\n  var _defaultScreenProperties = {\n    insertMode: 'append',\n    width: '100%',\n    height: '100%',\n    showControls: false,\n    style: {\n      buttonDisplayMode: 'off'\n    },\n    videoSource: 'window'\n  };\n\n  var _setupUI = function _setupUI(parent) {\n    $('body').append(_this.screenDialogsExtensions);\n    _this.appendControl && $(_this.controlsContainer).append(_screenSharingControl);\n    $(parent).append(_screenSharingView);\n  };\n\n  var _toggleScreenSharingButton = function _toggleScreenSharingButton(show) {\n    $('#startScreenSharing')[show ? 'show' : 'hide']();\n  }; // Trigger event via common layer API\n\n\n  var _triggerEvent = function _triggerEvent(event, data) {\n    if (_accPack) {\n      _accPack.triggerEvent(event, data);\n    }\n  };\n  /**\n   * Create a publisher for the screen.  If we're using annotation, we first need\n   * to create the annotion window and get a reference to its annotation container\n   * element so that we can pass it to the initPublisher function.\n   * @returns {promise} < Resolve: [Object] Container element for annotation in external window >\n   */\n\n\n  var _initPublisher = function _initPublisher() {\n    var createPublisher = function createPublisher(publisherDiv) {\n      var innerDeferred = $.Deferred();\n\n      var getContainer = function getContainer() {\n        if (publisherDiv) {\n          return publisherDiv;\n        }\n\n        if (typeof _this.screenSharingContainer === 'function') {\n          return document.querySelector(_this.screenSharingContainer('publisher', 'screen'));\n        } else {\n          return _this.screenSharingContainer;\n        }\n      };\n\n      var container = getContainer();\n      var properties = _this.localScreenProperties || _this.localScreenProperties || _defaultScreenProperties;\n      _this.publisher = OT.initPublisher(container, properties, function (error) {\n        if (error) {\n          _triggerEvent('screenSharingError', error);\n\n          innerDeferred.reject(_.extend(_.omit(error, 'messsage'), {\n            message: 'Error starting the screen sharing'\n          }));\n        } else {\n          _this.publisher.on('mediaStopped', function () {\n            end();\n          });\n\n          innerDeferred.resolve();\n        }\n      });\n      return innerDeferred.promise();\n    };\n\n    var outerDeferred = $.Deferred();\n\n    if (_this.annotation && _this.externalWindow) {\n      _log(_logEventData.enableAnnotations, _logEventData.variationSuccess);\n\n      _accPack.setupExternalAnnotation().then(function (annotationWindow) {\n        _this.annotationWindow = annotationWindow || null;\n        var annotationElements = annotationWindow.createContainerElements();\n        createPublisher(annotationElements.publisher).then(function () {\n          outerDeferred.resolve(annotationElements.annotation);\n        });\n      });\n    } else {\n      createPublisher().then(function () {\n        outerDeferred.resolve();\n      });\n    }\n\n    return outerDeferred.promise();\n  };\n  /**\n   * Start publishing the screen\n   * @param annotationContainer\n   */\n\n\n  var _publish = function _publish(annotationContainer) {\n    _session.publish(_this.publisher, function (error) {\n      if (error) {\n        // Let's write our own error message\n        var customError = _.omit(error, 'message');\n\n        if (error.code === 1500 && navigator.userAgent.indexOf('Firefox') !== -1) {\n          $('#dialog-form-ff').toggle();\n        } else {\n          var errorMessage;\n\n          if (error.code === 1010) {\n            errorMessage = 'Check your network connection';\n          } else {\n            errorMessage = 'Error sharing the screen';\n          }\n\n          customError.message = errorMessage;\n\n          _triggerEvent('screenSharingError', customError);\n\n          _log(_logEventData.actionStart, _logEventData.variationError);\n        }\n      } else {\n        if (_this.annotation && _this.externalWindow) {\n          _accPack.linkAnnotation(_this.publisher, annotationContainer, _this.annotationWindow);\n\n          _log(_logEventData.actionInitialize, _logEventData.variationSuccess);\n        }\n\n        _active = true;\n\n        _triggerEvent('startScreenSharing', _this.publisher);\n\n        _log(_logEventData.actionStart, _logEventData.variationSuccess);\n      }\n    });\n  };\n  /**\n   * Stop publishing the screen\n   */\n\n\n  var _stopPublishing = function _stopPublishing() {\n    _session.unpublish(_this.publisher);\n  };\n  /** Public Methods */\n\n\n  var extensionAvailable = function extensionAvailable() {\n    var deferred = $.Deferred();\n\n    if (window.location.protocol === 'http:' && !_this.dev) {\n      alert(\"Screensharing only works under 'https', please add 'https://' in front of your debugger url.\");\n      deferred.reject('https required');\n    }\n\n    OT.checkScreenSharingCapability(function (response) {\n      if (!response.supported || response.extensionRegistered === false) {\n        alert('This browser does not support screen sharing! Please use Chrome, Firefox or IE!');\n        deferred.reject('browser support not available');\n      } else if (response.extensionInstalled === false) {\n        if (detectBrowser() === 'Firefox') {\n          if (!firefoxExtensionRequired()) {\n            deferred.resolve();\n          } else {\n            $('#dialog-form-ff').toggle();\n            deferred.reject('screensharing extension not installed');\n          }\n        } else {\n          $('#dialog-form-chrome').toggle();\n          deferred.reject('screensharing extension not installed');\n        }\n      } else {\n        deferred.resolve();\n      }\n    });\n    return deferred.promise();\n  };\n\n  var start = function start() {\n    _log(_logEventData.actionStart, _logEventData.variationAttempt);\n\n    extensionAvailable(_this.extensionID, _this.extensionPathFF).then(_initPublisher).then(_publish).fail(function (error) {\n      console.log('Error starting screensharing: ', error);\n\n      _log(_logEventData.actionStart, _logEventData.variationError);\n    });\n  };\n\n  var end = function end(callEnded) {\n    _stopPublishing();\n\n    _active = false;\n\n    if (callEnded) {\n      _toggleScreenSharingButton(false);\n    }\n\n    _triggerEvent('endScreenSharing', _this.publisher);\n\n    _log(_logEventData.actionEnd, _logEventData.variationSuccess);\n  };\n  /** Events */\n\n\n  var _registerEvents = function _registerEvents() {\n    if (!_accPack) {\n      return;\n    }\n\n    var events = ['startScreenSharing', 'endScreenSharing', 'screenSharingError'];\n\n    _accPack.registerEvents(events);\n  };\n\n  var _addScreenSharingListeners = function _addScreenSharingListeners() {\n    var startOrEnd = _.throttle(function () {\n      !!_active ? end() : start();\n    }, 750);\n\n    $('#startScreenSharing').on('click', startOrEnd);\n    /** Handlers for screensharing extension modal */\n\n    $('#btn-install-plugin-chrome').on('click', function () {\n      window.open(['https://chrome.google.com/webstore/detail/', _this.extensionID].join(''), '_blank');\n      $('#dialog-form-chrome').toggle();\n    });\n    $('#btn-cancel-plugin-chrome').on('click', function () {\n      $('#dialog-form-chrome').toggle();\n    });\n    $('#btn-install-plugin-ff').prop('href', _this.extensionPathFF);\n    $('#btn-install-plugin-ff').on('click', function () {\n      $('#dialog-form-ff').toggle();\n    });\n    $('#btn-cancel-plugin-ff').on('click', function () {\n      $('#dialog-form-ff').toggle();\n    });\n\n    if (!!_accPack) {\n      _accPack.registerEventListener('startCall', function () {\n        _toggleScreenSharingButton(true);\n      });\n\n      _accPack.registerEventListener('endCall', function () {\n        if (_active) {\n          end(true);\n        } else {\n          _toggleScreenSharingButton(false);\n        }\n      });\n\n      _accPack.registerEventListener('annotationWindowClosed', function () {\n        end();\n      });\n    }\n  };\n\n  var _validateExtension = function _validateExtension(extensionID, extensionPathFF, appendWebStoreLink) {\n    if (detectBrowser() === 'Chrome') {\n      if (!extensionID || !extensionID.length) {\n        throw new Error('Error starting the screensharing. Chrome extensionID required');\n      } else {\n        if (appendWebStoreLink) {\n          $('<link/>', {\n            rel: 'chrome-webstore-item',\n            href: ['https://chrome.google.com/webstore/detail/', extensionID].join('')\n          }).appendTo('head');\n        }\n\n        OT.registerScreenSharingExtension('chrome', extensionID, 2);\n      }\n    }\n  };\n\n  var _validateOptions = function _validateOptions(options) {\n    if (!_.property('session', options)) {\n      throw new Error('Screen Share Acc Pack requires an OpenTok session');\n    }\n\n    _session = _.property('session')(options);\n    _accPack = _.property('accPack')(options);\n    var appendLink = options.appendWebStoreLink === undefined ? true : options.appendWebStoreLink;\n\n    _validateExtension(_.property('extensionID')(options), _.property('extensionPathFF')(options), appendLink);\n  };\n  /**\n   * @constructor\n   * Represents a screensharing component\n   * @param {Object} options\n   * @param {String} options.session\n   * @param {Object} [options.accPack]\n   * @param {String} [options.extensionID]\n   * @param {String} [options.appendWebStoreLink]\n   * @param {String} [options.extentionPathFF]\n   * @param {String} [options.screensharingParent]\n   * @param {String} [options.screenDialogsExtensions]\n   * @param {String | Function} [options.screensharingContainer]\n   */\n\n\n  var ScreenSharingAccPack = function ScreenSharingAccPack(options) {\n    _this = this; // Check for required options\n\n    _validateOptions(options); // Extend our instance\n\n\n    var optionsProps = ['annotation', 'externalWindow', 'extensionURL', 'extensionID', 'appendWebStoreLink', 'extensionPathFF', 'screenSharingContainer', 'screenSharingParent', 'controlsContainer', 'screenProperties', 'localScreenProperties', 'appendControl', 'dev', 'screenDialogsExtensions'];\n\n    _.extend(_this, _.defaults(_.pick(options, optionsProps), {\n      screenSharingParent: '#videoContainer',\n      screenSharingContainer: document.getElementById('videoHolderSharedScreen'),\n      controlsContainer: '#feedControls',\n      appendWebStoreLink: true,\n      appendControl: true,\n      screenDialogsExtensions: _screenDialogsExtensions\n    })); // Do UIy things\n\n\n    _setupUI(_this.screensharingParent);\n\n    _registerEvents();\n\n    _addScreenSharingListeners(); // init analytics logs\n\n\n    _logAnalytics();\n\n    _log(_logEventData.actionInitialize, _logEventData.variationSuccess);\n  };\n\n  ScreenSharingAccPack.prototype = {\n    constructor: ScreenSharingAccPack,\n    extensionAvailable: extensionAvailable,\n    start: start,\n    end: end\n  };\n\n  if (typeof exports === 'object') {\n    module.exports = ScreenSharingAccPack;\n  } else if (typeof define === 'function' && define.amd) {\n    define(function () {\n      return ScreenSharingAccPack;\n    });\n  } else {\n    this.ScreenSharingAccPack = ScreenSharingAccPack;\n  }\n}).call(this);","map":{"version":3,"sources":["/home/fizoumizou/Documents/pfe/react/node_modules/opentok-screen-sharing/dist/opentok-screen-sharing.js"],"names":["detectBrowser","navigator","window","mozGetUserMedia","webkitGetUserMedia","hasOwnProperty","userAgent","match","mediaDevices","indexOf","firefoxExtensionRequired","version","length","_","$","OTKAnalytics","module","exports","require","_this","_active","_accPack","_session","_screenSharingControl","join","_screenSharingView","_screenDialogsExtensions","_otkanalytics","_logEventData","clientVersion","componentId","name","actionInitialize","actionStart","actionEnd","enableAnnotations","disableAnnotations","enableAudioScreenSharing","disableAudioScreenSharing","variationAttempt","variationError","variationSuccess","_logAnalytics","_source","location","href","otkanalyticsData","source","sessionInfo","sessionId","id","connectionId","connection","partnerId","apiKey","addSessionInfo","_log","action","variation","data","logEvent","_defaultScreenProperties","insertMode","width","height","showControls","style","buttonDisplayMode","videoSource","_setupUI","parent","append","screenDialogsExtensions","appendControl","controlsContainer","_toggleScreenSharingButton","show","_triggerEvent","event","triggerEvent","_initPublisher","createPublisher","publisherDiv","innerDeferred","Deferred","getContainer","screenSharingContainer","document","querySelector","container","properties","localScreenProperties","publisher","OT","initPublisher","error","reject","extend","omit","message","on","end","resolve","promise","outerDeferred","annotation","externalWindow","setupExternalAnnotation","then","annotationWindow","annotationElements","createContainerElements","_publish","annotationContainer","publish","customError","code","toggle","errorMessage","linkAnnotation","_stopPublishing","unpublish","extensionAvailable","deferred","protocol","dev","alert","checkScreenSharingCapability","response","supported","extensionRegistered","extensionInstalled","start","extensionID","extensionPathFF","fail","console","log","callEnded","_registerEvents","events","registerEvents","_addScreenSharingListeners","startOrEnd","throttle","open","prop","registerEventListener","_validateExtension","appendWebStoreLink","Error","rel","appendTo","registerScreenSharingExtension","_validateOptions","options","property","appendLink","undefined","ScreenSharingAccPack","optionsProps","defaults","pick","screenSharingParent","getElementById","screensharingParent","prototype","constructor","define","amd","call"],"mappings":"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","sourcesContent":["function detectBrowser() {\n\n  const navigator = window && window.navigator;\n\n  // Fail early if it's not a browser\n  if (typeof window === 'undefined' || !window.navigator) {\n    return 'not a browser';\n  }\n\n  // Firefox.\n  if (navigator.mozGetUserMedia) {\n    return 'Firefox';\n  }\n  if (navigator.webkitGetUserMedia) {\n    // Chrome, Chromium, Webview, Opera, all use the chrome shim for now\n    if (window.hasOwnProperty('webkitRTCPeerConnection')) {\n      return 'Chrome';\n    }\n    if (navigator.userAgent.match(/Version\\/(\\d+).(\\d+)/)) {\n      return 'Safari';\n    }\n    return 'WebKit browser without WebRTC support';\n  }\n\n  if (navigator.mediaDevices && navigator.userAgent.match(/Edge\\/(\\d+).(\\d+)$/)) { // Edge.\n    return 'Edge';\n  }\n\n  if (navigator.userAgent.indexOf('MSIE ') > 0 ||\n    !!navigator.userAgent.match(/Trident.*rv\\:11\\./)) {\n    return 'Internet Explorer';\n  }\n\n  if (navigator.mediaDevices && navigator.userAgent.match(/AppleWebKit\\/(\\d+)\\./)) {\n    // Safari, with webkitGetUserMedia removed.\n    return 'Safari';\n  }\n  // Default fallthrough: not supported.\n  return 'unsupported browser';\n};\n\nfunction firefoxExtensionRequired() {\n  var match = navigator.userAgent.match(/(?:firefox|iceweasel|fxios)[ \\/](\\d+(\\.\\d+)?)/i);\n  var version = (match && match.length > 1 && match[1]) || '';\n  return version < '52.0';\n};\n\n/* global chrome OT ScreenSharingAccPack OTKAnalytics define */\n(function () {\n\n  /** Include external dependencies */\n  var _;\n  var $;\n  var OTKAnalytics;\n\n  if (typeof module === 'object' && typeof module.exports === 'object') {\n    /* eslint-disable import/no-unresolved */\n    _ = require('underscore');\n    $ = require('jquery');\n    OTKAnalytics = require('opentok-solutions-logging');\n    /* eslint-enable import/no-unresolved */\n  } else {\n    _ = this._;\n    $ = this.$;\n    OTKAnalytics = this.OTKAnalytics;\n  }\n\n  /** Private Variables*/\n  var _this; // Reference to instance of ScreenSharingAccPack\n  var _active; // Currently sharing screen?\n  var _accPack; // Common layer API\n  var _session; // OpenTok session\n\n  var _screenSharingControl = [\n    '<div class=\"ots-video-control circle share-screen\" id=\"startScreenSharing\"></div>'\n  ].join('\\n');\n\n  var _screenSharingView = [\n    '<div class=\"hidden\" id=\"screenShareView\">',\n    '<div class=\"ots-feed-main-video\">',\n    '<div class=\"ots-feed-holder\" id=\"videoHolderScreenShare\"></div>',\n    '<div class=\"ots-feed-mask\"></div>',\n    '<img src=\"https://assets.tokbox.com/solutions/images/widget-video-mask.png\"/>',\n    '</div>',\n    '<div class=\"ots-feed-call-controls\" id=\"feedControlsFromScreen\">',\n    '<button class=\"ots-icon-screen active hidden\" id=\"endScreenShareBtn\"></button>',\n    '</div>',\n    '</div>'\n  ].join('\\n');\n\n  var _screenDialogsExtensions = [\n    /* eslint-disable max-len */\n    '<div id=\"dialog-form-chrome\" class=\"ots-ss-modal\" style=\"display: none;\">',\n    '<div class=\"ots-modal-body\">',\n    '<div class=\"ots-modal-title with-icon\">',\n    '<i class=\"ots-icon-share-large\"></i>',\n    '<span>Screen Share<br/>Extension Installation</span>',\n    '</div>',\n    '<p>You need a Chrome extension to share your screen. Install Screensharing Extension. Once you have installed, please, click the share screen button again.</p>',\n    '<button id=\"btn-install-plugin-chrome\" class=\"ots-btn-install\">Accept</button>',\n    '<button id=\"btn-cancel-plugin-chrome\" class=\"ots-cancel-btn-install\"></button>',\n    '</div>',\n    '</div>',\n    '<div id=\"dialog-form-ff\" class=\"ots-ss-modal\" style=\"display: none;\">',\n    '<div class=\"ots-modal-body\">',\n    '<div class=\"ots-modal-title with-icon\">',\n    '<i class=\"ots-icon-share-large\"></i>',\n    '<span>Screen Share<br/>Extension Installation</span>',\n    '</div>',\n    '<p>You need a Firefox extension to share your screen. Install Screensharing Extension. Once you have installed, refresh your browser and click the share screen button again.</p>',\n    '<a href=\"#\" id=\"btn-install-plugin-ff\" class=\"ots-btn-install\">Install extension</a>',\n    '<a href=\"#\" id=\"btn-cancel-plugin-ff\" class=\"ots-cancel-btn-install\"></a>',\n    '</div>',\n    '</div>'\n    /* eslint-enable max-len */\n  ].join('\\n');\n\n  /** Private Methods */\n\n  /** Analytics */\n  var _otkanalytics;\n\n  // vars for the analytics logs. Internal use\n  var _logEventData = {\n    clientVersion: 'js-vsol-1.0.33', // x.y.z filled by npm build script\n    componentId: 'screenSharingAccPack',\n    name: 'guidScreensharingAccPack',\n    actionInitialize: 'Init',\n    actionStart: 'Start',\n    actionEnd: 'End',\n    enableAnnotations: 'EnableAnnotations',\n    disableAnnotations: 'DisableAnnotations',\n    enableAudioScreenSharing: 'EnableAudioScreenSharing',\n    disableAudioScreenSharing: 'DisableAudioScreenSharing',\n    variationAttempt: 'Attempt',\n    variationError: 'Failure',\n    variationSuccess: 'Success',\n  };\n\n  var _logAnalytics = function () {\n\n    // init the analytics logs\n    var _source = window.location.href;\n\n    var otkanalyticsData = {\n      clientVersion: _logEventData.clientVersion,\n      source: _source,\n      componentId: _logEventData.componentId,\n      name: _logEventData.name\n    };\n\n    _otkanalytics = new OTKAnalytics(otkanalyticsData);\n\n    var sessionInfo = {\n      sessionId: _session.id,\n      connectionId: _session.connection.connectionId,\n      partnerId: _session.apiKey\n    };\n\n    _otkanalytics.addSessionInfo(sessionInfo);\n\n  };\n\n  var _log = function (action, variation) {\n\n    var data = {\n      action: action,\n      variation: variation\n    };\n    _otkanalytics.logEvent(data);\n  };\n\n  var _defaultScreenProperties = {\n    insertMode: 'append',\n    width: '100%',\n    height: '100%',\n    showControls: false,\n    style: {\n      buttonDisplayMode: 'off',\n    },\n    videoSource: 'window',\n  };\n\n  var _setupUI = function (parent) {\n    $('body').append(_this.screenDialogsExtensions);\n    _this.appendControl && $(_this.controlsContainer).append(_screenSharingControl);\n    $(parent).append(_screenSharingView);\n  };\n\n  var _toggleScreenSharingButton = function (show) {\n    $('#startScreenSharing')[show ? 'show' : 'hide']();\n  };\n\n  // Trigger event via common layer API\n  var _triggerEvent = function (event, data) {\n    if (_accPack) {\n      _accPack.triggerEvent(event, data);\n    }\n  };\n\n  /**\n   * Create a publisher for the screen.  If we're using annotation, we first need\n   * to create the annotion window and get a reference to its annotation container\n   * element so that we can pass it to the initPublisher function.\n   * @returns {promise} < Resolve: [Object] Container element for annotation in external window >\n   */\n  var _initPublisher = function () {\n\n    var createPublisher = function (publisherDiv) {\n\n      var innerDeferred = $.Deferred();\n\n      var getContainer = function () {\n        if (publisherDiv) { return publisherDiv; }\n        if (typeof _this.screenSharingContainer === 'function') {\n          return document.querySelector(_this.screenSharingContainer('publisher', 'screen'));\n        } else {\n          return _this.screenSharingContainer;\n        }\n      }\n\n      var container = getContainer();\n      var properties =\n        _this.localScreenProperties ||\n        _this.localScreenProperties ||\n        _defaultScreenProperties;\n\n      _this.publisher = OT.initPublisher(container, properties, function (error) {\n        if (error) {\n          _triggerEvent('screenSharingError', error);\n          innerDeferred.reject(_.extend(_.omit(error, 'messsage'), {\n            message: 'Error starting the screen sharing',\n          }));\n        } else {\n          _this.publisher.on('mediaStopped', function () {\n            end();\n          });\n          innerDeferred.resolve();\n        }\n      });\n\n      return innerDeferred.promise();\n    };\n\n    var outerDeferred = $.Deferred();\n\n    if (_this.annotation && _this.externalWindow) {\n      _log(_logEventData.enableAnnotations, _logEventData.variationSuccess);\n\n      _accPack.setupExternalAnnotation()\n        .then(function (annotationWindow) {\n          _this.annotationWindow = annotationWindow || null;\n          var annotationElements = annotationWindow.createContainerElements();\n          createPublisher(annotationElements.publisher)\n            .then(function () {\n              outerDeferred.resolve(annotationElements.annotation);\n            });\n\n        });\n    } else {\n\n      createPublisher()\n        .then(function () {\n          outerDeferred.resolve();\n        });\n\n    }\n\n    return outerDeferred.promise();\n  };\n\n\n  /**\n   * Start publishing the screen\n   * @param annotationContainer\n   */\n  var _publish = function (annotationContainer) {\n\n    _session.publish(_this.publisher, function (error) {\n      if (error) {\n\n        // Let's write our own error message\n        var customError = _.omit(error, 'message');\n\n        if (error.code === 1500 && navigator.userAgent.indexOf('Firefox') !== -1) {\n          $('#dialog-form-ff').toggle();\n        } else {\n\n          var errorMessage;\n\n          if (error.code === 1010) {\n            errorMessage = 'Check your network connection';\n          } else {\n            errorMessage = 'Error sharing the screen';\n          }\n\n          customError.message = errorMessage;\n          _triggerEvent('screenSharingError', customError);\n          _log(_logEventData.actionStart, _logEventData.variationError);\n        }\n      } else {\n        if (_this.annotation && _this.externalWindow) {\n          _accPack.linkAnnotation(_this.publisher, annotationContainer, _this.annotationWindow);\n          _log(_logEventData.actionInitialize, _logEventData.variationSuccess);\n        }\n        _active = true;\n        _triggerEvent('startScreenSharing', _this.publisher);\n        _log(_logEventData.actionStart, _logEventData.variationSuccess);\n      }\n    });\n\n  };\n\n  /**\n   * Stop publishing the screen\n   */\n  var _stopPublishing = function () {\n    _session.unpublish(_this.publisher);\n  };\n\n  /** Public Methods */\n\n  var extensionAvailable = function () {\n\n    var deferred = $.Deferred();\n\n    if (window.location.protocol === 'http:' && !_this.dev) {\n      alert(\"Screensharing only works under 'https', please add 'https://' in front of your debugger url.\");\n      deferred.reject('https required');\n    }\n\n    OT.checkScreenSharingCapability(function (response) {\n      if (!response.supported || response.extensionRegistered === false) {\n        alert('This browser does not support screen sharing! Please use Chrome, Firefox or IE!');\n        deferred.reject('browser support not available');\n      } else if (response.extensionInstalled === false) {\n        if (detectBrowser() === 'Firefox') {\n          if (!firefoxExtensionRequired()) {\n            deferred.resolve();\n          } else {\n            $('#dialog-form-ff').toggle();\n            deferred.reject('screensharing extension not installed');\n          }\n        } else {\n          $('#dialog-form-chrome').toggle();\n          deferred.reject('screensharing extension not installed');\n        }\n      } else {\n        deferred.resolve();\n      }\n    });\n\n    return deferred.promise();\n\n  };\n\n  var start = function () {\n    _log(_logEventData.actionStart, _logEventData.variationAttempt);\n    extensionAvailable(_this.extensionID, _this.extensionPathFF)\n      .then(_initPublisher)\n      .then(_publish)\n      .fail(function (error) {\n        console.log('Error starting screensharing: ', error);\n        _log(_logEventData.actionStart, _logEventData.variationError);\n      });\n  };\n\n  var end = function (callEnded) {\n    _stopPublishing();\n    _active = false;\n    if (callEnded) {\n      _toggleScreenSharingButton(false);\n    }\n    _triggerEvent('endScreenSharing', _this.publisher);\n    _log(_logEventData.actionEnd, _logEventData.variationSuccess);\n  };\n\n  /** Events */\n\n  var _registerEvents = function () {\n\n    if (!_accPack) {\n      return;\n    }\n\n    var events = ['startScreenSharing', 'endScreenSharing', 'screenSharingError'];\n    _accPack.registerEvents(events);\n  };\n\n  var _addScreenSharingListeners = function () {\n\n    var startOrEnd = _.throttle(function () {\n      !!_active ? end() : start();\n    }, 750);\n\n    $('#startScreenSharing').on('click', startOrEnd);\n\n    /** Handlers for screensharing extension modal */\n    $('#btn-install-plugin-chrome').on('click', function () {\n      window.open(['https://chrome.google.com/webstore/detail/', _this.extensionID].join(''), '_blank');\n      $('#dialog-form-chrome').toggle();\n    });\n\n    $('#btn-cancel-plugin-chrome').on('click', function () {\n      $('#dialog-form-chrome').toggle();\n    });\n\n    $('#btn-install-plugin-ff').prop('href', _this.extensionPathFF);\n\n    $('#btn-install-plugin-ff').on('click', function () {\n      $('#dialog-form-ff').toggle();\n    });\n\n    $('#btn-cancel-plugin-ff').on('click', function () {\n      $('#dialog-form-ff').toggle();\n    });\n\n    if (!!_accPack) {\n\n      _accPack.registerEventListener('startCall', function () {\n        _toggleScreenSharingButton(true);\n      });\n\n      _accPack.registerEventListener('endCall', function () {\n        if (_active) {\n          end(true);\n        } else {\n          _toggleScreenSharingButton(false);\n        }\n      });\n\n      _accPack.registerEventListener('annotationWindowClosed', function () {\n        end();\n      });\n    }\n\n  };\n\n  var _validateExtension = function (extensionID, extensionPathFF, appendWebStoreLink) {\n\n    if (detectBrowser() === 'Chrome') {\n      if (!extensionID || !extensionID.length) {\n        throw new Error('Error starting the screensharing. Chrome extensionID required');\n      } else {\n        if (appendWebStoreLink) {\n          $('<link/>', {\n            rel: 'chrome-webstore-item',\n            href: ['https://chrome.google.com/webstore/detail/', extensionID].join('')\n          }).appendTo('head');\n        }\n        OT.registerScreenSharingExtension('chrome', extensionID, 2);\n      }\n    }\n\n  };\n\n  var _validateOptions = function (options) {\n\n    if (!_.property('session', options)) {\n      throw new Error('Screen Share Acc Pack requires an OpenTok session');\n    }\n\n    _session = _.property('session')(options);\n    _accPack = _.property('accPack')(options);\n\n    var appendLink = options.appendWebStoreLink === undefined ? true : options.appendWebStoreLink;\n\n    _validateExtension(_.property('extensionID')(options), _.property('extensionPathFF')(options), appendLink);\n  };\n\n  /**\n   * @constructor\n   * Represents a screensharing component\n   * @param {Object} options\n   * @param {String} options.session\n   * @param {Object} [options.accPack]\n   * @param {String} [options.extensionID]\n   * @param {String} [options.appendWebStoreLink]\n   * @param {String} [options.extentionPathFF]\n   * @param {String} [options.screensharingParent]\n   * @param {String} [options.screenDialogsExtensions]\n   * @param {String | Function} [options.screensharingContainer]\n   */\n  var ScreenSharingAccPack = function (options) {\n\n    _this = this;\n\n    // Check for required options\n    _validateOptions(options);\n\n    // Extend our instance\n    var optionsProps = [\n      'annotation',\n      'externalWindow',\n      'extensionURL',\n      'extensionID',\n      'appendWebStoreLink',\n      'extensionPathFF',\n      'screenSharingContainer',\n      'screenSharingParent',\n      'controlsContainer',\n      'screenProperties',\n      'localScreenProperties',\n      'appendControl',\n      'dev',\n      'screenDialogsExtensions',\n    ];\n\n\n    _.extend(_this, _.defaults(_.pick(options, optionsProps), {\n      screenSharingParent: '#videoContainer',\n      screenSharingContainer: document.getElementById('videoHolderSharedScreen'),\n      controlsContainer: '#feedControls',\n      appendWebStoreLink: true,\n      appendControl: true,\n      screenDialogsExtensions: _screenDialogsExtensions,\n    }));\n\n\n\n    // Do UIy things\n    _setupUI(_this.screensharingParent);\n    _registerEvents();\n    _addScreenSharingListeners();\n\n    // init analytics logs\n    _logAnalytics();\n    _log(_logEventData.actionInitialize, _logEventData.variationSuccess);\n  };\n\n  ScreenSharingAccPack.prototype = {\n    constructor: ScreenSharingAccPack,\n    extensionAvailable: extensionAvailable,\n    start: start,\n    end: end\n  };\n\n  if (typeof exports === 'object') {\n    module.exports = ScreenSharingAccPack;\n  } else if (typeof define === 'function' && define.amd) {\n    define(function () {\n      return ScreenSharingAccPack;\n    });\n  } else {\n    this.ScreenSharingAccPack = ScreenSharingAccPack;\n  }\n\n}.call(this));\n"]},"metadata":{},"sourceType":"script"}