{"ast":null,"code":"/* global OTKAnalytics define */\n(function () {\n  /** Include external dependencies */\n  var _;\n\n  var $;\n  var OTKAnalytics;\n\n  if (typeof module === 'object' && typeof module.exports === 'object') {\n    /* eslint-disable import/no-unresolved */\n    _ = require('underscore');\n    $ = require('jquery');\n    window.jQuery = $;\n    window.moment = require('moment');\n\n    require('kuende-livestamp');\n\n    OTKAnalytics = require('opentok-solutions-logging');\n    /* eslint-enable import/no-unresolved */\n  } else {\n    _ = this._;\n    $ = this.$;\n    window.jQuery = $;\n    window.moment = this.moment;\n    OTKAnalytics = this.OTKAnalytics;\n  } // Reference to instance of TextChatAccPack\n\n\n  var _this;\n\n  var _session;\n  /** Analytics */\n\n\n  var _otkanalytics;\n\n  var _logEventData = {\n    // vars for the analytics logs. Internal use\n    clientVersion: 'js-vsol-1.0.30',\n    // x.y.z filled by npm build script\n    componentId: 'textChatAccPack',\n    name: 'guidTextChatAccPack',\n    actionInitialize: 'Init',\n    actionStart: 'Start',\n    actionEnd: 'End',\n    actionOpen: 'OpenTC',\n    actionClose: 'CloseTC',\n    actionSendMessage: 'SendMessage',\n    actionReceiveMessage: 'ReceiveMessage',\n    actionSetMaxLength: 'SetMaxLength',\n    variationAttempt: 'Attempt',\n    variationError: 'Failure',\n    variationSuccess: 'Success'\n  };\n\n  var _logAnalytics = function _logAnalytics() {\n    // init the analytics logs\n    var _source = window.location.href;\n    var otkanalyticsData = {\n      clientVersion: _logEventData.clientVersion,\n      source: _source,\n      componentId: _logEventData.componentId,\n      name: _logEventData.name\n    };\n    _otkanalytics = new OTKAnalytics(otkanalyticsData);\n    var sessionInfo = {\n      sessionId: _session.id,\n      connectionId: _session.connection.connectionId,\n      partnerId: _session.apiKey\n    };\n\n    _otkanalytics.addSessionInfo(sessionInfo);\n  };\n\n  var _log = function _log(action, variation) {\n    var data = {\n      action: action,\n      variation: variation\n    };\n\n    _otkanalytics.logEvent(data);\n  };\n  /** End Analytics */\n  // State vars\n\n\n  var _enabled = false;\n  var _displayed = false;\n  var _initialized = false;\n  var _controlAdded = false;\n\n  var _sender;\n\n  var _composer;\n\n  var _lastMessage;\n\n  var _newMessages;\n\n  var _sentMessageHistory = [];\n  var _remoteParticipant = false; // Reference to Accelerator Pack Common Layer\n\n  var _accPack;\n\n  var _triggerEvent = function _triggerEvent(event, data) {\n    _accPack && _accPack.triggerEvent(event, data);\n  }; // Private methods\n\n\n  var renderUILayout = function renderUILayout() {\n    var deliveryMessage = _this.options.waitingMessage || 'Messages will be delivered once your contact arrives';\n    /* eslint-disable max-len, prefer-template */\n\n    return ['<div class=\"ots-text-chat-container\">', '<div class=\"ots-text-chat\">', '<div class=\"ots-messages-header ots-hidden\" id=\"chatHeader\">', '<span>Chat with</span>', '</div>', '<div id=\"otsChatWrap\">', '<div class=\"ots-messages-holder\" id=\"messagesHolder\">', '<div class=\"ots-messages-alert ots-hidden\" id=\"messagesWaiting\">' + deliveryMessage + '</div>', '<div class=\"ots-message-item ots-message-sent\">', '</div>', '</div>', '<div class=\"ots-send-message-box\">', '<input type=\"text\" maxlength=' + _this.options.limitCharacterMessage + ' class=\"ots-message-input\" placeholder=\"Enter your message here\" id=\"messageBox\">', '<button class=\"ots-icon-check\" id=\"sendMessage\" type=\"submit\"></button>', '<div class=\"ots-character-count\"><span><span id=\"characterCount\">0</span>/' + _this.options.limitCharacterMessage + ' characters</span></div>', '</div>', '</div>', '</div>', '</div>'].join('\\n');\n    /* eslint-enable max-len, prefer-template */\n  };\n\n  var _shouldAppendMessage = function _shouldAppendMessage(data) {\n    if (_lastMessage) {\n      return _lastMessage.sender.id === data.sender.id && _lastMessage.sender.id === data.sender.id;\n    }\n\n    return false;\n  };\n\n  var _cleanComposer = function _cleanComposer() {\n    _composer.value = '';\n    $('#characterCount').text('0');\n  };\n\n  var _getBubbleHtml = function _getBubbleHtml(message) {\n    /* eslint-disable max-len, prefer-template */\n    var bubble = ['<div class=\"' + message.messageClass + '\" >', '<div class=\"ots-user-name-initial\"> ' + message.username[0] + '</div>', '<div class=\"ots-item-timestamp\"> ' + message.username + ', <span data-livestamp=\" ' + new Date(message.time) + '\" </span></div>', '<div class=\"ots-item-text\">', '<span> ' + message.message + '</span>', '</div>', '</div>'].join('\\n');\n    /* eslint-enable max-len, prefer-template */\n\n    return bubble;\n  };\n\n  var _renderChatMessage = function _renderChatMessage(messageSenderId, messageSenderAlias, message, sentOn) {\n    var sentByClass = _sender.id === messageSenderId ? 'ots-message-item ots-message-sent' : 'ots-message-item';\n\n    var view = _getBubbleHtml({\n      username: messageSenderAlias,\n      message: message,\n      messageClass: sentByClass,\n      time: sentOn\n    });\n\n    var chatholder = $(_newMessages);\n    chatholder.append(view);\n    chatholder[0].scrollTop = chatholder[0].scrollHeight;\n  };\n\n  var _handleMessageSent = function _handleMessageSent(data) {\n    _cleanComposer();\n\n    if (_shouldAppendMessage(data)) {\n      $('.ots-item-text').last().append(['<span>', data.message, '</span>'].join(''));\n      var chatholder = $(_newMessages);\n      chatholder[0].scrollTop = chatholder[0].scrollHeight;\n    } else {\n      _renderChatMessage(_sender.id, _sender.alias, data.message, data.sentOn);\n    }\n\n    _lastMessage = data;\n\n    _triggerEvent('messageSent', data);\n  };\n\n  var _handleMessageError = function _handleMessageError(error) {\n    console.log(error.code, error.message);\n\n    if (error.code === 500) {\n      var view = _.template($('#chatError').html());\n\n      $(_this.comms_elements.messagesView).append(view());\n    }\n\n    _triggerEvent('errorSendingMessage', error);\n  };\n\n  var _showWaitingMessage = function _showWaitingMessage() {\n    var el = document.getElementById('messagesWaiting');\n    el && el.classList.remove('ots-hidden');\n    var parent = document.getElementById('messagesHolder');\n    parent && parent.classList.add('has-alert');\n  };\n\n  var _hideWaitingMessage = function _hideWaitingMessage() {\n    var el = document.getElementById('messagesWaiting');\n    el && el.classList.add('ots-hidden');\n    var parent = document.getElementById('messagesHolder');\n    parent && parent.classList.add('has-alert');\n  };\n\n  var _sendMessage = function _sendMessage(recipient, message) {\n    var deferred = new $.Deferred();\n\n    _sentMessageHistory.push({\n      recipient: recipient,\n      message: message\n    });\n\n    if (!_remoteParticipant) {\n      _showWaitingMessage();\n\n      deferred.resolve();\n    } else {\n      _hideWaitingMessage();\n    }\n\n    var messageData = {\n      text: message,\n      sender: {\n        id: _sender.id,\n        alias: _sender.alias\n      },\n      sentOn: Date.now()\n    }; // Add SEND_MESSAGE attempt log event\n\n    _log(_logEventData.actionSendMessage, _logEventData.variationAttempt);\n\n    if (recipient === undefined) {\n      _session.signal({\n        type: 'text-chat',\n        data: JSON.stringify(messageData)\n      }, function (error) {\n        if (error) {\n          var errorMessage = 'Error sending a message. '; // Add SEND_MESSAGE failure log event\n\n          _log(_logEventData.actionSendMessage, _logEventData.variationFailure);\n\n          if (error.code === 413) {\n            errorMessage += 'The chat message is over size limit.';\n          } else {\n            if (error.code === 500) {\n              errorMessage += 'Check your network connection.';\n            }\n          }\n\n          deferred.reject(_.extend(_.omit(error, 'message')), {\n            message: errorMessage\n          });\n        } else {\n          console.log('Message sent'); // Add SEND_MESSAGE success log event\n\n          _log(_logEventData.actionSendMessage, _logEventData.variationSuccess);\n\n          deferred.resolve(messageData);\n        }\n      });\n    } else {\n      _session.signal({\n        type: 'text-chat',\n        data: JSON.stringify(messageData),\n        to: recipient\n      }, function (error) {\n        if (error) {\n          console.log('Error sending a message');\n\n          _log(_logEventData.actionSendMessage, _logEventData.variationFailure);\n\n          deferred.resolve(error);\n        } else {\n          console.log('Message sent');\n          deferred.resolve(messageData);\n\n          _log(_logEventData.actionSendMessage, _logEventData.variationSuccess);\n        }\n      });\n    }\n\n    return deferred.promise();\n  };\n\n  var _sendTxtMessage = function _sendTxtMessage(text) {\n    if (!_.isEmpty(text)) {\n      $.when(_sendMessage(_this._remoteParticipant, text)).then(function () {\n        _handleMessageSent({\n          sender: {\n            id: _sender.id,\n            alias: _sender.alias\n          },\n          message: text,\n          sentOn: Date.now()\n        });\n\n        if (this.futureMessageNotice) {\n          this.futureMessageNotice = false;\n        }\n      }, function (error) {\n        _handleMessageError(error);\n      });\n    }\n  };\n\n  var _setupUI = function _setupUI() {\n    // Add INITIALIZE success log event\n    _log(_logEventData.actionInitialize, _logEventData.variationAttempt);\n\n    var parent = document.querySelector(_this.options.textChatContainer) || document.body;\n    var chatView = document.createElement('section');\n    chatView.innerHTML = renderUILayout();\n    _composer = chatView.querySelector('#messageBox');\n    _newMessages = chatView.querySelector('#messagesHolder');\n\n    _composer.onkeyup = function updateCharCounter() {\n      $('#characterCount').text(_composer.value.length);\n\n      if (_composer.value.length !== 0) {\n        $('.ots-icon-check').addClass('active');\n      } else {\n        $('.ots-icon-check').removeClass('active');\n      }\n    };\n\n    _composer.onkeydown = function controlComposerInput(event) {\n      var isEnter = event.which === 13 || event.keyCode === 13;\n\n      if (!event.shiftKey && isEnter) {\n        event.preventDefault();\n\n        _sendTxtMessage(_composer.value);\n      }\n    };\n\n    parent.appendChild(chatView);\n\n    document.getElementById('sendMessage').onclick = function () {\n      _sendTxtMessage(_composer.value);\n    }; // Add INITIALIZE success log event\n\n\n    _log(_logEventData.actionInitialize, _logEventData.variationSuccess);\n  };\n\n  var _onIncomingMessage = function _onIncomingMessage(signal) {\n    _log(_logEventData.actionReceiveMessage, _logEventData.variationAttempt);\n\n    var data = JSON.parse(signal.data);\n\n    if (_shouldAppendMessage(data)) {\n      $('.ots-item-text').last().append(['<span>', data.text, '</span>'].join(''));\n    } else {\n      _renderChatMessage(data.sender.id, data.sender.alias, data.text, data.sentOn);\n    }\n\n    _lastMessage = data;\n\n    _log(_logEventData.actionReceiveMessage, _logEventData.variationSuccess);\n  };\n\n  var _handleTextChat = function _handleTextChat(event) {\n    var me = _session.connection.connectionId;\n    var from = event.from.connectionId;\n\n    if (from !== me) {\n      var handler = _onIncomingMessage(event);\n\n      if (handler && typeof handler === 'function') {\n        handler(event);\n      }\n\n      _triggerEvent('messageReceived', event);\n    }\n  };\n\n  var _deliverUnsentMessages = function _deliverUnsentMessages() {\n    _sentMessageHistory.forEach(function (message) {\n      _sendMessage(message.recipient, message.message);\n    });\n\n    _sentMessageHistory = [];\n  };\n\n  var _initTextChat = function _initTextChat() {\n    _log(_logEventData.actionStart, _logEventData.variationAttempt);\n\n    _enabled = true;\n    _displayed = true;\n    _initialized = true;\n\n    _setupUI();\n\n    _triggerEvent('showTextChat');\n\n    _session.on('signal:text-chat', _handleTextChat);\n\n    _log(_logEventData.actionStart, _logEventData.variationSuccess);\n  };\n\n  var _showTextChat = function _showTextChat() {\n    _log(_logEventData.actionOpen, _logEventData.variationAttempt);\n\n    document.querySelector(_this.options.textChatContainer).classList.remove('ots-hidden');\n    _displayed = true;\n\n    _triggerEvent('showTextChat'); // Add OPEN success log event\n\n\n    _log(_logEventData.actionOpen, _logEventData.variationSuccess);\n  };\n\n  var _hideTextChat = function _hideTextChat() {\n    _log(_logEventData.actionClose, _logEventData.variationAttempt);\n\n    _log(_logEventData.actionEnd, _logEventData.variationAttempt);\n\n    document.querySelector(_this.options.textChatContainer).classList.add('ots-hidden');\n    _displayed = false;\n\n    _triggerEvent('hideTextChat'); // Add CLOSE success log event\n\n\n    _log(_logEventData.actionClose, _logEventData.variationSuccess);\n\n    _log(_logEventData.actionEnd, _logEventData.variationSuccess);\n  };\n\n  var _appendControl = function _appendControl() {\n    var feedControls = document.querySelector(_this.options.controlsContainer);\n    var el = document.createElement('div');\n    el.innerHTML = '<div class=\"ots-video-control circle text-chat enabled\" id=\"enableTextChat\"></div>';\n    var enableTextChat = el.firstChild;\n    feedControls.appendChild(enableTextChat);\n    _controlAdded = true;\n\n    enableTextChat.onclick = function () {\n      if (!_initialized) {\n        _initTextChat();\n      } else if (!_displayed) {\n        _showTextChat();\n      } else {\n        _hideTextChat();\n      }\n    };\n  };\n\n  var _validateOptions = function _validateOptions(options) {\n    if (!options.session) {\n      throw new Error('Text Chat Accelerator Pack requires an OpenTok session.');\n    } // Generates a random alpha-numeric string of n length\n\n\n    var uniqueString = function uniqueString(length) {\n      var len = length || 3;\n      return Math.random().toString(36).substr(2, len);\n    }; // Returns session id prepended and appended with unique strings\n\n\n    var generateUserId = function generateUserId() {\n      return [uniqueString(), _session.id, uniqueString()].join('');\n    };\n\n    _session = _.property('session')(options);\n    _accPack = _.property('accPack')(options);\n    /**\n     * Create arbitary values for sender id and alias if not recieved\n     * in options hash.\n     */\n\n    _sender = _.defaults(options.sender || {}, {\n      id: generateUserId(),\n      alias: ['User', uniqueString()].join(' ')\n    });\n    return _.defaults(_.omit(options, ['accPack', '_sender']), {\n      limitCharacterMessage: 160,\n      controlsContainer: '#feedControls',\n      textChatContainer: '#chatContainer',\n      alwaysOpen: false,\n      appendControl: true\n    });\n  };\n\n  var _registerEvents = function _registerEvents() {\n    var events = ['showTextChat', 'hideTextChat', 'messageSent', 'errorSendingMessage', 'messageReceived'];\n    _accPack && _accPack.registerEvents(events);\n  };\n\n  var _handleConnectionCreated = function _handleConnectionCreated(event) {\n    if (event && event.connection.connectionId !== _session.connection.connectionId) {\n      _remoteParticipant = true;\n\n      _hideWaitingMessage();\n    }\n  };\n\n  var _handleStreamCreated = function _handleStreamCreated(event) {\n    if (event && event.stream.connection.connectionId !== _session.connection.connectionId) {\n      _remoteParticipant = true;\n\n      _hideWaitingMessage();\n    }\n  };\n\n  var _handleStreamDestroyed = function _handleStreamDestroyed() {\n    if (_session.streams.length() < 2) {\n      _remoteParticipant = false;\n    }\n  };\n\n  var _addEventListeners = function _addEventListeners() {\n    if (_accPack) {\n      _accPack.registerEventListener('streamCreated', _handleStreamCreated);\n\n      _accPack.registerEventListener('streamDestroyed', _handleStreamDestroyed);\n\n      _accPack.registerEventListener('startCall', function () {\n        if (!_this.options.alwaysOpen) {\n          if (_controlAdded) {\n            document.querySelector('#enableTextChat').classList.remove('ots-hidden');\n          } else {\n            _this.options.appendControl && _appendControl();\n          }\n        }\n      });\n\n      _accPack.registerEventListener('endCall', function () {\n        if (!_this.options.alwaysOpen) {\n          document.getElementById('enableTextChat').classList.add('ots-hidden');\n\n          if (_displayed) {\n            _hideTextChat();\n          }\n        }\n      });\n    } else {\n      _session.on('streamCreated', _handleStreamCreated);\n\n      _session.on('streamDestroyed', _handleStreamDestroyed);\n    }\n\n    _session.on('connectionCreated', _handleConnectionCreated);\n    /**\n     * We need to check for remote participants in case we were the last party to join and\n     * the session event fired before the text chat component was initialized.\n     */\n\n\n    _handleStreamCreated();\n  }; // Constructor\n\n\n  var TextChatAccPack = function TextChatAccPack(options) {\n    // Save a reference to this\n    _this = this; // Extend instance and set private vars\n\n    _this.options = _validateOptions(options); // Init the analytics logs\n\n    _logAnalytics();\n\n    if (!!_.property('_this.options.limitCharacterMessage')(options)) {\n      _log(_logEventData.actionSetMaxLength, _logEventData.variationSuccess);\n    }\n\n    if (_this.options.alwaysOpen) {\n      _initTextChat();\n    } else {\n      _this.options.appendControl && _appendControl();\n    }\n\n    _registerEvents();\n\n    _addEventListeners();\n  };\n\n  TextChatAccPack.prototype = {\n    constructor: TextChatAccPack,\n    isEnabled: function isEnabled() {\n      return _enabled;\n    },\n    isDisplayed: function isDisplayed() {\n      return _displayed;\n    },\n    showTextChat: function showTextChat() {\n      _showTextChat();\n    },\n    hideTextChat: function hideTextChat() {\n      _hideTextChat();\n    },\n    deliverUnsentMessages: function deliverUnsentMessages() {\n      _deliverUnsentMessages();\n    }\n  };\n\n  if (typeof exports === 'object') {\n    module.exports = TextChatAccPack;\n  } else if (typeof define === 'function' && define.amd) {\n    define(function () {\n      return TextChatAccPack;\n    });\n  } else {\n    this.TextChatAccPack = TextChatAccPack;\n  }\n}).call(this);","map":{"version":3,"sources":["/home/fizoumizou/Documents/pfe/react/node_modules/opentok-text-chat/dist/opentok-text-chat.js"],"names":["_","$","OTKAnalytics","module","exports","require","window","jQuery","moment","_this","_session","_otkanalytics","_logEventData","clientVersion","componentId","name","actionInitialize","actionStart","actionEnd","actionOpen","actionClose","actionSendMessage","actionReceiveMessage","actionSetMaxLength","variationAttempt","variationError","variationSuccess","_logAnalytics","_source","location","href","otkanalyticsData","source","sessionInfo","sessionId","id","connectionId","connection","partnerId","apiKey","addSessionInfo","_log","action","variation","data","logEvent","_enabled","_displayed","_initialized","_controlAdded","_sender","_composer","_lastMessage","_newMessages","_sentMessageHistory","_remoteParticipant","_accPack","_triggerEvent","event","triggerEvent","renderUILayout","deliveryMessage","options","waitingMessage","limitCharacterMessage","join","_shouldAppendMessage","sender","_cleanComposer","value","text","_getBubbleHtml","message","bubble","messageClass","username","Date","time","_renderChatMessage","messageSenderId","messageSenderAlias","sentOn","sentByClass","view","chatholder","append","scrollTop","scrollHeight","_handleMessageSent","last","alias","_handleMessageError","error","console","log","code","template","html","comms_elements","messagesView","_showWaitingMessage","el","document","getElementById","classList","remove","parent","add","_hideWaitingMessage","_sendMessage","recipient","deferred","Deferred","push","resolve","messageData","now","undefined","signal","type","JSON","stringify","errorMessage","variationFailure","reject","extend","omit","to","promise","_sendTxtMessage","isEmpty","when","then","futureMessageNotice","_setupUI","querySelector","textChatContainer","body","chatView","createElement","innerHTML","onkeyup","updateCharCounter","length","addClass","removeClass","onkeydown","controlComposerInput","isEnter","which","keyCode","shiftKey","preventDefault","appendChild","onclick","_onIncomingMessage","parse","_handleTextChat","me","from","handler","_deliverUnsentMessages","forEach","_initTextChat","on","_showTextChat","_hideTextChat","_appendControl","feedControls","controlsContainer","enableTextChat","firstChild","_validateOptions","session","Error","uniqueString","len","Math","random","toString","substr","generateUserId","property","defaults","alwaysOpen","appendControl","_registerEvents","events","registerEvents","_handleConnectionCreated","_handleStreamCreated","stream","_handleStreamDestroyed","streams","_addEventListeners","registerEventListener","TextChatAccPack","prototype","constructor","isEnabled","isDisplayed","showTextChat","hideTextChat","deliverUnsentMessages","define","amd","call"],"mappings":"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","sourcesContent":["/* global OTKAnalytics define */\n(function () {\n\n  /** Include external dependencies */\n\n  var _;\n  var $;\n  var OTKAnalytics;\n\n  if (typeof module === 'object' && typeof module.exports === 'object') {\n    /* eslint-disable import/no-unresolved */\n    _ = require('underscore');\n    $ = require('jquery');\n    window.jQuery = $;\n    window.moment = require('moment');\n    require('kuende-livestamp');\n    OTKAnalytics = require('opentok-solutions-logging');\n    /* eslint-enable import/no-unresolved */\n  } else {\n    _ = this._;\n    $ = this.$;\n    window.jQuery = $;\n    window.moment = this.moment;\n    OTKAnalytics = this.OTKAnalytics;\n  }\n\n\n  // Reference to instance of TextChatAccPack\n  var _this;\n  var _session;\n\n  /** Analytics */\n  var _otkanalytics;\n\n  var _logEventData = {\n    // vars for the analytics logs. Internal use\n    clientVersion: 'js-vsol-1.0.30', // x.y.z filled by npm build script\n    componentId: 'textChatAccPack',\n    name: 'guidTextChatAccPack',\n    actionInitialize: 'Init',\n    actionStart: 'Start',\n    actionEnd: 'End',\n    actionOpen: 'OpenTC',\n    actionClose: 'CloseTC',\n    actionSendMessage: 'SendMessage',\n    actionReceiveMessage: 'ReceiveMessage',\n    actionSetMaxLength: 'SetMaxLength',\n    variationAttempt: 'Attempt',\n    variationError: 'Failure',\n    variationSuccess: 'Success'\n  };\n\n\n  var _logAnalytics = function () {\n\n    // init the analytics logs\n    var _source = window.location.href;\n\n    var otkanalyticsData = {\n      clientVersion: _logEventData.clientVersion,\n      source: _source,\n      componentId: _logEventData.componentId,\n      name: _logEventData.name\n    };\n\n    _otkanalytics = new OTKAnalytics(otkanalyticsData);\n\n    var sessionInfo = {\n      sessionId: _session.id,\n      connectionId: _session.connection.connectionId,\n      partnerId: _session.apiKey\n    };\n\n    _otkanalytics.addSessionInfo(sessionInfo);\n\n  };\n\n  var _log = function (action, variation) {\n    var data = {\n      action: action,\n      variation: variation\n    };\n    _otkanalytics.logEvent(data);\n  };\n\n  /** End Analytics */\n\n  // State vars\n  var _enabled = false;\n  var _displayed = false;\n  var _initialized = false;\n  var _controlAdded = false;\n  var _sender;\n  var _composer;\n  var _lastMessage;\n  var _newMessages;\n  var _sentMessageHistory = [];\n  var _remoteParticipant = false;\n\n  // Reference to Accelerator Pack Common Layer\n  var _accPack;\n\n  var _triggerEvent = function (event, data) {\n    _accPack && _accPack.triggerEvent(event, data);\n  };\n\n  // Private methods\n  var renderUILayout = function () {\n    var deliveryMessage =\n      _this.options.waitingMessage || 'Messages will be delivered once your contact arrives';\n    /* eslint-disable max-len, prefer-template */\n    return [\n      '<div class=\"ots-text-chat-container\">',\n      '<div class=\"ots-text-chat\">',\n      '<div class=\"ots-messages-header ots-hidden\" id=\"chatHeader\">',\n      '<span>Chat with</span>',\n      '</div>',\n      '<div id=\"otsChatWrap\">',\n      '<div class=\"ots-messages-holder\" id=\"messagesHolder\">',\n      '<div class=\"ots-messages-alert ots-hidden\" id=\"messagesWaiting\">' + deliveryMessage + '</div>',\n      '<div class=\"ots-message-item ots-message-sent\">',\n      '</div>',\n      '</div>',\n      '<div class=\"ots-send-message-box\">',\n      '<input type=\"text\" maxlength=' + _this.options.limitCharacterMessage + ' class=\"ots-message-input\" placeholder=\"Enter your message here\" id=\"messageBox\">',\n      '<button class=\"ots-icon-check\" id=\"sendMessage\" type=\"submit\"></button>',\n      '<div class=\"ots-character-count\"><span><span id=\"characterCount\">0</span>/' + _this.options.limitCharacterMessage + ' characters</span></div>',\n      '</div>',\n      '</div>',\n      '</div>',\n      '</div>'\n    ].join('\\n');\n    /* eslint-enable max-len, prefer-template */\n  };\n\n  var _shouldAppendMessage = function (data) {\n\n    if (_lastMessage) {\n      return _lastMessage.sender.id === data.sender.id && _lastMessage.sender.id === data.sender.id;\n    }\n\n    return false;\n\n  };\n\n  var _cleanComposer = function () {\n    _composer.value = '';\n    $('#characterCount').text('0');\n  };\n\n  var _getBubbleHtml = function (message) {\n    /* eslint-disable max-len, prefer-template */\n    var bubble = [\n      '<div class=\"' + message.messageClass + '\" >',\n      '<div class=\"ots-user-name-initial\"> ' + message.username[0] + '</div>',\n      '<div class=\"ots-item-timestamp\"> ' + message.username + ', <span data-livestamp=\" ' + new Date(message.time) + '\" </span></div>',\n      '<div class=\"ots-item-text\">',\n      '<span> ' + message.message + '</span>',\n      '</div>',\n      '</div>'\n    ].join('\\n');\n    /* eslint-enable max-len, prefer-template */\n    return bubble;\n  };\n\n  var _renderChatMessage = function (messageSenderId, messageSenderAlias, message, sentOn) {\n\n    var sentByClass = _sender.id === messageSenderId ?\n      'ots-message-item ots-message-sent' :\n      'ots-message-item';\n\n    var view = _getBubbleHtml({\n      username: messageSenderAlias,\n      message: message,\n      messageClass: sentByClass,\n      time: sentOn\n    });\n\n    var chatholder = $(_newMessages);\n    chatholder.append(view);\n    chatholder[0].scrollTop = chatholder[0].scrollHeight;\n\n  };\n\n  var _handleMessageSent = function (data) {\n    _cleanComposer();\n    if (_shouldAppendMessage(data)) {\n      $('.ots-item-text').last().append(['<span>', data.message, '</span>'].join(''));\n      var chatholder = $(_newMessages);\n      chatholder[0].scrollTop = chatholder[0].scrollHeight;\n    } else {\n      _renderChatMessage(_sender.id, _sender.alias, data.message, data.sentOn);\n    }\n    _lastMessage = data;\n\n    _triggerEvent('messageSent', data);\n\n  };\n\n  var _handleMessageError = function (error) {\n    console.log(error.code, error.message);\n    if (error.code === 500) {\n      var view = _.template($('#chatError').html());\n      $(_this.comms_elements.messagesView).append(view());\n    }\n    _triggerEvent('errorSendingMessage', error);\n  };\n\n  var _showWaitingMessage = function () {\n    var el = document.getElementById('messagesWaiting');\n    el && el.classList.remove('ots-hidden');\n    var parent = document.getElementById('messagesHolder');\n    parent && parent.classList.add('has-alert');\n  };\n\n  var _hideWaitingMessage = function () {\n    var el = document.getElementById('messagesWaiting');\n    el && el.classList.add('ots-hidden');\n    var parent = document.getElementById('messagesHolder');\n    parent && parent.classList.add('has-alert');\n  };\n\n  var _sendMessage = function (recipient, message) {\n\n    var deferred = new $.Deferred();\n\n    _sentMessageHistory.push({ recipient: recipient, message: message });\n    if (!_remoteParticipant) {\n      _showWaitingMessage();\n      deferred.resolve();\n    } else {\n      _hideWaitingMessage();\n    }\n\n    var messageData = {\n      text: message,\n      sender: {\n        id: _sender.id,\n        alias: _sender.alias,\n      },\n      sentOn: Date.now()\n    };\n\n    // Add SEND_MESSAGE attempt log event\n    _log(_logEventData.actionSendMessage, _logEventData.variationAttempt);\n\n    if (recipient === undefined) {\n      _session\n        .signal({\n          type: 'text-chat',\n          data: JSON.stringify(messageData)\n        }, function (error) {\n          if (error) {\n            var errorMessage = 'Error sending a message. ';\n            // Add SEND_MESSAGE failure log event\n            _log(_logEventData.actionSendMessage, _logEventData.variationFailure);\n            if (error.code === 413) {\n              errorMessage += 'The chat message is over size limit.';\n            } else {\n              if (error.code === 500) {\n                errorMessage += 'Check your network connection.';\n              }\n            }\n            deferred.reject(_.extend(_.omit(error, 'message')), {\n              message: errorMessage\n            });\n          } else {\n            console.log('Message sent');\n            // Add SEND_MESSAGE success log event\n            _log(_logEventData.actionSendMessage, _logEventData.variationSuccess);\n            deferred.resolve(messageData);\n          }\n        });\n    } else {\n      _session.signal({\n        type: 'text-chat',\n        data: JSON.stringify(messageData),\n        to: recipient\n      }, function (error) {\n        if (error) {\n          console.log('Error sending a message');\n          _log(_logEventData.actionSendMessage, _logEventData.variationFailure);\n          deferred.resolve(error);\n        } else {\n          console.log('Message sent');\n          deferred.resolve(messageData);\n          _log(_logEventData.actionSendMessage, _logEventData.variationSuccess);\n        }\n      });\n    }\n\n    return deferred.promise();\n  };\n\n  var _sendTxtMessage = function (text) {\n    if (!_.isEmpty(text)) {\n      $.when(_sendMessage(_this._remoteParticipant, text))\n        .then(function () {\n          _handleMessageSent({\n            sender: {\n              id: _sender.id,\n              alias: _sender.alias\n            },\n            message: text,\n            sentOn: Date.now()\n          });\n          if (this.futureMessageNotice) {\n            this.futureMessageNotice = false;\n          }\n        }, function (error) {\n          _handleMessageError(error);\n        });\n    }\n  };\n\n  var _setupUI = function () {\n\n    // Add INITIALIZE success log event\n    _log(_logEventData.actionInitialize, _logEventData.variationAttempt);\n\n    var parent = document.querySelector(_this.options.textChatContainer) || document.body;\n\n    var chatView = document.createElement('section');\n    chatView.innerHTML = renderUILayout();\n\n    _composer = chatView.querySelector('#messageBox');\n\n    _newMessages = chatView.querySelector('#messagesHolder');\n\n    _composer.onkeyup = function updateCharCounter() {\n      $('#characterCount').text(_composer.value.length);\n      if (_composer.value.length !== 0) {\n        $('.ots-icon-check').addClass('active');\n      } else {\n        $('.ots-icon-check').removeClass('active');\n      }\n    };\n\n    _composer.onkeydown = function controlComposerInput(event) {\n      var isEnter = (event.which === 13 || event.keyCode === 13);\n      if (!event.shiftKey && isEnter) {\n        event.preventDefault();\n        _sendTxtMessage(_composer.value);\n      }\n    };\n\n    parent.appendChild(chatView);\n\n    document.getElementById('sendMessage').onclick = function () {\n      _sendTxtMessage(_composer.value);\n    };\n    // Add INITIALIZE success log event\n    _log(_logEventData.actionInitialize, _logEventData.variationSuccess);\n  };\n\n  var _onIncomingMessage = function (signal) {\n    _log(_logEventData.actionReceiveMessage, _logEventData.variationAttempt);\n    var data = JSON.parse(signal.data);\n\n    if (_shouldAppendMessage(data)) {\n      $('.ots-item-text').last().append(['<span>', data.text, '</span>'].join(''));\n    } else {\n      _renderChatMessage(data.sender.id, data.sender.alias, data.text, data.sentOn);\n    }\n\n    _lastMessage = data;\n    _log(_logEventData.actionReceiveMessage, _logEventData.variationSuccess);\n  };\n\n  var _handleTextChat = function (event) {\n    var me = _session.connection.connectionId;\n    var from = event.from.connectionId;\n    if (from !== me) {\n      var handler = _onIncomingMessage(event);\n      if (handler && typeof handler === 'function') {\n        handler(event);\n      }\n      _triggerEvent('messageReceived', event);\n    }\n  };\n\n  var _deliverUnsentMessages = function () {\n    _sentMessageHistory.forEach(function (message) {\n      _sendMessage(message.recipient, message.message);\n    });\n    _sentMessageHistory = [];\n  };\n\n  var _initTextChat = function () {\n    _log(_logEventData.actionStart, _logEventData.variationAttempt);\n    _enabled = true;\n    _displayed = true;\n    _initialized = true;\n    _setupUI();\n    _triggerEvent('showTextChat');\n    _session.on('signal:text-chat', _handleTextChat);\n    _log(_logEventData.actionStart, _logEventData.variationSuccess);\n  };\n\n  var _showTextChat = function () {\n    _log(_logEventData.actionOpen, _logEventData.variationAttempt);\n    document.querySelector(_this.options.textChatContainer).classList.remove('ots-hidden');\n    _displayed = true;\n    _triggerEvent('showTextChat');\n\n    // Add OPEN success log event\n    _log(_logEventData.actionOpen, _logEventData.variationSuccess);\n  };\n\n  var _hideTextChat = function () {\n    _log(_logEventData.actionClose, _logEventData.variationAttempt);\n    _log(_logEventData.actionEnd, _logEventData.variationAttempt);\n    document.querySelector(_this.options.textChatContainer).classList.add('ots-hidden');\n    _displayed = false;\n    _triggerEvent('hideTextChat');\n\n    // Add CLOSE success log event\n    _log(_logEventData.actionClose, _logEventData.variationSuccess);\n    _log(_logEventData.actionEnd, _logEventData.variationSuccess);\n  };\n\n  var _appendControl = function () {\n\n    var feedControls = document.querySelector(_this.options.controlsContainer);\n\n    var el = document.createElement('div');\n    el.innerHTML = '<div class=\"ots-video-control circle text-chat enabled\" id=\"enableTextChat\"></div>';\n\n    var enableTextChat = el.firstChild;\n    feedControls.appendChild(enableTextChat);\n\n    _controlAdded = true;\n\n    enableTextChat.onclick = function () {\n\n      if (!_initialized) {\n        _initTextChat();\n      } else if (!_displayed) {\n        _showTextChat();\n      } else {\n        _hideTextChat();\n      }\n    };\n  };\n\n  var _validateOptions = function (options) {\n\n    if (!options.session) {\n      throw new Error('Text Chat Accelerator Pack requires an OpenTok session.');\n    }\n\n    // Generates a random alpha-numeric string of n length\n    var uniqueString = function (length) {\n      var len = length || 3;\n      return Math.random().toString(36).substr(2, len);\n    };\n\n    // Returns session id prepended and appended with unique strings\n    var generateUserId = function () {\n      return [uniqueString(), _session.id, uniqueString()].join('');\n    };\n\n    _session = _.property('session')(options);\n    _accPack = _.property('accPack')(options);\n\n    /**\n     * Create arbitary values for sender id and alias if not recieved\n     * in options hash.\n     */\n    _sender = _.defaults(options.sender || {}, {\n      id: generateUserId(),\n      alias: ['User', uniqueString()].join(' ')\n    });\n\n    return _.defaults(_.omit(options, ['accPack', '_sender']), {\n      limitCharacterMessage: 160,\n      controlsContainer: '#feedControls',\n      textChatContainer: '#chatContainer',\n      alwaysOpen: false,\n      appendControl: true,\n    });\n  };\n\n  var _registerEvents = function () {\n    var events = [\n      'showTextChat',\n      'hideTextChat',\n      'messageSent',\n      'errorSendingMessage',\n      'messageReceived'\n    ];\n    _accPack && _accPack.registerEvents(events);\n  };\n\n  var _handleConnectionCreated = function (event) {\n    if (event && event.connection.connectionId !== _session.connection.connectionId) {\n      _remoteParticipant = true;\n      _hideWaitingMessage();\n    }\n  };\n\n  var _handleStreamCreated = function (event) {\n    if (event && event.stream.connection.connectionId !== _session.connection.connectionId) {\n      _remoteParticipant = true;\n      _hideWaitingMessage();\n    }\n  };\n\n  var _handleStreamDestroyed = function () {\n    if (_session.streams.length() < 2) {\n      _remoteParticipant = false;\n    }\n  };\n\n  var _addEventListeners = function () {\n\n    if (_accPack) {\n      _accPack.registerEventListener('streamCreated', _handleStreamCreated);\n      _accPack.registerEventListener('streamDestroyed', _handleStreamDestroyed);\n\n      _accPack.registerEventListener('startCall', function () {\n        if (!_this.options.alwaysOpen) {\n          if (_controlAdded) {\n            document.querySelector('#enableTextChat').classList.remove('ots-hidden');\n          } else {\n            _this.options.appendControl && _appendControl()\n          }\n        }\n      });\n\n      _accPack.registerEventListener('endCall', function () {\n        if (!_this.options.alwaysOpen) {\n          document.getElementById('enableTextChat').classList.add('ots-hidden');\n          if (_displayed) {\n            _hideTextChat();\n          }\n        }\n      });\n    } else {\n      _session.on('streamCreated', _handleStreamCreated);\n      _session.on('streamDestroyed', _handleStreamDestroyed);\n    }\n\n    _session.on('connectionCreated', _handleConnectionCreated);\n\n    /**\n     * We need to check for remote participants in case we were the last party to join and\n     * the session event fired before the text chat component was initialized.\n     */\n    _handleStreamCreated();\n\n  };\n\n  // Constructor\n  var TextChatAccPack = function (options) {\n\n    // Save a reference to this\n    _this = this;\n\n    // Extend instance and set private vars\n    _this.options = _validateOptions(options);\n\n    // Init the analytics logs\n    _logAnalytics();\n\n    if (!!_.property('_this.options.limitCharacterMessage')(options)) {\n      _log(_logEventData.actionSetMaxLength, _logEventData.variationSuccess);\n    }\n\n    if (_this.options.alwaysOpen) {\n      _initTextChat();\n    } else {\n      _this.options.appendControl && _appendControl()\n    }\n    _registerEvents();\n    _addEventListeners();\n  };\n\n  TextChatAccPack.prototype = {\n    constructor: TextChatAccPack,\n    isEnabled: function () {\n      return _enabled;\n    },\n    isDisplayed: function () {\n      return _displayed;\n    },\n    showTextChat: function () {\n      _showTextChat();\n    },\n    hideTextChat: function () {\n      _hideTextChat();\n    },\n    deliverUnsentMessages:function(){\n      _deliverUnsentMessages();\n    }\n  };\n\n  if (typeof exports === 'object') {\n    module.exports = TextChatAccPack;\n  } else if (typeof define === 'function' && define.amd) {\n    define(function () {\n      return TextChatAccPack;\n    });\n  } else {\n    this.TextChatAccPack = TextChatAccPack;\n  }\n\n}.call(this));\n"]},"metadata":{},"sourceType":"script"}