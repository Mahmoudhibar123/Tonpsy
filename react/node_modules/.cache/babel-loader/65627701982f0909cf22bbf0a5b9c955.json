{"ast":null,"code":"/* global OT OTSolution OTKAnalytics ScreenSharingAccPack define */\n(function () {\n  /** Include external dependencies */\n  var _;\n\n  var $;\n  var OTKAnalytics;\n\n  if (typeof module === 'object' && typeof module.exports === 'object') {\n    /* eslint-disable import/no-unresolved */\n    _ = require('underscore');\n    $ = require('jquery');\n    OTKAnalytics = require('opentok-solutions-logging');\n    /* eslint-enable import/no-unresolved */\n  } else {\n    _ = this._;\n    $ = this.$;\n    OTKAnalytics = this.OTKAnalytics;\n  }\n  /** Private variables */\n\n\n  var _this;\n\n  var _accPack;\n\n  var _session;\n\n  var _canvas;\n\n  var _subscribingToMobileScreen;\n\n  var _elements = {};\n  /** Analytics */\n\n  var _otkanalytics; // vars for the analytics logs. Internal use\n\n\n  var _logEventData = {\n    clientVersion: 'js-vsol-2.0.59',\n    // x.y.z filled by npm build script\n    componentId: 'annotationsAccPack',\n    name: 'guidAnnotationsKit',\n    actionInitialize: 'Init',\n    actionStart: 'Start',\n    actionEnd: 'End',\n    actionFreeHand: 'FreeHand',\n    actionPickerColor: 'PickerColor',\n    actionText: 'Text',\n    actionScreenCapture: 'ScreenCapture',\n    actionErase: 'Erase',\n    actionUseToolbar: 'UseToolbar',\n    variationAttempt: 'Attempt',\n    variationError: 'Failure',\n    variationSuccess: 'Success'\n  };\n\n  var _logAnalytics = function () {\n    // init the analytics logs\n    var _source = window.location.href;\n    var otkanalyticsData = {\n      clientVersion: _logEventData.clientVersion,\n      source: _source,\n      componentId: _logEventData.componentId,\n      name: _logEventData.name\n    };\n    _otkanalytics = new OTKAnalytics(otkanalyticsData);\n    var sessionInfo = {\n      sessionId: _session.id,\n      connectionId: _session.connection.connectionId,\n      partnerId: _session.apiKey\n    };\n\n    _otkanalytics.addSessionInfo(sessionInfo);\n  };\n\n  var _log = function (action, variation) {\n    var data = {\n      action: action,\n      variation: variation\n    };\n\n    _otkanalytics.logEvent(data);\n  };\n  /** End Analytics */\n  // Check for DOM element or string.  Return element.\n\n\n  var _getElem = function (el) {\n    return typeof el === 'string' ? document.querySelector(el) : el;\n  }; // Trigger event via common layer API\n\n\n  var _triggerEvent = function (event, data) {\n    if (_accPack) {\n      _accPack.triggerEvent(event, data);\n    }\n  };\n\n  var _registerEvents = function () {\n    if (_accPack) {\n      var events = ['startAnnotation', 'linkAnnotation', 'resizeCanvas', 'annotationWindowClosed', 'endAnnotation'];\n\n      _accPack.registerEvents(events);\n    }\n  };\n\n  var _setupUI = function () {\n    var toolbar = ['<div id=\"annotationToolbarContainer\" class=\"ots-annotation-toolbar-container\">', '<div id=\"toolbar\"></div>', '</div>'].join('\\n');\n    $('body').append(toolbar);\n\n    _log(_logEventData.actionUseToolbar, _logEventData.variationSuccess);\n  };\n\n  var _palette = ['#1abc9c', '#2ecc71', '#3498db', '#9b59b6', '#8e44ad', '#f1c40f', '#e67e22', '#e74c3c', '#ded5d5'];\n\n  var _aspectRatio = 10 / 6;\n  /** Private methods */\n\n\n  var _refreshCanvas = _.throttle(function () {\n    _canvas.onResize();\n  }, 1000);\n  /** Resize the canvas to match the size of its container */\n\n\n  var _resizeCanvas = _.throttle(function () {\n    var width;\n    var height;\n    var cobrowsing = !!_elements.cobrowsingImage;\n\n    if (cobrowsing) {\n      // Cobrowsing images are currently fixed size, so resize isn't needed\n      return;\n    }\n\n    if (_elements.cobrowsingImage === null) {\n      var el = _elements.absoluteParent || _elements.canvasContainer;\n      width = el.clientWidth;\n      height = el.clientHeight;\n    }\n\n    try {\n      var videoDimensions = _canvas.videoFeed.stream.videoDimensions;\n    } catch (e) {\n      console.log('OT Annotation: Annotation video stream no longer exists');\n      return;\n    } // Override dimensions when subscribing to a mobile screen\n\n\n    if (_subscribingToMobileScreen) {\n      videoDimensions.width = width;\n      videoDimensions.height = height;\n    }\n\n    var origRatio = videoDimensions.width / videoDimensions.height;\n    var destRatio = width / height;\n    var calcDimensions = {\n      top: 0,\n      left: 0,\n      height: height,\n      width: width\n    };\n\n    if (!_elements.externalWindow) {\n      if (origRatio < destRatio) {\n        // height is the limiting prop, we'll get vertical bars\n        calcDimensions.width = calcDimensions.height * origRatio;\n        calcDimensions.left = (width - calcDimensions.width) / 2;\n      } else {\n        calcDimensions.height = calcDimensions.width / origRatio;\n        calcDimensions.top = (height - calcDimensions.height) / 2;\n      }\n    }\n\n    $(_elements.canvasContainer).find('canvas').css(calcDimensions);\n    $(_elements.canvasContainer).find('canvas').attr(calcDimensions);\n\n    _refreshCanvas();\n\n    _triggerEvent('resizeCanvas');\n  }, 500, {\n    trailing: false\n  });\n\n  var _changeColorByIndex = function (colorIndex) {\n    _canvas.changeColorByIndex(colorIndex);\n  };\n\n  var _takeScreenShot = function () {\n    _canvas.captureScreenshot(true);\n  };\n\n  var _listenForResize = function () {\n    $(_elements.resizeSubject).on('resize', _resizeCanvas);\n  };\n\n  var _createToolbar = function (session, options, externalWindow) {\n    _setupUI();\n\n    var toolbarId = _.property('toolbarId')(options) || 'toolbar';\n    var items = _.property('toolbarItems')(options) || [];\n    var shapes = _.property('toolbarShapes')(options) || [];\n\n    var colors = _.property('colors')(options) || _palette;\n\n    var imageAssets = _.property('imageAssets')(options) || null;\n    var backgroundColor = _.property('backgroundColor')(options) || null;\n\n    var container = function () {\n      var w = !!externalWindow ? externalWindow : window;\n      return w.document.getElementById(toolbarId);\n    };\n    /* eslint-disable no-native-reassign */\n\n\n    toolbar = new OTSolution.Annotations.Toolbar({\n      session: session,\n      container: container(),\n      colors: colors,\n      items: items.length ? items : ['*'],\n      shapes: shapes.length ? shapes : ['rectangle', 'oval', 'star', 'arrow', 'line'],\n      externalWindow: externalWindow || null,\n      imageAssets: imageAssets,\n      backgroundColor: backgroundColor,\n      OTKAnalytics: OTKAnalytics\n    });\n    toolbar.itemClicked(function (id) {\n      var actions = {\n        OT_pen: _logEventData.actionFreeHand,\n        OT_colors: _logEventData.actionPickerColor,\n        OT_text: _logEventData.actionText,\n        OT_clear: _logEventData.actionErase\n      };\n      var action = actions[id];\n\n      if (!!action) {\n        _log(action, _logEventData.variationSuccess);\n      }\n    });\n    /* eslint-enable no-native-reassign */\n  }; // Create external screen sharing window\n\n\n  var _createExternalWindow = function () {\n    var deferred = $.Deferred();\n    var width = screen.width * 0.80 | 0;\n    var height = width / _aspectRatio;\n    var externalWindowHTML = '<!DOCTYPE html><html lang=\"en\"><head><meta http-equiv=\"Content-type\" content=\"text/html; charset=utf-8\"><title>OpenTok Screen Sharing Solution Annotation</title><link rel=\"stylesheet\" href=\"https://assets.tokbox.com/solutions/css/style.css\"><style type=\"text/css\" media=\"screen\"> body{margin:0;background-color:rgba(0,153,203,.7);box-sizing:border-box;height:100vh}canvas{top:0;z-index:1000}.hidden{display:none}.ots-hidden{display:none !important}.main-wrap{width:100%;height:100%;-ms-box-orient:horizontal;display:-webkit-box;display:-moz-box;display:-ms-flexbox;display:-moz-flex;display:-webkit-flex;display:flex;-webkit-justify-content:center;justify-content:center;-webkit-align-items:center;align-items:center}.inner-wrap{position:relative;border-radius:8px;overflow:hidden}.publisherContainer{display:block;background-color:#000;position:absolute}.publisher-wrap{height:100%;width:100%}.subscriberContainer{position:absolute;display:flex;top:20px;left:20px;width:200px;height:120px;background-color:#000;border:2px solid #fff;border-radius:6px}.subscriberContainer .OT_video-poster{width:100%;height:100%;opacity:.25;background-repeat:no-repeat;background-image:url(https://static.opentok.com/webrtc/v2.8.2/images/rtc/audioonly-silhouette.svg);background-size:50%;background-position:center}.OT_video-element{height:100%;width:100%}.OT_edge-bar-item{display:none}</style></head><body> <div class=\"main-wrap\"> <div id=\"annotationContainer\" class=\"inner-wrap\"></div></div><div id=\"toolbarContainer\" class=\"ots-annotation-toolbar-container\"> <div id=\"toolbar\" class=\"toolbar-wrap\"></div></div><div id=\"subscriberVideo\" class=\"subscriberContainer hidden\"></div><script type=\"text/javascript\" charset=\"utf-8\"> /** Must use double-quotes since everything must be converted to a string */ var opener; var canvas; if (!toolbar){alert(\"Something went wrong: You must pass an OpenTok annotation toolbar object into the window.\")}else{opener=window.opener; window.onbeforeunload=window.triggerCloseEvent;}var localScreenProperties={insertMode: \"append\", width: \"100%\", height: \"100%\", videoSource: \"window\", showControls: false, style:{buttonDisplayMode: \"off\"}, subscribeToVideo: \"true\", subscribeToAudio: \"false\", fitMode: \"contain\"}; var createContainerElements=function(){var parentDiv=document.getElementById(\"annotationContainer\"); var publisherContainer=document.createElement(\"div\"); publisherContainer.setAttribute(\"id\", \"screenshare_publisher\"); publisherContainer.classList.add(\"publisher-wrap\"); parentDiv.appendChild(publisherContainer); return{annotation: parentDiv, publisher: publisherContainer};}; var addSubscriberVideo=function(stream){var container=document.getElementById(\"subscriberVideo\"); var subscriber=session.subscribe(stream, container, localScreenProperties, function(error){if (error){console.log(\"Failed to add subscriber video\", error);}container.classList.remove(\"hidden\");});}; if (navigator.userAgent.indexOf(\"Firefox\") !==-1){var ghost=window.open(\"about:blank\"); ghost.focus(); ghost.close();}</script></body></html>';\n    /* eslint-disable max-len */\n\n    var windowFeatures = ['toolbar=no', 'location=no', 'directories=no', 'status=no', 'menubar=no', 'scrollbars=no', 'resizable=no', 'copyhistory=no', ['width=', width].join(''), ['height=', height].join(''), ['left=', screen.width / 2 - width / 2].join(''), ['top=', screen.height / 2 - height / 2].join('')].join(',');\n    /* eslint-enable max-len */\n\n    var annotationWindow = window.open('about:blank', '', windowFeatures);\n    annotationWindow.document.write(externalWindowHTML);\n\n    window.onbeforeunload = function () {\n      annotationWindow.close();\n    }; // External window needs access to certain globals\n\n\n    annotationWindow.toolbar = toolbar;\n    annotationWindow.OT = OT;\n    annotationWindow.session = _session;\n    annotationWindow.$ = $;\n\n    annotationWindow.triggerCloseEvent = function () {\n      _triggerEvent('annotationWindowClosed');\n    };\n\n    annotationWindow.onbeforeunload = function () {\n      _triggerEvent('annotationWindowClosed');\n    }; // TODO Find something better.\n\n\n    var windowReady = function () {\n      if (!!annotationWindow.createContainerElements) {\n        $(annotationWindow.document).ready(function () {\n          deferred.resolve(annotationWindow);\n        });\n      } else {\n        setTimeout(windowReady, 100);\n      }\n    };\n\n    windowReady();\n    return deferred.promise();\n  }; // Remove the toolbar and cancel event listeners\n\n\n  var _removeToolbar = function () {\n    _canvas.onClearAnnotation();\n\n    $(_elements.resizeSubject).off('resize', _resizeCanvas);\n    toolbar.remove();\n    $('#annotationToolbarContainer').remove();\n  }; // Determine whether or not the subscriber stream is from a mobile device\n\n\n  var _requestPlatformData = function (pubSub, mobileInitiator) {\n    if (!!pubSub.stream) {\n      var isPublisher = Object.prototype.hasOwnProperty.call(pubSub, 'accessAllowed');\n\n      _session.signal({\n        type: 'otAnnotation_requestPlatform',\n        to: pubSub.stream.connection\n      });\n\n      _session.on('signal:otAnnotation_mobileScreenShare', function (event) {\n        var platform = event.data ? JSON.parse(event.data).platform : null;\n        var isMobile = platform == 'ios' || platform === 'android';\n        _subscribingToMobileScreen = isMobile;\n\n        _canvas.onMobileScreenShare(isMobile, isPublisher);\n      });\n    }\n\n    if (mobileInitiator) {\n      _subscribingToMobileScreen = true;\n\n      _canvas.onMobileScreenShare(true);\n    }\n  };\n  /**\n   * Creates an external window (if required) and links the annotation toolbar\n   * to the session\n   * @param {object} session\n   * @param {object} [options]\n   * @param {boolean} [options.screensharing] - Using an external window\n   * @param {string} [options.toolbarId] - If the container has an id other than 'toolbar'\n   * @param {array} [options.items] - Custom set of tools\n   * @param {array} [options.colors] - Custom color palette\n   * @returns {promise} < Resolve: undefined | {object} Reference to external annotation window >\n   */\n\n\n  var start = function (session, options) {\n    var deferred = $.Deferred();\n\n    if (_.property('screensharing')(options)) {\n      _createExternalWindow().then(function (externalWindow) {\n        _createToolbar(session, options, externalWindow);\n\n        toolbar.createPanel(externalWindow);\n\n        _triggerEvent('startAnnotation', externalWindow);\n\n        _log(_logEventData.actionStart, _logEventData.variationSuccess);\n\n        deferred.resolve(externalWindow);\n      });\n    } else {\n      _createToolbar(session, options);\n\n      _triggerEvent('startAnnotation');\n\n      _log(_logEventData.actionStart, _logEventData.variationSuccess);\n\n      deferred.resolve();\n    }\n\n    return deferred.promise();\n  };\n  /**\n   * @param {object} pubSub - Either the publisher(sharing) or subscriber(viewing)\n   * @ param {object} container - The parent container for the canvas element\n   * @ param {object} options\n   * @param {object} options.canvasContainer - The id of the parent for the annotation canvas\n   * @param {object | string} [options.externalWindow] - Reference to the annotation window (or query selector) if publishing\n   * @param {array | string} [options.absoluteParent] - Reference to element (or query selector) for resize if other than container\n   * * @param {Boolean} [options.mobileInitiator] - Is cobrowsing being initiated by a mobile device\n   */\n\n\n  var linkCanvas = function (pubSub, container, options) {\n    /**\n     * jQuery only allows listening for a resize event on the window or a\n     * jQuery resizable element, like #wmsFeedWrap.  windowRefernce is a\n     * reference to the popup window created for annotation.  If this doesn't\n     * exist, we are watching the canvas belonging to the party viewing the\n     * shared screen\n     */\n    _elements.resizeSubject = _getElem(_.property('externalWindow')(options) || window);\n    _elements.externalWindow = _getElem(_.property('externalWindow')(options) || null);\n    _elements.absoluteParent = _getElem(_.property('absoluteParent')(options) || null);\n    _elements.cobrowsingImage = _getElem(_.property('cobrowsingImage')(options) || null);\n    _elements.canvasContainer = _getElem(container); // The canvas object\n\n    _canvas = new OTSolution.Annotations({\n      feed: pubSub,\n      container: _elements.canvasContainer,\n      externalWindow: _elements.externalWindow\n    });\n    toolbar.addCanvas(_canvas, _elements.externalWindow);\n    var onScreenCapture = _this.options.onScreenCapture ? _this.options.onScreenCapture : function (dataUrl) {\n      var win = window.open(dataUrl, '_blank');\n      win.focus();\n    };\n\n    _canvas.onScreenCapture(onScreenCapture);\n\n    _requestPlatformData(pubSub, options && options.mobileInitiator);\n\n    var context = _elements.externalWindow ? _elements.externalWindow : window; // The canvas DOM element\n\n    _elements.canvas = $(_.first(context.document.getElementsByTagName('canvas')));\n\n    _listenForResize();\n\n    _resizeCanvas();\n\n    _triggerEvent('linkAnnotation');\n  };\n  /**\n   * Manually update the size of the canvas to match it's container, or the\n   * absolute parent, if defined.\n   */\n\n\n  var resizeCanvas = function () {\n    _resizeCanvas();\n  };\n  /**\n   * Change the annotation color of the toolbar passing the colorIndex\n   * @param {Integer} colorIndex - The color index number\n   */\n\n\n  var changeColorByIndex = function (colorIndex) {\n    _changeColorByIndex(colorIndex);\n  };\n\n  var takeScreenShot = function () {\n    _takeScreenShot();\n  };\n  /**\n   * Adds a subscriber's video the external annotation window\n   * @param {Object} stream - The subscriber stream object\n   */\n\n\n  var addSubscriberToExternalWindow = function (stream) {\n    if (!_elements.externalWindow) {\n      console.log('OT Annotation: External window does not exist. Cannot add subscriber video.');\n    } else {\n      _elements.externalWindow.addSubscriberVideo(stream);\n    }\n  };\n  /**\n   * Stop annotation and clean up components\n   * @param {Boolean} publisher Are we the publisher?\n   */\n\n\n  var end = function () {\n    _removeToolbar();\n\n    _elements.canvas = null;\n\n    if (!!_elements.externalWindow) {\n      _elements.externalWindow.close();\n\n      _elements.externalWindow = null;\n      _elements.resizeSubject = null;\n    }\n\n    _triggerEvent('endAnnotation');\n\n    _log(_logEventData.actionEnd, _logEventData.variationSuccess);\n  };\n\n  var hideToolbar = function () {\n    $(toolbar.parent).hide();\n  };\n\n  var showToolbar = function () {\n    $(toolbar.parent).show();\n  };\n  /**\n   * @constructor\n   * Represents an annotation component, used for annotation over video or a shared screen\n   * @param {object} options\n   * @param {object} options.session - An OpenTok session\n   * @param {object} options.canvasContainer - The id of the parent for the annotation canvas\n   * @param {object} options.watchForResize - The DOM element to watch for resize\n   * @param {object} options.onScreenCapture- A callback function to be invoked on screen capture\n   */\n\n\n  var AnnotationAccPack = function (options) {\n    _this = this;\n    _this.options = _.omit(options, 'accPack', 'session');\n    _accPack = _.property('accPack')(options);\n    _session = _.property('session')(options);\n\n    if (!_session) {\n      throw new Error('OpenTok Annotation Accelerator Pack requires an OpenTok session');\n    }\n\n    _registerEvents(); // init analytics logs\n\n\n    _logAnalytics();\n\n    _log(_logEventData.actionInitialize, _logEventData.variationSuccess);\n  };\n\n  AnnotationAccPack.prototype = {\n    constructor: AnnotationAccPack,\n    start: start,\n    linkCanvas: linkCanvas,\n    resizeCanvas: resizeCanvas,\n    addSubscriberToExternalWindow: addSubscriberToExternalWindow,\n    end: end,\n    hideToolbar: hideToolbar,\n    showToolbar: showToolbar,\n    changeColorByIndex: changeColorByIndex,\n    takeScreenShot: takeScreenShot\n  };\n\n  if (typeof exports === 'object') {\n    module.exports = AnnotationAccPack;\n  } else if (typeof define === 'function' && define.amd) {\n    define(function () {\n      return AnnotationAccPack;\n    });\n  } else {\n    this.AnnotationAccPack = AnnotationAccPack;\n  }\n}).call(this);\n/*!\n *  Annotation Plugin for OpenTok\n *\n *  @Author: Trevor Boyer\n *  @Copyright (c) 2015 TokBox, Inc\n **/\n\n/* eslint-disable */\n\n/** Analytics */\n\n(function () {\n  var _OTKAnalytics;\n\n  var _otkanalytics;\n\n  var _session; // vars for the analytics logs. Internal use\n\n\n  var _logEventData = {\n    clientVersion: 'js-vsol-2.0.59',\n    // x.y.z filled by npm build script\n    componentId: 'annotationsAccPack',\n    name: 'guidAnnotationsKit',\n    actionStartDrawing: 'StartDrawing',\n    actionEndDrawing: 'EndDrawing',\n    variationSuccess: 'Success'\n  };\n\n  var _logAnalytics = function () {\n    // init the analytics logs\n    var _source = window.location.href;\n    var otkanalyticsData = {\n      clientVersion: _logEventData.clientVersion,\n      source: _source,\n      componentId: _logEventData.componentId,\n      name: _logEventData.name\n    };\n    _otkanalytics = new _OTKAnalytics(otkanalyticsData);\n    var sessionInfo = {\n      sessionId: _session.id,\n      connectionId: _session.connection.connectionId,\n      partnerId: _session.apiKey\n    };\n\n    _otkanalytics.addSessionInfo(sessionInfo);\n  };\n\n  var _log = function (action, variation) {\n    var data = {\n      action: action,\n      variation: variation\n    };\n\n    _otkanalytics.logEvent(data);\n  };\n  /** End Analytics */\n  //--------------------------------------\n  //  OPENTOK ANNOTATION CANVAS/VIEW\n  //--------------------------------------\n\n\n  var DEFAULT_ASSET_URL = 'https://assets.tokbox.com/solutions/images/';\n  OTSolution = this.OTSolution || {};\n\n  OTSolution.Annotations = function (options) {\n    options = options || {};\n    this.widgetVersion = 'js-1.0.0-beta';\n    this.parent = options.container;\n    this.videoFeed = options.feed;\n    this.imageAssets = options.imageAssets || DEFAULT_ASSET_URL;\n    _OTKAnalytics = _OTKAnalytics || options.OTKAnalytics;\n\n    if (!_otkanalytics) {\n      _logAnalytics();\n    }\n\n    if (typeof module === 'object' && typeof module.exports === 'object') {\n      $ = require('jquery');\n    }\n\n    var context = options.externalWindow ? options.externalWindow.document : window.document;\n    var self = this;\n\n    if (this.parent) {\n      var canvas = document.createElement('canvas');\n      canvas.setAttribute('id', 'opentok_canvas'); // session.connection.id?\n\n      canvas.style.position = 'absolute';\n      this.parent.appendChild(canvas);\n      canvas.setAttribute('width', this.parent.clientWidth + 'px');\n      canvas.style.width = window.getComputedStyle(this.parent).width;\n      canvas.setAttribute('height', this.parent.clientHeight + 'px');\n      canvas.style.height = window.getComputedStyle(this.parent).height;\n    }\n\n    function VideoRelativeCoordinateSet(update) {\n      var returnedObj = {};\n      var scale = {\n        get X() {\n          if (publishingScreenToMobileDevice || cobrowsing && subscribingToMobileScreen) {\n            return update.canvasWidth / canvas.width;\n          }\n\n          var width = cobrowsing ? canvas.width : self.videoFeed.stream.videoDimensions.width;\n          return width / canvas.width;\n        },\n\n        get Y() {\n          if (publishingScreenToMobileDevice || cobrowsing && subscribingToMobileScreen) {\n            return update.canvasHeight / canvas.height;\n          }\n\n          var height = cobrowsing ? canvas.height : self.videoFeed.stream.videoDimensions.height;\n          return height / canvas.height;\n        }\n\n      };\n      Object.keys(update).forEach(function (attr) {\n        returnedObj[attr] = update[attr];\n      });\n      ['X', 'Y'].forEach(function (coord) {\n        ['to', 'from', 'last', 'm', 'start', 'point'].forEach(function (verb) {\n          var attr = verb + coord;\n          returnedObj['_' + attr] = returnedObj[attr];\n          Object.defineProperty(returnedObj, attr, {\n            get: function () {\n              return returnedObj['_' + attr] / scale[coord];\n            },\n            set: function (newVal) {\n              returnedObj['_' + attr] = newVal; // * scale[coord];\n            }\n          });\n        });\n      });\n      return returnedObj;\n    }\n\n    var self = this;\n    var ctx;\n    var cbs = [];\n    var isPublisher;\n    var mirrored;\n    var scaledToFill;\n    var batchUpdates = [];\n    var drawHistory = [];\n    var drawHistoryReceivedFrom = [];\n    var updateHistory = [];\n    var eventHistory = [];\n    var isStartPoint = false;\n    var isVideo = self.videoFeed && self.videoFeed.element ? true : false;\n    var cobrowsing = !self.videoFeed.stream;\n    var subscribingToMobileScreen = false;\n    var publishingScreenToMobileDevice = false;\n    var client = new VideoRelativeCoordinateSet({\n      dragging: false\n    }); // INFO Mirrored feeds contain the OT_mirrored class\n\n    if (isVideo) {\n      isPublisher = (' ' + self.videoFeed.element.className + ' ').indexOf(' ' + 'OT_publisher' + ' ') > -1;\n      mirrored = isPublisher ? (' ' + self.videoFeed.element.className + ' ').indexOf(' ' + 'OT_mirrored' + ' ') > -1 : false;\n      scaledToFill = (' ' + self.videoFeed.element.className + ' ').indexOf(' ' + 'OT_fit-mode-cover' + ' ') > -1;\n    } else {\n      mirrored = false;\n      scaledToFill = false;\n    }\n\n    this.canvas = function () {\n      return canvas;\n    };\n    /**\n     * Links an OpenTok session to the annotation canvas. Typically, this is automatically linked\n     * when using {@link Toolbar#addCanvas}.\n     * @param session The OpenTok session.\n     */\n\n\n    this.link = function (session) {\n      this.session = session;\n    };\n    /**\n     * Changes the active annotation color for the canvas.\n     * @param color The hex string representation of the color (#rrggbb).\n     */\n\n\n    this.changeColor = function (color) {\n      self.userColor = color;\n\n      if (!self.lineWidth) {\n        self.lineWidth = 2; // TODO Default to first option in list of line widths\n      }\n    };\n    /**\n     * Changes the active annotation color for the canvas.\n     * @param colorIndex - the index regarding the colors array\n     */\n\n\n    this.changeColorByIndex = function (colorIndex) {\n      //set the user color\n      self.userColor = this.colors[colorIndex]; //activate the change on the toolbar\n\n      var colorChoices = context.querySelectorAll('.color-choice');\n      colorChoices[colorIndex].classList.add('active');\n      var button = context.getElementById('OT_colors');\n      button.setAttribute('class', 'OT_color annotation-btn colors');\n      button.style.borderRadius = '50%';\n      button.style.backgroundColor = this.colors[colorIndex];\n    };\n    /**\n     * Changes the line/stroke width of the active annotation for the canvas.\n     * @param size The size in pixels.\n     */\n\n\n    this.changeLineWidth = function (size) {\n      this.lineWidth = size;\n    };\n    /**\n     * Sets the selected menu item from the toolbar. This is typically handled\n     * automatically by the toolbar, but can be used to programmatically select an item.\n     * @param item The menu item to set as selected.\n     */\n\n\n    this.selectItem = function (item) {\n      if (self.overlay) {\n        self.parent.removeChild(self.overlay);\n        self.overlay = null;\n      }\n      /**\n       * Update classes for toolbar items\n       */\n\n\n      var updateSelected = function () {\n        // Remove the 'selected' class from the currently selected item (or parent)\n        var current = context.getElementById(self.selectedItem.id);\n        var shapesBtn = context.getElementById('OT_shapes');\n        var currentIsShape = shapesBtn.classList.contains('selected');\n        currentIsShape ? shapesBtn.classList.remove('selected') : current.classList.remove('selected'); // If the newly selected item is a shape, update the shapes subpanel button\n\n        var newlySelected = context.getElementById(item.id);\n\n        if (newlySelected.parentElement.classList.contains('shapes')) {\n          shapesBtn.classList.add('selected');\n        } else {\n          newlySelected.classList.add('selected');\n        }\n      };\n\n      if (item && item.id === 'OT_capture') {\n        self.captureScreenshot();\n      } else if (item && item.id.indexOf('OT_line_width') !== -1) {\n        if (item.size) {\n          self.changeLineWidth(item.size);\n        } // 'undo' and 'clear' are actions, not items that can be selected\n\n      } else if (item.id !== 'OT_undo' && item.id !== 'OT_clear') {\n        updateSelected();\n        self.selectedItem = item;\n      }\n    };\n    /**\n     * Sets the color palette for the color picker\n     * @param colors The array of hex color strings (#rrggbb).\n     */\n\n\n    this.colors = function (colors) {\n      this.colors = colors;\n      this.changeColor(colors[0]);\n    };\n    /**\n     * Clears the canvas for the active user. Only annotations added by the active OpenTok user will\n     * be removed, leaving the history of all other annotations.\n     */\n\n\n    this.clear = function () {\n      clearCanvas(false, self.session.connection.connectionId);\n\n      if (self.session) {\n        self.session.signal({\n          type: 'otAnnotation_clear'\n        });\n      }\n    };\n\n    this.undo = function () {\n      undoLast(false, self.session.connection.connectionId);\n    }; // TODO Allow the user to choose the image type? (jpg, png) Also allow size?\n\n    /**\n     * Captures a screenshot of the annotations displayed on top of the active video feed.\n     */\n\n\n    this.captureScreenshot = function (isAnnotationEnd) {\n      var canvasCopy = document.createElement('canvas');\n      canvasCopy.width = canvas.width;\n      canvasCopy.height = canvas.height;\n      var width = isVideo ? self.videoFeed.videoWidth() : canvas.width;\n      var height = isVideo ? self.videoFeed.videoHeight() : canvas.height;\n      var scale = 1;\n      var offsetX = 0;\n      var offsetY = 0;\n\n      if (scaledToFill) {\n        if (width < height) {\n          scale = canvas.width / width;\n          width = canvas.width;\n          height = height * scale;\n        } else {\n          scale = canvas.height / height;\n          height = canvas.height;\n          width = width * scale;\n        } // If stretched to fill, we need an offset to center the image\n\n\n        offsetX = (width - canvas.width) / 2;\n        offsetY = (height - canvas.height) / 2;\n      } else {\n        if (width > height) {\n          scale = canvas.width / width;\n          width = canvas.width;\n          height = height * scale;\n          offsetX = 0;\n          offsetY = (canvas.height - height) / 2;\n        } else {\n          scale = canvas.height / height;\n          height = canvas.height;\n          width = width * scale;\n          offsetX = (canvas.width - width) / 2;\n          offsetY = 0;\n        }\n      } // Combine the video and annotation images\n\n\n      var image = new Image();\n\n      image.onload = function () {\n        var ctxCopy = canvasCopy.getContext('2d');\n\n        if (mirrored) {\n          ctxCopy.translate(width, 0);\n          ctxCopy.scale(-1, 1);\n        }\n\n        ctxCopy.drawImage(image, offsetX, offsetY, width, height); // We want to make sure we draw the annotations the same way, so we need to flip back\n\n        if (mirrored) {\n          ctxCopy.translate(width, 0);\n          ctxCopy.scale(-1, 1);\n        }\n\n        ctxCopy.drawImage(canvas, 0, 0);\n        cbs.forEach(function (cb) {\n          var data = {\n            src: canvasCopy.toDataURL(),\n            isAnnotationEnd: isAnnotationEnd\n          };\n          cb.call(self, data);\n        }); // Clear and destroy the canvas copy\n\n        canvasCopy = null;\n      };\n\n      if (isVideo) {\n        imgData = 'data:image/png;base64,' + self.videoFeed.getImgData();\n        image.src = imgData;\n      } else {\n        var currentWindow = options.externalWindow ? options.externalWindow : window;\n        image.src = currentWindow.getComputedStyle(self.parent)['background-image'].replace(/url\\(\"|\"\\)/g, '');\n      }\n    };\n\n    this.onScreenCapture = function (cb) {\n      cbs.push(cb);\n    };\n    /**\n     * Set flags for sharing with mobile devices\n     * @param {Boolean} mobile - Is the other party using a mobile device\n     * @param {Boolean} publishing - Are we publishing our screen?\n     */\n\n\n    this.onMobileScreenShare = function (mobile, publishing) {\n      if (publishing) {\n        publishingScreenToMobileDevice = mobile;\n      } else {\n        subscribingToMobileScreen = mobile;\n      }\n    };\n\n    this.onResize = function () {\n      drawUpdates(updateHistory, true);\n      draw(null, true);\n    };\n\n    this.onClearAnnotation = function () {\n      dismissTextAnnotation();\n    };\n    /** Canvas Handling **/\n\n\n    function addEventListeners(el, s, fn) {\n      var evts = s.split(' ');\n\n      for (var i = 0, iLen = evts.length; i < iLen; i++) {\n        el.addEventListener(evts[i], fn, true);\n      }\n    }\n\n    function updateCanvas(event, resizeEvent) {\n      // Ensure that our canvas has been properly sized\n      if (canvas.width === 0) {\n        canvas.width = self.parent.getBoundingClientRect().width;\n      }\n\n      if (canvas.height === 0) {\n        canvas.height = self.parent.getBoundingClientRect().height;\n      }\n\n      var offsetLeft = !!resizeEvent ? event.canvas.offsetLeft : canvas.offsetLeft;\n      var offsetTop = !!resizeEvent ? event.canvas.offsetTop : canvas.offsetTop;\n\n      if (cobrowsing) {\n        var baseWidth = !!resizeEvent ? event.canvas.width : self.parent.clientWidth;\n        var baseHeight = !!resizeEvent ? event.canvas.height : self.parent.clientHeight;\n        var scaleX = canvas.width / baseWidth;\n        var scaleY = canvas.height / baseHeight;\n        var offsetX = event.offsetX || event.pageX - offsetLeft || event.changedTouches && event.changedTouches[0].pageX - offsetLeft;\n        var offsetY = event.offsetY || event.pageY - offsetTop || event.changedTouches && event.changedTouches[0].pageY - offsetTop;\n        var x = offsetX * scaleX;\n        var y = offsetY * scaleY;\n      } else {\n        var videoDimensions = self.videoFeed.stream.videoDimensions;\n        var scaleX = videoDimensions.width / canvas.width;\n        var scaleY = videoDimensions.height / canvas.height;\n\n        if (subscribingToMobileScreen) {\n          scaleX = 1;\n          scaleY = 1;\n        }\n\n        var offsetX = event.offsetX || event.pageX - offsetLeft || event.changedTouches && event.changedTouches[0].pageX - offsetLeft;\n        var offsetY = event.offsetY || event.pageY - offsetTop || event.changedTouches && event.changedTouches[0].pageY - offsetTop;\n        var x = offsetX * scaleX;\n        var y = offsetY * scaleY;\n      }\n\n      var update;\n      var selectedItem = resizeEvent ? event.selectedItem : self.selectedItem;\n\n      if (selectedItem) {\n        if (selectedItem.id === 'OT_pen') {\n          switch (event.type) {\n            case 'mousedown':\n            case 'touchstart':\n              client.dragging = true;\n              client.lastX = x;\n              client.lastY = y;\n              self.isStartPoint = true;\n              !resizeEvent && _log(_logEventData.actionStartDrawing, _logEventData.variationSuccess);\n              break;\n\n            case 'mousemove':\n            case 'touchmove':\n              if (client.dragging) {\n                update = {\n                  id: isVideo ? self.videoFeed.stream.connection.connectionId : self.session.connection.connectionId,\n                  fromId: self.session.connection.connectionId,\n                  fromX: client._lastX,\n                  fromY: client._lastY,\n                  toX: x,\n                  toY: y,\n                  color: resizeEvent ? event.userColor : self.userColor,\n                  lineWidth: self.lineWidth,\n                  videoWidth: isVideo ? self.videoFeed.videoElement().clientWidth : canvas.width,\n                  videoHeight: isVideo ? self.videoFeed.videoElement().clientHeight : canvas.height,\n                  canvasWidth: canvas.width,\n                  canvasHeight: canvas.height,\n                  mirrored: mirrored,\n                  startPoint: self.isStartPoint,\n                  // Each segment is treated as a new set of points\n                  endPoint: false,\n                  selectedItem: selectedItem,\n                  platform: 'web',\n                  guid: event.guid\n                };\n                draw(new VideoRelativeCoordinateSet(update), true);\n                client.lastX = x;\n                client.lastY = y;\n                !resizeEvent && sendUpdate(update);\n                self.isStartPoint = false;\n              }\n\n              break;\n\n            case 'mouseup':\n            case 'touchend':\n              client.dragging = false;\n              update = {\n                id: isVideo ? self.videoFeed.stream.connection.connectionId : self.session.connection.connectionId,\n                fromId: self.session.connection.connectionId,\n                fromX: client._lastX,\n                fromY: client._lastY,\n                toX: x,\n                toY: y,\n                color: resizeEvent ? event.userColor : self.userColor,\n                lineWidth: self.lineWidth,\n                videoWidth: isVideo ? self.videoFeed.videoElement().clientWidth : canvas.width,\n                videoHeight: isVideo ? self.videoFeed.videoElement().clientHeight : canvas.height,\n                canvasWidth: canvas.width,\n                canvasHeight: canvas.height,\n                mirrored: mirrored,\n                startPoint: self.isStartPoint,\n                // Each segment is treated as a new set of points\n                endPoint: true,\n                selectedItem: selectedItem,\n                platform: 'web',\n                guid: event.guid\n              };\n              draw(new VideoRelativeCoordinateSet(update), true);\n              client.lastX = x;\n              client.lastY = y;\n              !resizeEvent && sendUpdate(update);\n              self.isStartPoint = false;\n              !resizeEvent && _log(_logEventData.actionEndDrawing, _logEventData.variationSuccess);\n              break;\n\n            case 'mouseout':\n              client.dragging = false;\n          }\n        } else if (selectedItem.id === 'OT_text') {\n          update = {\n            id: isVideo ? self.videoFeed.stream.connection.connectionId : self.session.connection.connectionId,\n            fromId: self.session.connection.connectionId,\n            fromX: x,\n            fromY: y + event.inputHeight,\n            // Account for the height of the text input\n            color: event.userColor,\n            font: event.font,\n            text: event.text,\n            videoWidth: isVideo ? self.videoFeed.videoElement().clientWidth : canvas.width,\n            videoHeight: isVideo ? self.videoFeed.videoElement().clientHeight : canvas.height,\n            canvasWidth: canvas.width,\n            canvasHeight: canvas.height,\n            mirrored: mirrored,\n            selectedItem: selectedItem,\n            platform: 'web',\n            guid: event.guid\n          };\n          draw(new VideoRelativeCoordinateSet(update));\n          !resizeEvent && sendUpdate(update);\n        } else {\n          // We have a shape or custom object\n          // We are currently using a constant default width for shapes\n          var shapeLineWidth = 2;\n\n          if (selectedItem && selectedItem.points) {\n            client.mX = x;\n            client.mY = y;\n\n            switch (event.type) {\n              case 'mousedown':\n              case 'touchstart':\n                client.isDrawing = true;\n                client.dragging = true;\n                client.startX = x;\n                client.startY = y;\n                break;\n\n              case 'mousemove':\n              case 'touchmove':\n                if (client.dragging) {\n                  update = {\n                    color: resizeEvent ? event.userColor : self.userColor,\n                    lineWidth: resizeEvent ? event.lineWidth : shapeLineWidth,\n                    selectedItem: selectedItem // INFO The points for scaling will get added when drawing is complete\n\n                  };\n                  draw(new VideoRelativeCoordinateSet(update), true);\n                }\n\n                break;\n\n              case 'mouseup':\n              case 'touchend':\n                client.isDrawing = false;\n                var points = selectedItem.points;\n\n                if (points.length === 2) {\n                  update = {\n                    id: isVideo ? self.videoFeed.stream.connection.connectionId : self.session.connection.connectionId,\n                    fromId: self.session.connection.connectionId,\n                    fromX: client._startX,\n                    fromY: client._startY,\n                    toX: client._mX,\n                    toY: client._mY,\n                    color: resizeEvent ? event.userColor : self.userColor,\n                    lineWidth: resizeEvent ? event.lineWidth : shapeLineWidth,\n                    videoWidth: isVideo ? self.videoFeed.videoElement().clientWidth : canvas.width,\n                    videoHeight: isVideo ? self.videoFeed.videoElement().clientHeight : canvas.height,\n                    canvasWidth: canvas.width,\n                    canvasHeight: canvas.height,\n                    mirrored: mirrored,\n                    smoothed: false,\n                    startPoint: true,\n                    selectedItem: selectedItem,\n                    platform: 'web',\n                    guid: event.guid\n                  };\n                  drawHistory.push(new VideoRelativeCoordinateSet(update));\n                  !resizeEvent && sendUpdate(update);\n                } else {\n                  var scale = scaleForPoints(points);\n\n                  for (var i = 0; i < points.length; i++) {\n                    var firstPoint = false;\n                    var endPoint = false; // Scale the points according to the difference between the start and end points\n\n                    var pointX = client._startX + scale.x * points[i][0];\n                    var pointY = client._startY + scale.y * points[i][1];\n\n                    if (i === 0) {\n                      client.lastX = pointX;\n                      client.lastY = pointY;\n                      firstPoint = true;\n                    } else if (i === points.length - 1) {\n                      endPoint = true;\n                    }\n\n                    update = {\n                      id: isVideo ? self.videoFeed.stream.connection.connectionId : self.session.connection.connectionId,\n                      fromId: self.session.connection.connectionId,\n                      fromX: client._lastX,\n                      fromY: client._lastY,\n                      toX: pointX,\n                      toY: pointY,\n                      color: resizeEvent ? event.userColor : self.userColor,\n                      lineWidth: resizeEvent ? event.lineWidth : shapeLineWidth,\n                      videoWidth: isVideo ? self.videoFeed.videoElement().clientWidth : canvas.width,\n                      videoHeight: isVideo ? self.videoFeed.videoElement().clientHeight : canvas.height,\n                      canvasWidth: canvas.width,\n                      canvasHeight: canvas.height,\n                      mirrored: mirrored,\n                      smoothed: selectedItem.enableSmoothing,\n                      startPoint: firstPoint,\n                      endPoint: endPoint,\n                      selectedItem: selectedItem,\n                      platform: 'web',\n                      guid: event.guid\n                    };\n                    drawHistory.push(new VideoRelativeCoordinateSet(update));\n                    !resizeEvent && sendUpdate(update);\n                    client.lastX = pointX; // SCALE BACK!\n\n                    client.lastY = pointY;\n                  }\n\n                  draw(null);\n                }\n\n                client.dragging = false;\n            }\n          }\n        }\n      }\n    }\n\n    function guid() {\n      return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n        var r = Math.random() * 16 | 0,\n            v = c == 'x' ? r : r & 0x3 | 0x8;\n        return v.toString(16);\n      });\n    }\n\n    addEventListeners(canvas, 'mousedown mousemove mouseup mouseout touchstart touchmove touchend', function (event) {\n      // Handle text annotation separately and ignore mouse movements if we're not dragging.\n      var istextEvent = self.selectedItem && self.selectedItem.id === 'OT_text';\n      var notDragging = event.type === 'mousemove' && !client.dragging;\n\n      if (istextEvent || notDragging) {\n        return;\n      }\n\n      event.preventDefault(); // Save raw events to reprocess on canvas resize\n\n      event.selectedItem = self.selectedItem;\n\n      if (event.selectedItem) {\n        event.canvas = {\n          width: canvas.width,\n          height: canvas.height,\n          offsetLeft: canvas.offsetLeft,\n          offsetTop: canvas.offsetTop\n        };\n        event.userColor = self.userColor;\n        event.lineWidth = self.lineWidth;\n        event.guid = guid();\n        eventHistory.push(event);\n      }\n\n      updateCanvas(event);\n    });\n    /**\n     * We need intermediate event handling for text annotation since the user is adding\n     * text to an input element before it is actually added to the canvas.  The original\n     * click event is assigned to textEvent, which is then updated before being passed\n     * to updateCanvas.\n     */\n\n    /** Listen for a click on the canvas.  When it occurs, append a text input\n     * that the user can edit and listen for keydown on the enter key. When enter is\n     * pressed, processTextEvent is called, the input element is removed, and the text\n     * is appended to the canvas.\n     */\n\n    var textEvent;\n    var textInputId = 'textAnnotation';\n    var commitPopId = 'commitTextPop';\n    var commitPopClickId = 'confirm-btn';\n    var dismissPopId = 'dismiss-btn';\n    var ignoreClicks = false;\n\n    var handleClick = function (event) {\n      event.preventDefault();\n\n      if (!self.selectedItem || self.selectedItem.id !== 'OT_text' || ignoreClicks) {\n        return;\n      }\n\n      ignoreClicks = true; // Save raw events to reprocess on canvas resize\n\n      event.selectedItem = self.selectedItem;\n      createTextInput(event);\n    };\n    /**\n     * Get the value of the text input and use it to create an \"event\".\n     */\n\n\n    var processTextEvent = function () {\n      var textInput = context.getElementById(textInputId);\n      var inputheight = textInput.clientHeight;\n\n      if (!textInput.value) {\n        textEvent = null;\n        return;\n      }\n\n      textEvent.text = textInput.value;\n      textEvent.font = '16px Arial';\n      textEvent.userColor = self.userColor;\n      textEvent.canvas = {\n        width: canvas.width,\n        height: canvas.height,\n        offsetLeft: canvas.offsetLeft,\n        offsetTop: canvas.offsetTop\n      };\n      eventHistory.push(textEvent);\n      updateCanvas(textEvent);\n      dismissTextAnnotation();\n      ignoreClicks = false;\n    };\n\n    var createTextInput = function (event) {\n      var textInput = context.createElement('input');\n      textInput.setAttribute('type', 'text');\n      textInput.style.position = 'fixed';\n      textInput.style.top = event.clientY + 'px';\n      textInput.style.left = event.clientX + 'px';\n      textInput.style.background = 'rgba(255,255,255, .5)';\n      textInput.style.width = '100px';\n      textInput.style.maxWidth = '200px';\n      textInput.style.border = '1px dashed red';\n      textInput.style.fontSize = '16px';\n      textInput.style.color = self.userColor;\n      textInput.style.fontFamily = 'Arial';\n      textInput.style.zIndex = '1001';\n      textInput.setAttribute('data-canvas-origin', JSON.stringify({\n        x: event.offsetX,\n        y: event.offsetY\n      }));\n      textInput.setAttribute('data-top', event.clientY - 50);\n      textInput.id = textInputId;\n      context.body.appendChild(textInput);\n      textInput.focus();\n      textInput.addEventListener('keydown', function (event) {\n        //If its Enter\n        if (event.which === 13) {\n          creteCommitPop(textInput);\n        }\n      });\n      textInput.addEventListener('blur', function () {\n        creteCommitPop(textInput);\n      });\n      textEvent = event;\n      textEvent.inputHeight = textInput.clientHeight;\n      ignoreClicks = true;\n    };\n\n    var creteCommitPop = function (textInput) {\n      if (context.getElementById(commitPopId)) return;\n      var commitPop = context.createElement('div');\n      commitPop.style.position = 'fixed';\n      commitPop.style.top = textInput.dataset.top + 'px';\n      commitPop.style.left = textInput.style.left;\n      commitPop.style.width = '200px';\n      commitPop.style.fontSize = '16px';\n      commitPop.style.fontFamily = 'Arial';\n      commitPop.style.zIndex = '2000';\n      commitPop.style.border = '1px solid grey';\n      commitPop.style.height = '40px';\n      commitPop.className = 'ots-annotation-prompt';\n      commitPop.id = commitPopId;\n      var commitPopText = context.createElement('span');\n      var text = context.createTextNode('Commit type?');\n      commitPopText.appendChild(text);\n      commitPop.append(commitPopText);\n      var commitPopClick = context.createElement('div');\n      commitPopClick.id = commitPopClickId;\n      commitPopClick.className = commitPopClickId;\n      var dismissDiv = context.createElement('div');\n      dismissDiv.id = dismissPopId;\n      dismissDiv.className = dismissPopId;\n      commitPop.appendChild(commitPopClick);\n      commitPop.appendChild(dismissDiv);\n      context.body.appendChild(commitPop);\n      dismissDiv.addEventListener('click', dismissTextAnnotation);\n      commitPopClick.addEventListener('click', function () {\n        processTextEvent();\n      });\n    };\n\n    var dismissTextAnnotation = function () {\n      if (context.getElementById(textInputId)) context.getElementById(textInputId).remove();\n      if (context.getElementById(commitPopId)) context.getElementById(commitPopId).remove();\n      textEvent = null;\n      ignoreClicks = false;\n    };\n\n    addEventListeners(canvas, 'click', handleClick);\n    /**\n     * End Handle text markup\n     */\n\n    var draw = function (update, resizeEvent) {\n      if (!ctx) {\n        ctx = canvas.getContext('2d');\n        ctx.lineCap = 'round';\n        ctx.lineJoin = 'round';\n        ctx.fillStyle = 'solid';\n      } // Clear the canvas\n\n\n      ctx.clearRect(0, 0, canvas.width, canvas.height); // Repopulate the canvas with items from drawHistory\n\n      drawHistory.forEach(function (history) {\n        ctx.strokeStyle = history.color;\n        ctx.lineWidth = history.lineWidth; // INFO iOS serializes bools as 0 or 1\n\n        history.smoothed = !!history.smoothed;\n        history.startPoint = !!history.startPoint;\n        var secondPoint = false;\n        var isText = history.hasOwnProperty('text');\n\n        if (isText) {\n          ctx.font = history.font;\n          ctx.fillStyle = history.color;\n          ctx.fillText(history.text, history.fromX, history.fromY);\n        } else {\n          if (history.smoothed) {\n            if (history.startPoint) {\n              self.isStartPoint = true;\n            } else {\n              // If the start point flag was already set, we received the next point in the sequence\n              if (self.isStartPoint) {\n                secondPoint = true;\n                self.isStartPoint = false;\n              }\n            }\n\n            if (history.startPoint) {\n              // Close the last path and create a new one\n              ctx.closePath();\n              ctx.beginPath();\n            } else if (secondPoint) {\n              ctx.moveTo((history.fromX + history.toX) / 2, (history.fromY + history.toY) / 2);\n            } else {\n              // console.log('Points: (' + (history.fromX + history.toX) / 2 + ', ' + (history.fromY + history.toY) / 2 + ')');\n              // console.log('Control Points: (' + history.fromX + ', ' + history.fromY + ')');\n              ctx.quadraticCurveTo(history.fromX, history.fromY, (history.fromX + history.toX) / 2, (history.fromY + history.toY) / 2);\n              ctx.stroke();\n            }\n          } else {\n            ctx.beginPath();\n            ctx.moveTo(history.fromX, history.fromY);\n            ctx.lineTo(history.toX, history.toY);\n            ctx.stroke();\n            ctx.closePath();\n          }\n        }\n      });\n\n      if (!!resizeEvent && !update) {\n        return;\n      }\n\n      var selectedItem = !!resizeEvent ? update.selectedItem : self.selectedItem;\n\n      if (selectedItem && (selectedItem.title === 'Pen' || selectedItem.title === 'Text')) {\n        if (update) {\n          if (selectedItem.title === 'Pen') {\n            ctx.strokeStyle = update.color;\n            ctx.lineWidth = update.lineWidth;\n            ctx.beginPath();\n            ctx.moveTo(update.fromX, update.fromY);\n            ctx.lineTo(update.toX, update.toY);\n            ctx.stroke();\n            ctx.closePath();\n          }\n\n          if (selectedItem.title === 'Text') {\n            ctx.font = update.font;\n            ctx.fillStyle = update.color;\n            ctx.fillText(update.text, update.fromX, update.fromY);\n          }\n\n          drawHistory.push(update);\n        }\n      } else {\n        if (client.isDrawing) {\n          if (update) {\n            ctx.strokeStyle = update.color;\n            ctx.lineWidth = update.lineWidth;\n          }\n\n          if (selectedItem && selectedItem.points) {\n            drawPoints(ctx, self.selectedItem.points);\n          }\n        }\n      }\n    };\n\n    var drawPoints = function (ctx, points) {\n      var scale = scaleForPoints(points);\n      ctx.beginPath();\n\n      if (points.length === 2) {\n        // We have a line\n        ctx.moveTo(client.startX, client.startY);\n        ctx.lineTo(client.mX, client.mY);\n      } else {\n        for (var i = 0; i < points.length; i++) {\n          // Scale the points according to the difference between the start and end points\n          // Use device independent points here!\n          client.pointX = client._startX + scale.x * points[i][0];\n          client.pointY = client._startY + scale.y * points[i][1];\n\n          if (self.selectedItem.enableSmoothing) {\n            if (i === 0) {// Do nothing\n            } else if (i === 1) {\n              ctx.moveTo((client.pointX + client.lastX) / 2, (client.pointY + client.lastY) / 2);\n              client.lastX = (client._pointX + client._lastX) / 2;\n              client.lastX = (client._pointY + client._lastY) / 2;\n            } else {\n              ctx.quadraticCurveTo(client.lastX, client.lastY, (client.pointX + client.lastX) / 2, (client.pointY + client.lastY) / 2);\n              client.lastX = (client._pointX + client._lastX) / 2;\n              client.lastY = (client._pointY + client._lastY) / 2;\n            }\n          } else {\n            if (i === 0) {\n              ctx.moveTo(client.pointX, client.pointY);\n            } else {\n              ctx.lineTo(client.pointX, client.pointY);\n            }\n          }\n\n          client.lastX = client._pointX; // SCALE BACK!\n\n          client.lastY = client._pointY;\n        }\n      }\n\n      ctx.stroke();\n      ctx.closePath();\n    };\n\n    var scaleForPoints = function (points) {\n      // mX and mY refer to the end point of the enclosing rectangle (touch up)\n      var minX = Number.MAX_VALUE;\n      var minY = Number.MAX_VALUE;\n      var maxX = 0;\n      var maxY = 0;\n\n      for (var i = 0; i < points.length; i++) {\n        if (points[i][0] < minX) {\n          minX = points[i][0];\n        } else if (points[i][0] > maxX) {\n          maxX = points[i][0];\n        }\n\n        if (points[i][1] < minY) {\n          minY = points[i][1];\n        } else if (points[i][1] > maxY) {\n          maxY = points[i][1];\n        }\n      }\n\n      var dx = Math.abs(maxX - minX);\n      var dy = Math.abs(maxY - minY);\n      var scaleX = (client._mX - client._startX) / dx;\n      var scaleY = (client._mY - client._startY) / dy;\n      return {\n        x: scaleX,\n        y: scaleY\n      };\n    };\n\n    var drawIncoming = function (update, resizeEvent, index) {\n      var iCanvas = {\n        width: update.canvasWidth,\n        height: update.canvasHeight\n      };\n      var iVideo = {\n        width: update.videoWidth,\n        height: update.videoHeight\n      };\n      var video = {\n        width: isVideo ? self.videoFeed.videoElement().clientWidth : canvas.width,\n        height: isVideo ? self.videoFeed.videoElement().clientHeight : canvas.height\n      }; // INFO iOS serializes bools as 0 or 1\n\n      update.mirrored = !!update.mirrored; // Check if the incoming signal was mirrored\n\n      if (update.mirrored) {\n        update.fromX = video.width - update.fromX;\n        update.toX = video.width - update.toX;\n      } // Check to see if the active video feed is also mirrored (double negative)\n\n\n      if (mirrored) {\n        // Revert (Double negative)\n        update.fromX = video.width - update.fromX;\n        update.toX = video.width - update.toX;\n      }\n      /** Keep history of updates for resize */\n\n\n      var updateForHistory = JSON.parse(JSON.stringify(update));\n      updateForHistory.canvasWidth = canvas.width;\n      updateForHistory.canvasHeight = canvas.height;\n      updateForHistory.videoWidth = video.width;\n      updateForHistory.videoHeight = video.height;\n\n      if (resizeEvent) {\n        updateHistory[index] = updateForHistory;\n      } else {\n        updateHistory.push(updateForHistory);\n        drawHistory.push(new VideoRelativeCoordinateSet(update));\n      }\n      /** ********************************** */\n\n\n      draw(null);\n    };\n\n    var drawUpdates = function (updates, resizeEvent) {\n      updates.forEach(function (update, index) {\n        if (!isVideo || self.videoFeed && self.videoFeed.stream && update.id === self.videoFeed.stream.connection.connectionId) {\n          drawIncoming(update, resizeEvent, index);\n        }\n      });\n    };\n\n    var clearCanvas = function (incoming, cid) {\n      // console.log('cid: ' + cid);\n      // Remove all elements from history that were drawn by the sender\n      drawHistory = drawHistory.filter(function (history) {\n        return history.fromId !== cid;\n      });\n\n      if (!incoming) {\n        if (self.session) {\n          self.session.signal({\n            type: 'otAnnotation_clear'\n          });\n        }\n\n        eventHistory = [];\n      } else {\n        updateHistory = [];\n      } // Refresh the canvas\n\n\n      draw();\n    };\n\n    var undoLast = function (incoming, cid, itemsToRemove) {\n      var historyItem;\n      var removed;\n      var endPoint = false;\n      var removedItems = [];\n\n      for (var i = drawHistory.length - 1; i >= 0; i--) {\n        historyItem = drawHistory[i];\n\n        if (historyItem.fromId === cid) {\n          if (historyItem.platform === 'ios' && !!itemsToRemove && !!itemsToRemove.length && itemsToRemove[0] !== null) {\n            undoLastIos(incoming, cid, itemsToRemove);\n            break;\n          }\n\n          endPoint = endPoint || historyItem.endPoint;\n          removed = drawHistory.splice(i, 1)[0];\n          removedItems.push(removed.guid);\n\n          if (!endPoint || endPoint && removed.startPoint === true) {\n            break;\n          }\n        }\n      }\n\n      if (incoming) {\n        updateHistory = updateHistory.filter(function (history) {\n          return !itemsToRemove.includes(history.guid);\n        });\n      } else {\n        eventHistory = eventHistory.filter(function (history) {\n          return !removedItems.includes(history.guid);\n        });\n        self.session.signal({\n          type: 'otAnnotation_undo',\n          data: JSON.stringify(removedItems)\n        });\n      }\n\n      draw();\n    };\n\n    var undoLastIos = function (incoming, cid, itemsToRemove) {\n      var historyItem;\n      var removed;\n      var endPoint = false;\n      var removedItems = [];\n\n      for (var i = drawHistory.length - 1; i >= 0; i--) {\n        historyItem = drawHistory[i];\n\n        if (historyItem.fromId === cid) {\n          if (historyItem.guid === itemsToRemove[0]) {\n            removed = drawHistory.splice(i, 1)[0];\n            removedItems.push(removed.guid);\n          }\n        }\n      }\n\n      if (incoming) {\n        updateHistory = updateHistory.filter(function (history) {\n          return !itemsToRemove.includes(history.guid);\n        });\n      } else {\n        eventHistory = eventHistory.filter(function (history) {\n          return !removedItems.includes(history.guid);\n        });\n        self.session.signal({\n          type: 'otAnnotation_undo',\n          data: JSON.stringify(removedItems)\n        });\n      }\n\n      draw();\n    };\n\n    var count = 0;\n    /** Signal Handling **/\n\n    if (_session) {\n      _session.on({\n        'signal:otAnnotation_pen': function (event) {\n          if (event.from.connectionId !== _session.connection.connectionId) {\n            var paths = JSON.parse(event.data);\n            drawUpdates(paths);\n          }\n        },\n        'signal:otAnnotation_text': function (event) {\n          if (event.from.connectionId !== _session.connection.connectionId) {\n            drawUpdates(JSON.parse(event.data));\n          }\n        },\n        'signal:otAnnotation_history': function (event) {\n          // We will receive these from everyone in the room, only listen to the first\n          // person. Also the data is chunked together so we need all of that person's\n          if (!drawHistoryReceivedFrom || drawHistoryReceivedFrom === event.from.connectionId) {\n            drawHistoryReceivedFrom = event.from.connectionId;\n            drawUpdates(JSON.parse(event.data));\n          }\n        },\n        'signal:otAnnotation_clear': function (event) {\n          if (event.from.connectionId !== _session.connection.connectionId) {\n            // Only clear elements drawn by the sender's (from) Id\n            clearCanvas(true, event.from.connectionId);\n          }\n        },\n        'signal:otAnnotation_undo': function (event) {\n          if (event.from.connectionId !== _session.connection.connectionId) {\n            // Only clear elements drawn by the sender's (from) Id\n            undoLast(true, event.from.connectionId, JSON.parse(event.data));\n          }\n        },\n        connectionCreated: function (event) {\n          if (drawHistory.length > 0 && event.connection.connectionId !== _session.connection.connectionId) {\n            batchSignal('otWhiteboard_history', drawHistory, event.connection);\n          }\n        }\n      });\n    }\n\n    var batchSignal = function (data, toConnection) {\n      var signalError = function (err) {\n        if (err) {\n          TB.error(err);\n        }\n      };\n\n      var type = 'otAnnotation_pen';\n\n      var updateType = function (chunk) {\n        if (!chunk || !chunk[0] || !chunk[0].selectedItem || !chunk[0].selectedItem.id) {\n          return;\n        }\n\n        var id = chunk[0].selectedItem.id;\n        type = id === 'OT_text' ? 'otAnnotation_text' : 'otAnnotation_pen';\n      };\n      /**\n       * If the 'type' string exceeds the maximum length (128 bytes), or the\n       * 'data' string exceeds the maximum size (8 kB), OT will return a 413 error\n       * and the signal will not be sent.  The maximum number of characters that\n       * can be sent in the signal is 8,192.  Currently, the largest updates are\n       * 995 characters, meaning that the limit for the number of updates per\n       * signal should be 8, even taking into account the additional characters\n       * required to convert the entire array of updates as opposed to each one\n       * individually.  However, OT is throwing a 413 error once the size exceeds\n       * 7,900 characters. So, 7 is the magic number for the time being.\n       * UPDATE: At 7, we're still seeing errors.  So, 6 it is.\n       */\n\n\n      var dataChunk;\n      var start = 0;\n      var updatesPerSignal = 6;\n\n      while (start < data.length) {\n        dataChunk = data.slice(start, start + updatesPerSignal);\n        updateType(dataChunk);\n        start += updatesPerSignal;\n        var signal = {\n          type: type,\n          data: JSON.stringify(dataChunk)\n        };\n\n        if (toConnection) {\n          signal.to = toConnection;\n        }\n\n        self.session.signal(signal, signalError);\n      }\n    };\n\n    var updateTimeout;\n\n    var sendUpdate = function (update) {\n      if (self.session) {\n        batchUpdates.push(update);\n\n        if (!updateTimeout) {\n          updateTimeout = setTimeout(function () {\n            batchSignal(batchUpdates);\n            batchUpdates = [];\n            updateTimeout = null;\n          }, 100);\n        }\n      }\n    };\n  }; //--------------------------------------\n  //  OPENTOK ANNOTATION TOOLBAR\n  //--------------------------------------\n\n\n  OTSolution.Annotations.Toolbar = function (options) {\n    var self = this;\n\n    var _toolbar = this;\n\n    options || (options = {});\n\n    if (!options.session) {\n      throw new Error('OpenTok Annotation Widget requires an OpenTok session');\n    } else {\n      _session = options.session;\n    }\n\n    if (!_OTKAnalytics && !options.OTKAnalytics) {\n      throw new Error('OpenTok Annotation Widget requires an OpenTok Solution');\n    } else {\n      _OTKAnalytics = _OTKAnalytics || options.OTKAnalytics;\n    }\n\n    if (!_otkanalytics) {\n      _logAnalytics();\n    }\n\n    this.session = options.session;\n    this.parent = options.container;\n    this.externalWindow = options.externalWindow; // TODO Allow 'style' objects to be passed in for buttons, menu toolbar, etc?\n\n    this.backgroundColor = options.backgroundColor || 'rgba(102, 102, 102, 0.90)';\n    this.subpanelBackgroundColor = options.subpanelBackgroundColor || '#323232';\n    var imageAssets = options.imageAssets || DEFAULT_ASSET_URL;\n    var toolbarItems = [{\n      id: 'OT_pen',\n      title: 'Pen',\n      icon: [imageAssets, 'annotation-pencil.png'].join(''),\n      selectedIcon: [imageAssets, 'annotation-pencil.png'].join(''),\n      items: {\n        /* Built dynamically */\n      }\n    }, {\n      id: 'OT_colors',\n      title: 'Colors',\n      icon: '',\n      items: {\n        /* Built dynamically */\n      }\n    }, {\n      id: 'OT_shapes',\n      title: 'Shapes',\n      icon: [imageAssets, 'annotation-shapes.png'].join(''),\n      items: [{\n        id: 'OT_rect',\n        title: 'Rectangle',\n        icon: [imageAssets, 'annotation-rectangle.png'].join(''),\n        points: [[0, 0], [1, 0], [1, 1], [0, 1], [0, 0] // Reconnect point\n        ]\n      }, {\n        id: 'OT_rect_fill',\n        title: 'Rectangle-Fill',\n        icon: [imageAssets, 'annotation-rectangle.png'].join(''),\n        points: [[0, 0], [1, 0], [1, 1], [0, 1], [0, 0] // Reconnect point\n        ]\n      }, {\n        id: 'OT_oval',\n        title: 'Oval',\n        icon: [imageAssets, 'annotation-oval.png'].join(''),\n        enableSmoothing: true,\n        points: [[0, 0.5], [0.5 + 0.5 * Math.cos(5 * Math.PI / 4), 0.5 + 0.5 * Math.sin(5 * Math.PI / 4)], [0.5, 0], [0.5 + 0.5 * Math.cos(7 * Math.PI / 4), 0.5 + 0.5 * Math.sin(7 * Math.PI / 4)], [1, 0.5], [0.5 + 0.5 * Math.cos(Math.PI / 4), 0.5 + 0.5 * Math.sin(Math.PI / 4)], [0.5, 1], [0.5 + 0.5 * Math.cos(3 * Math.PI / 4), 0.5 + 0.5 * Math.sin(3 * Math.PI / 4)], [0, 0.5], [0.5 + 0.5 * Math.cos(5 * Math.PI / 4), 0.5 + 0.5 * Math.sin(5 * Math.PI / 4)]]\n      }, {\n        id: 'OT_oval_fill',\n        title: 'Oval-Fill',\n        icon: [imageAssets, 'annotation-oval-fill.png'].join(''),\n        enableSmoothing: true,\n        points: [[0, 0.5], [0.5 + 0.5 * Math.cos(5 * Math.PI / 4), 0.5 + 0.5 * Math.sin(5 * Math.PI / 4)], [0.5, 0], [0.5 + 0.5 * Math.cos(7 * Math.PI / 4), 0.5 + 0.5 * Math.sin(7 * Math.PI / 4)], [1, 0.5], [0.5 + 0.5 * Math.cos(Math.PI / 4), 0.5 + 0.5 * Math.sin(Math.PI / 4)], [0.5, 1], [0.5 + 0.5 * Math.cos(3 * Math.PI / 4), 0.5 + 0.5 * Math.sin(3 * Math.PI / 4)], [0, 0.5], [0.5 + 0.5 * Math.cos(5 * Math.PI / 4), 0.5 + 0.5 * Math.sin(5 * Math.PI / 4)]]\n      }, {\n        id: 'OT_star',\n        title: 'Star',\n        icon: [imageAssets, 'annotation-star.png'].join(''),\n        points: [\n        /* eslint-disable max-len */\n        [0.5 + 0.5 * Math.cos(90 * (Math.PI / 180)), 0.5 + 0.5 * Math.sin(90 * (Math.PI / 180))], [0.5 + 0.25 * Math.cos(126 * (Math.PI / 180)), 0.5 + 0.25 * Math.sin(126 * (Math.PI / 180))], [0.5 + 0.5 * Math.cos(162 * (Math.PI / 180)), 0.5 + 0.5 * Math.sin(162 * (Math.PI / 180))], [0.5 + 0.25 * Math.cos(198 * (Math.PI / 180)), 0.5 + 0.25 * Math.sin(198 * (Math.PI / 180))], [0.5 + 0.5 * Math.cos(234 * (Math.PI / 180)), 0.5 + 0.5 * Math.sin(234 * (Math.PI / 180))], [0.5 + 0.25 * Math.cos(270 * (Math.PI / 180)), 0.5 + 0.25 * Math.sin(270 * (Math.PI / 180))], [0.5 + 0.5 * Math.cos(306 * (Math.PI / 180)), 0.5 + 0.5 * Math.sin(306 * (Math.PI / 180))], [0.5 + 0.25 * Math.cos(342 * (Math.PI / 180)), 0.5 + 0.25 * Math.sin(342 * (Math.PI / 180))], [0.5 + 0.5 * Math.cos(18 * (Math.PI / 180)), 0.5 + 0.5 * Math.sin(18 * (Math.PI / 180))], [0.5 + 0.25 * Math.cos(54 * (Math.PI / 180)), 0.5 + 0.25 * Math.sin(54 * (Math.PI / 180))], [0.5 + 0.5 * Math.cos(90 * (Math.PI / 180)), 0.5 + 0.5 * Math.sin(90 * (Math.PI / 180))]\n        /* eslint-enable max-len */\n        ]\n      }, {\n        id: 'OT_arrow',\n        title: 'Arrow',\n        icon: [imageAssets, 'annotation-arrow.png'].join(''),\n        points: [[0, 1], [3, 1], [3, 0], [5, 2], [3, 4], [3, 3], [0, 3], [0, 1] // Reconnect point\n        ]\n      }, {\n        id: 'OT_line',\n        title: 'Line',\n        icon: [imageAssets, 'annotation-line.png'].join(''),\n        selectedIcon: [imageAssets, 'annotation-line.png'].join(''),\n        points: [[0, 0], [0, 1]]\n      }]\n    }, {\n      id: 'OT_text',\n      title: 'Text',\n      icon: [imageAssets, 'annotation-text.png'].join(''),\n      selectedIcon: [imageAssets, 'annotation-text.png'].join('')\n    }, {\n      id: 'OT_capture',\n      title: 'Capture',\n      icon: [imageAssets, 'annotation-camera.png'].join(''),\n      selectedIcon: [imageAssets, 'annotation-camera.png'].join('')\n    }, {\n      id: 'OT_undo',\n      title: 'Undo',\n      icon: [imageAssets, 'annotation-undo.png'].join('')\n    }, {\n      id: 'OT_clear',\n      title: 'Clear',\n      icon: [imageAssets, 'annotation-clear.png'].join('')\n    }];\n    /**\n     * If we recieve items as part of the options hash, build the toolbar from the list of items.\n     * Otherwise, include all items.\n     */\n\n    var getItems = function () {\n      var itemNames = ['pen', 'colors', 'shapes', 'text', 'capture', 'undo', 'clear'];\n      var shapeNames = ['rectangle', 'rectangle-fill', 'oval', 'oval-fill', 'star', 'arrow', 'line'];\n\n      var addItem = function (acc, item) {\n        var index = itemNames.indexOf(item);\n\n        if (index !== -1) {\n          var toolbarItem = toolbarItems[index];\n\n          if (toolbarItem.title === 'Shapes' && !!options.shapes) {\n            var shapes = options.shapes.reduce(function (shapeAcc, shape) {\n              var shapeIndex = shapeNames.indexOf(shape);\n              return shapeIndex !== -1 ? shapeAcc.concat(toolbarItem.items[shapeIndex]) : shapeAcc;\n            }, []);\n            toolbarItem.items = shapes;\n          }\n\n          acc.push(toolbarItem);\n        }\n\n        return acc;\n      };\n\n      if (!!options.items && !!options.items.length) {\n        var itemsToBuild = options.items[0] === '*' ? itemNames : options.items;\n        return itemsToBuild.reduce(addItem, []);\n      } else {\n        return toolbarItems;\n      }\n    };\n\n    this.items = getItems();\n    this.colors = options.colors || ['#1abc9c', '#2ecc71', '#3498db', '#9b59b6', '#34495e', '#16a085', '#27ae60', '#2980b9', '#8e44ad', '#2c3e50', '#f1c40f', '#e67e22', '#e74c3c', '#ecf0f1', '#95a5a6', '#f39c12', '#d35400', '#c0392b', '#bdc3c7', '#7f8c8d'];\n    this.cbs = [];\n    var canvases = [];\n    /**\n     * Creates a sub-menu with a color picker.\n     *\n     * @param {String|Element} parent The parent div container for the color picker sub-menu.\n     * @param {Array} colors The array of colors to add to the palette.\n     * @param {Object} options options An object containing the following fields:\n     *\n     *  - `openEvent` (String): The open event (default: `\"click\"`).\n     *  - `style` (Object): Some style options:\n     *    - `display` (String): The display value when the picker is opened (default: `\"block\"`).\n     *  - `template` (String): The color item template. The `{color}` snippet will be replaced\n     *    with the color value (default: `\"<div data-col=\\\"{color}\\\" style=\\\"background-color: {color}\\\"></div>\"`).\n     *  - `autoclose` (Boolean): If `false`, the color picker will not be hidden by default (default: `true`).\n     *\n     * @constructor\n     */\n\n    var ColorPicker = function (parent, colors, options) {\n      var self = this;\n      var context = _toolbar.externalWindow ? _toolbar.externalWindow.document : document;\n\n      this.getElm = function (el, all) {\n        if (typeof el === 'string') {\n          return all ? context.querySelectorAll(el) : context.querySelector(el);\n        }\n\n        return el;\n      };\n\n      this.render = function () {\n        var self = this,\n            html = '';\n        self.colors.forEach(function (c) {\n          html += self.options.template.replace(/\\{color\\}/g, c);\n        });\n        self.elm.innerHTML = html;\n      };\n\n      this.close = function () {\n        // this.elm.style.display = 'none';\n        this.elm.classList.add('ots-hidden');\n      };\n\n      this.open = function () {\n        // this.elm.style.display = this.options.style.display;\n        this.elm.classList.remove('ots-hidden');\n      };\n\n      this.colorChosen = function (cb) {\n        this.cbs.push(cb);\n      };\n\n      this.set = function (c, p) {\n        var self = this;\n        self.color = c;\n\n        if (p === false) {\n          return;\n        }\n\n        self.cbs.forEach(function (cb) {\n          cb.call(self, c);\n        });\n      };\n\n      options = options || {};\n      options.openEvent = options.openEvent || 'click';\n      options.style = Object(options.style); // options.style.display = options.style.display || 'block';\n\n      options.template = options.template || '<div class=\\\"color-choice\\\" data-col=\\\"{color}\\\" style=\\\"background-color: {color}\\\"></div>';\n      self.elm = self.getElm(parent);\n      self.cbs = [];\n      self.colors = colors;\n      self.options = options;\n      self.render(); // Click on colors\n\n      self.elm.addEventListener('click', function (ev) {\n        var color = ev.target.getAttribute('data-col');\n\n        if (!color) {\n          return;\n        }\n\n        var colors = Array.from(self.getElm('.color-choice', true));\n        colors.forEach(function (el) {\n          el.classList.remove('active');\n        });\n        ev.target.classList.add('active');\n        self.set(color);\n        self.close();\n      });\n\n      if (options.autoclose !== false) {\n        self.close();\n      }\n    };\n\n    var panel;\n\n    this.createPanel = function (externalWindow) {\n      if (_toolbar.parent) {\n        var context = externalWindow ? externalWindow.document : document;\n        panel = context.createElement('div');\n        panel.setAttribute('id', 'OT_toolbar');\n        panel.setAttribute('class', 'OT_panel');\n        panel.style.width = '100%';\n        panel.style.height = '100%';\n        this.parent.appendChild(panel);\n        this.parent.style.position = 'relative';\n        this.parent.zIndex = 1000;\n        var toolbarItems = [];\n        var subPanel = context.createElement('div');\n\n        for (var i = 0, total = this.items.length; i < total; i++) {\n          var item = this.items[i];\n          var button = context.createElement('input');\n          button.setAttribute('type', 'button');\n          button.setAttribute('id', item.id);\n          button.classList.add('annotation-btn');\n          button.classList.add(item.title.split(' ').join('-').toLowerCase());\n\n          if (item.id === 'OT_colors') {\n            var colorPicker = context.createElement('div');\n            colorPicker.setAttribute('class', 'color-picker'); // colorPicker.style.backgroundColor = this.subpanelBackgroundColor;\n\n            this.parent.appendChild(colorPicker);\n            var pk = new ColorPicker('.color-picker', this.colors, {\n              externalWindow: _toolbar.externalWindow\n            });\n            pk.colorChosen(function (color) {\n              var colorGroup = context.getElementById('OT_colors');\n              colorGroup.style.backgroundColor = color;\n              canvases.forEach(function (canvas) {\n                canvas.changeColor(color);\n              });\n            });\n            var colorChoices = context.querySelectorAll('.color-choice');\n            colorChoices[0].classList.add('active');\n            button.setAttribute('class', 'OT_color annotation-btn colors');\n            button.style.borderRadius = '50%';\n            button.style.backgroundColor = this.colors[0];\n          }\n\n          if (item.title === 'Pen' && !Array.isArray(item.items)) {\n            // Add defaults\n            item.items = [{\n              id: 'OT_line_width_2',\n              title: 'Line Width 2',\n              size: 2\n            }, {\n              id: 'OT_line_width_4',\n              title: 'Line Width 4',\n              size: 4\n            }, {\n              id: 'OT_line_width_6',\n              title: 'Line Width 6',\n              size: 6\n            }, {\n              id: 'OT_line_width_8',\n              title: 'Line Width 8',\n              size: 8\n            }, {\n              id: 'OT_line_width_10',\n              title: 'Line Width 10',\n              size: 10\n            }, {\n              id: 'OT_line_width_12',\n              title: 'Line Width 12',\n              size: 12\n            }, {\n              id: 'OT_line_width_14',\n              title: 'Line Width 14',\n              size: 14\n            }];\n          }\n\n          if (item.items) {\n            // Indicate that we have a group\n            button.setAttribute('data-type', 'group');\n          }\n\n          button.setAttribute('data-col', item.title);\n          toolbarItems.push(button.outerHTML);\n        }\n\n        panel.innerHTML = toolbarItems.join('');\n        /**\n         * Since the color picker button uses its background to display the\n         * current color, we need to add a pseudo-element element to the toolbar\n         * to simulate hover state on the button.  When the user hovers over the\n         * button, we add the 'colors-hover' class to 'OT_toolbar' which has a\n         * pseudo-element which makes it seem as though the color picker button\n         * background is changing.\n         * TODO: Update the color picker and color choices to display colors\n         *       using pseudo-elements, so that we can more easily apply hover\n         *       states.\n         */\n\n        var toggleColorsHover = function (hover) {\n          var action = hover ? 'add' : 'remove';\n          document.getElementById('OT_toolbar').classList[action]('colors-hover');\n        };\n\n        var colors = context.getElementById('OT_colors');\n        colors.addEventListener('mouseenter', function () {\n          toggleColorsHover(true);\n        });\n        colors.addEventListener('mouseleave', function () {\n          toggleColorsHover(false);\n        });\n        /** End color picker hover state */\n\n        panel.onclick = function (ev) {\n          var group = ev.target.getAttribute('data-type') === 'group';\n          var itemName = ev.target.getAttribute('data-col');\n          var id = ev.target.getAttribute('id'); // Close the submenu if we are clicking on an item and not a group button\n\n          if (!group) {\n            self.items.forEach(function (item) {\n              if ((item.title !== 'Clear' || item.title !== 'Undo') && item.title === itemName) {\n                self.selectedItem = item;\n                attachDefaultAction(item);\n                canvases.forEach(function (canvas) {\n                  canvas.selectItem(self.selectedItem);\n                });\n                return false;\n              }\n            });\n            subPanel.classList.add('ots-hidden');\n          } else {\n            self.items.forEach(function (item) {\n              if (item.title === itemName) {\n                self.selectedGroup = item;\n\n                if (item.items) {\n                  subPanel.setAttribute('class', ['OT_subpanel', 'ots-hidden', item.title.toLowerCase()].join(' '));\n                  self.parent.appendChild(subPanel);\n\n                  if (Array.isArray(item.items)) {\n                    var submenuItems = [];\n\n                    if (item.id === 'OT_pen') {\n                      // We want to dynamically create icons for the list of possible line widths\n                      item.items.forEach(function (subItem) {\n                        // INFO Using a div here - not input to create an inner div representing the line width - better option?\n                        var itemButton = context.createElement('div');\n                        itemButton.setAttribute('data-col', subItem.title);\n                        itemButton.setAttribute('class', ['line-width-option', subItem.size].join(' '));\n                        itemButton.setAttribute('id', subItem.id);\n                        var lineIcon = context.createElement('div');\n                        lineIcon.setAttribute('class', 'line-width-icon'); // TODO Allow devs to change this?\n\n                        lineIcon.style.backgroundColor = '#FFFFFF';\n                        lineIcon.style.width = '80%';\n                        lineIcon.style.height = subItem.size + 'px';\n                        lineIcon.style.position = 'relative';\n                        lineIcon.style.left = '50%';\n                        lineIcon.style.top = '50%';\n                        lineIcon.style.transform = 'translateX(-50%) translateY(-50%)'; // Prevents div icon from catching events so they can be passed to the parent\n\n                        lineIcon.style.pointerEvents = 'none';\n                        itemButton.appendChild(lineIcon);\n                        submenuItems.push(itemButton.outerHTML);\n                      });\n                    } else {\n                      item.items.forEach(function (subItem) {\n                        var itemButton = context.createElement('input');\n                        itemButton.setAttribute('type', 'button');\n                        itemButton.setAttribute('data-col', subItem.title);\n                        itemButton.setAttribute('id', subItem.id);\n                        itemButton.setAttribute('class', ['annotation-btn', subItem.title.toLowerCase()].join(' ')); // itemButton.style.backgroundImage = 'url(\"' + subItem.icon + '\")';\n                        // itemButton.style.position = 'relative';\n                        // itemButton.style.top = '50%';\n                        // itemButton.style.transform = 'translateY(-50%)';\n                        // itemButton.style.backgroundSize = self.iconWidth + ' ' + self.iconHeight;\n                        // itemButton.style.backgroundPosition = 'center';\n                        // itemButton.style.width = self.buttonWidth;\n                        // itemButton.style.height = self.buttonHeight;\n                        // itemButton.style.border = 'none';\n                        // itemButton.style.cursor = 'pointer';\n\n                        submenuItems.push(itemButton.outerHTML);\n                      });\n                    }\n\n                    subPanel.innerHTML = submenuItems.join('');\n                  }\n                }\n\n                if (id === 'OT_shapes' || id === 'OT_pen') {\n                  if (subPanel) {\n                    subPanel.classList.remove('ots-hidden');\n                  }\n\n                  pk.close();\n                } else if (id === 'OT_colors') {\n                  if (subPanel) {\n                    subPanel.classList.add('ots-hidden');\n                  }\n\n                  pk.open();\n                }\n              }\n            });\n          }\n\n          self.cbs.forEach(function (cb) {\n            cb.call(self, id);\n          });\n        };\n\n        subPanel.onclick = function (ev) {\n          var group = ev.target.getAttribute('data-type') === 'group';\n          var itemName = ev.target.getAttribute('data-col');\n          var id = ev.target.getAttribute('id');\n\n          if (!!id && id.replace(/[^a-z]/g, '') === 'linewidth') {\n            canvases.forEach(function (canvas) {\n              canvas.selectItem(self.selectedGroup);\n            });\n          }\n\n          subPanel.classList.add('ots-hidden');\n\n          if (!group) {\n            self.selectedGroup.items.forEach(function (item) {\n              if (item.id !== 'OT_clear' && item.id === id) {\n                if (self.selectedItem) {\n                  var lastBtn = document.getElementById(self.selectedItem.id);\n\n                  if (lastBtn) {// lastBtn.style.background = 'url(\"' + self.selectedItem.icon + '\") no-repeat';\n                    // lastBtn.style.backgroundSize = self.iconWidth + ' ' + self.iconHeight;\n                    // lastBtn.style.backgroundPosition = 'center';\n                  }\n                }\n\n                if (item.selectedIcon) {\n                  var selBtn = document.getElementById(item.id);\n\n                  if (lastBtn) {\n                    selBtn.style.background = 'url(\"' + item.selectedIcon + '\") no-repeat';\n                    selBtn.style.backgroundSize = self.iconWidth + ' ' + self.iconHeight;\n                    selBtn.style.backgroundPosition = 'center';\n                  }\n                }\n\n                self.selectedItem = item;\n                attachDefaultAction(item);\n                canvases.forEach(function (canvas) {\n                  canvas.selectItem(self.selectedItem);\n                });\n                return false;\n              }\n            });\n          }\n\n          self.cbs.forEach(function (cb) {\n            cb.call(self, id);\n          });\n        };\n\n        var onClear = context.getElementById('OT_clear').onclick = function () {\n          canvases.forEach(function (canvas) {\n            canvas.clear();\n          });\n        };\n\n        context.getElementById('OT_undo').onclick = function () {\n          canvases.forEach(function (canvas) {\n            canvas.undo();\n          });\n        };\n\n        window.addEventListener('OT_clear', function () {\n          onClear();\n          self.selectedItem = null;\n          canvases.forEach(function (canvas) {\n            canvas.selectItem(self.selectedItem);\n          });\n        });\n        window.addEventListener('OT_pen', function (evt) {\n          var item = self.items.find(function (item) {\n            return item.id === 'OT_pen';\n          });\n          self.selectedItem = item;\n          attachDefaultAction(item);\n          var color = evt.detail.color;\n          canvases.forEach(function (canvas) {\n            canvas.selectItem(self.selectedItem);\n            color && canvas.changeColor(color);\n          });\n        });\n      }\n    };\n\n    !this.externalWindow && this.createPanel();\n\n    var attachDefaultAction = function (item) {\n      if (!item.points) {\n        // Attach default actions\n        if (item.id === 'OT_line') {\n          self.selectedItem.points = [[0, 0], [0, 1]];\n        } else if (item.id === 'OT_arrow') {\n          self.selectedItem.points = [[0, 1], [3, 1], [3, 0], [5, 2], [3, 4], [3, 3], [0, 3], [0, 1] // Reconnect point\n          ];\n        } else if (item.id === 'OT_rect') {\n          self.selectedItem.points = [[0, 0], [1, 0], [1, 1], [0, 1], [0, 0] // Reconnect point\n          ];\n        } else if (item.id === 'OT_oval') {\n          self.selectedItem.enableSmoothing = true;\n          self.selectedItem.points = [[0, 0.5], [0.5 + 0.5 * Math.cos(5 * Math.PI / 4), 0.5 + 0.5 * Math.sin(5 * Math.PI / 4)], [0.5, 0], [0.5 + 0.5 * Math.cos(7 * Math.PI / 4), 0.5 + 0.5 * Math.sin(7 * Math.PI / 4)], [1, 0.5], [0.5 + 0.5 * Math.cos(Math.PI / 4), 0.5 + 0.5 * Math.sin(Math.PI / 4)], [0.5, 1], [0.5 + 0.5 * Math.cos(3 * Math.PI / 4), 0.5 + 0.5 * Math.sin(3 * Math.PI / 4)], [0, 0.5], [0.5 + 0.5 * Math.cos(5 * Math.PI / 4), 0.5 + 0.5 * Math.sin(5 * Math.PI / 4)]];\n        }\n      }\n    };\n    /**\n     * Callback function for toolbar menu item click events.\n     * @param cb The callback function used to handle the click event.\n     */\n\n\n    this.itemClicked = function (cb) {\n      this.cbs.push(cb);\n    };\n    /**\n     * Links an annotation canvas to the toolbar so that menu actions can be handled on it.\n     * @param canvas The annotation canvas to be linked to the toolbar.\n     * @param externalWindow External screen sharing window\n     */\n\n\n    this.addCanvas = function (canvas, externalWindow) {\n      var self = this;\n      var context = externalWindow ? externalWindow.document : document;\n      canvas.link(self.session);\n      canvas.colors(self.colors);\n      canvases.push(canvas);\n      canvases.forEach(function (canvas) {\n        canvas.selectedItem = canvas.selectedItem || self.items[0];\n        context.getElementById(canvas.selectedItem.id).classList.add('selected');\n      });\n    };\n    /**\n     * Removes the annotation canvas with the specified connectionId from its parent container and\n     * unlinks it from the toolbar.\n     * @param connectionId The stream's connection ID for the video feed whose canvas should be removed.\n     */\n\n\n    this.removeCanvas = function (connectionId) {\n      canvases.forEach(function (annotationView) {\n        var canvas = annotationView.canvas();\n\n        if (annotationView.videoFeed.stream.connection.connectionId === connectionId) {\n          if (canvas.parentNode) {\n            canvas.parentNode.removeChild(canvas);\n          }\n        }\n      });\n      canvases = canvases.filter(function (annotationView) {\n        return annotationView.videoFeed.stream.connection.connectionId !== connectionId;\n      });\n    };\n    /**\n     * Removes the toolbar and all associated annotation canvases from their parent containers.\n     */\n\n\n    this.remove = function () {\n      try {\n        panel.parentNode.removeChild(panel);\n      } catch (e) {\n        console.log('Toolbar parent no longer exists');\n      }\n\n      canvases.forEach(function (annotationView) {\n        var canvas = annotationView.canvas();\n\n        if (canvas.parentNode) {\n          canvas.parentNode.removeChild(canvas);\n        }\n      });\n      canvases = [];\n    };\n  };\n}).call(this);","map":{"version":3,"sources":["/home/fizoumizou/Documents/pfe/react/node_modules/opentok-annotation/dist/opentok-annotation.js"],"names":["_","$","OTKAnalytics","module","exports","require","_this","_accPack","_session","_canvas","_subscribingToMobileScreen","_elements","_otkanalytics","_logEventData","clientVersion","componentId","name","actionInitialize","actionStart","actionEnd","actionFreeHand","actionPickerColor","actionText","actionScreenCapture","actionErase","actionUseToolbar","variationAttempt","variationError","variationSuccess","_logAnalytics","_source","window","location","href","otkanalyticsData","source","sessionInfo","sessionId","id","connectionId","connection","partnerId","apiKey","addSessionInfo","_log","action","variation","data","logEvent","_getElem","el","document","querySelector","_triggerEvent","event","triggerEvent","_registerEvents","events","registerEvents","_setupUI","toolbar","join","append","_palette","_aspectRatio","_refreshCanvas","throttle","onResize","_resizeCanvas","width","height","cobrowsing","cobrowsingImage","absoluteParent","canvasContainer","clientWidth","clientHeight","videoDimensions","videoFeed","stream","e","console","log","origRatio","destRatio","calcDimensions","top","left","externalWindow","find","css","attr","trailing","_changeColorByIndex","colorIndex","changeColorByIndex","_takeScreenShot","captureScreenshot","_listenForResize","resizeSubject","on","_createToolbar","session","options","toolbarId","property","items","shapes","colors","imageAssets","backgroundColor","container","w","getElementById","OTSolution","Annotations","Toolbar","length","itemClicked","actions","OT_pen","OT_colors","OT_text","OT_clear","_createExternalWindow","deferred","Deferred","screen","externalWindowHTML","windowFeatures","annotationWindow","open","write","onbeforeunload","close","OT","triggerCloseEvent","windowReady","createContainerElements","ready","resolve","setTimeout","promise","_removeToolbar","onClearAnnotation","off","remove","_requestPlatformData","pubSub","mobileInitiator","isPublisher","Object","prototype","hasOwnProperty","call","signal","type","to","platform","JSON","parse","isMobile","onMobileScreenShare","start","then","createPanel","linkCanvas","feed","addCanvas","onScreenCapture","dataUrl","win","focus","context","canvas","first","getElementsByTagName","resizeCanvas","takeScreenShot","addSubscriberToExternalWindow","addSubscriberVideo","end","hideToolbar","parent","hide","showToolbar","show","AnnotationAccPack","omit","Error","constructor","define","amd","_OTKAnalytics","actionStartDrawing","actionEndDrawing","DEFAULT_ASSET_URL","widgetVersion","self","createElement","setAttribute","style","position","appendChild","getComputedStyle","VideoRelativeCoordinateSet","update","returnedObj","scale","X","publishingScreenToMobileDevice","subscribingToMobileScreen","canvasWidth","Y","canvasHeight","keys","forEach","coord","verb","defineProperty","get","set","newVal","ctx","cbs","mirrored","scaledToFill","batchUpdates","drawHistory","drawHistoryReceivedFrom","updateHistory","eventHistory","isStartPoint","isVideo","element","client","dragging","className","indexOf","link","changeColor","color","userColor","lineWidth","colorChoices","querySelectorAll","classList","add","button","borderRadius","changeLineWidth","size","selectItem","item","overlay","removeChild","updateSelected","current","selectedItem","shapesBtn","currentIsShape","contains","newlySelected","parentElement","clear","clearCanvas","undo","undoLast","isAnnotationEnd","canvasCopy","videoWidth","videoHeight","offsetX","offsetY","image","Image","onload","ctxCopy","getContext","translate","drawImage","cb","src","toDataURL","imgData","getImgData","currentWindow","replace","push","mobile","publishing","drawUpdates","draw","dismissTextAnnotation","addEventListeners","s","fn","evts","split","i","iLen","addEventListener","updateCanvas","resizeEvent","getBoundingClientRect","offsetLeft","offsetTop","baseWidth","baseHeight","scaleX","scaleY","pageX","changedTouches","pageY","x","y","lastX","lastY","fromId","fromX","_lastX","fromY","_lastY","toX","toY","videoElement","startPoint","endPoint","guid","sendUpdate","inputHeight","font","text","shapeLineWidth","points","mX","mY","isDrawing","startX","startY","_startX","_startY","_mX","_mY","smoothed","scaleForPoints","firstPoint","pointX","pointY","enableSmoothing","c","r","Math","random","v","toString","istextEvent","notDragging","preventDefault","textEvent","textInputId","commitPopId","commitPopClickId","dismissPopId","ignoreClicks","handleClick","createTextInput","processTextEvent","textInput","inputheight","value","clientY","clientX","background","maxWidth","border","fontSize","fontFamily","zIndex","stringify","body","which","creteCommitPop","commitPop","dataset","commitPopText","createTextNode","commitPopClick","dismissDiv","lineCap","lineJoin","fillStyle","clearRect","history","strokeStyle","secondPoint","isText","fillText","closePath","beginPath","moveTo","quadraticCurveTo","stroke","lineTo","title","drawPoints","_pointX","_pointY","minX","Number","MAX_VALUE","minY","maxX","maxY","dx","abs","dy","drawIncoming","index","iCanvas","iVideo","video","updateForHistory","updates","incoming","cid","filter","itemsToRemove","historyItem","removed","removedItems","undoLastIos","splice","includes","count","from","paths","connectionCreated","batchSignal","toConnection","signalError","err","TB","error","updateType","chunk","dataChunk","updatesPerSignal","slice","updateTimeout","_toolbar","subpanelBackgroundColor","toolbarItems","icon","selectedIcon","cos","PI","sin","getItems","itemNames","shapeNames","addItem","acc","toolbarItem","reduce","shapeAcc","shape","shapeIndex","concat","itemsToBuild","canvases","ColorPicker","getElm","all","render","html","template","elm","innerHTML","colorChosen","p","openEvent","ev","target","getAttribute","Array","autoclose","panel","subPanel","total","toLowerCase","colorPicker","pk","colorGroup","isArray","outerHTML","toggleColorsHover","hover","onclick","group","itemName","attachDefaultAction","selectedGroup","submenuItems","subItem","itemButton","lineIcon","transform","pointerEvents","lastBtn","selBtn","backgroundSize","iconWidth","iconHeight","backgroundPosition","onClear","evt","detail","removeCanvas","annotationView","parentNode"],"mappings":"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","sourcesContent":["/* global OT OTSolution OTKAnalytics ScreenSharingAccPack define */\n(function () {\n  /** Include external dependencies */\n  var _;\n  var $;\n  var OTKAnalytics;\n\n  if (typeof module === 'object' && typeof module.exports === 'object') {\n    /* eslint-disable import/no-unresolved */\n    _ = require('underscore');\n    $ = require('jquery');\n    OTKAnalytics = require('opentok-solutions-logging');\n    /* eslint-enable import/no-unresolved */\n  } else {\n    _ = this._;\n    $ = this.$;\n    OTKAnalytics = this.OTKAnalytics;\n  }\n\n  /** Private variables */\n  var _this;\n  var _accPack;\n  var _session;\n  var _canvas;\n  var _subscribingToMobileScreen;\n  var _elements = {};\n\n  /** Analytics */\n  var _otkanalytics;\n\n  // vars for the analytics logs. Internal use\n  var _logEventData = {\n    clientVersion: 'js-vsol-2.0.59', // x.y.z filled by npm build script\n    componentId: 'annotationsAccPack',\n    name: 'guidAnnotationsKit',\n    actionInitialize: 'Init',\n    actionStart: 'Start',\n    actionEnd: 'End',\n    actionFreeHand: 'FreeHand',\n    actionPickerColor: 'PickerColor',\n    actionText: 'Text',\n    actionScreenCapture: 'ScreenCapture',\n    actionErase: 'Erase',\n    actionUseToolbar: 'UseToolbar',\n    variationAttempt: 'Attempt',\n    variationError: 'Failure',\n    variationSuccess: 'Success',\n  };\n\n  var _logAnalytics = function () {\n    // init the analytics logs\n    var _source = window.location.href;\n\n    var otkanalyticsData = {\n      clientVersion: _logEventData.clientVersion,\n      source: _source,\n      componentId: _logEventData.componentId,\n      name: _logEventData.name\n    };\n\n    _otkanalytics = new OTKAnalytics(otkanalyticsData);\n\n    var sessionInfo = {\n      sessionId: _session.id,\n      connectionId: _session.connection.connectionId,\n      partnerId: _session.apiKey\n    };\n\n    _otkanalytics.addSessionInfo(sessionInfo);\n  };\n\n  var _log = function (action, variation) {\n    var data = {\n      action: action,\n      variation: variation\n    };\n    _otkanalytics.logEvent(data);\n  };\n\n  /** End Analytics */\n\n  // Check for DOM element or string.  Return element.\n  var _getElem = function (el) {\n    return typeof el === 'string' ? document.querySelector(el) : el;\n  };\n\n  // Trigger event via common layer API\n  var _triggerEvent = function (event, data) {\n    if (_accPack) {\n      _accPack.triggerEvent(event, data);\n    }\n  };\n\n  var _registerEvents = function () {\n    if (_accPack) {\n      var events = [\n        'startAnnotation',\n        'linkAnnotation',\n        'resizeCanvas',\n        'annotationWindowClosed',\n        'endAnnotation'\n      ];\n\n      _accPack.registerEvents(events);\n    }\n  };\n\n  var _setupUI = function () {\n    var toolbar = [\n      '<div id=\"annotationToolbarContainer\" class=\"ots-annotation-toolbar-container\">',\n      '<div id=\"toolbar\"></div>',\n      '</div>'\n    ].join('\\n');\n    $('body').append(toolbar);\n    _log(_logEventData.actionUseToolbar, _logEventData.variationSuccess);\n  };\n\n  var _palette = [\n    '#1abc9c',\n    '#2ecc71',\n    '#3498db',\n    '#9b59b6',\n    '#8e44ad',\n    '#f1c40f',\n    '#e67e22',\n    '#e74c3c',\n    '#ded5d5'\n  ];\n\n  var _aspectRatio = (10 / 6);\n\n  /** Private methods */\n\n  var _refreshCanvas = _.throttle(function () {\n    _canvas.onResize();\n  }, 1000);\n\n  /** Resize the canvas to match the size of its container */\n  var _resizeCanvas = _.throttle(function () {\n    var width;\n    var height;\n    var cobrowsing = !!_elements.cobrowsingImage;\n    if (cobrowsing) {\n      // Cobrowsing images are currently fixed size, so resize isn't needed\n      return;\n    }\n\n    if (_elements.cobrowsingImage === null) {\n      var el = _elements.absoluteParent || _elements.canvasContainer;\n      width = el.clientWidth;\n      height = el.clientHeight;\n    }\n\n    try {\n      var videoDimensions = _canvas.videoFeed.stream.videoDimensions;\n    } catch (e) {\n      console.log('OT Annotation: Annotation video stream no longer exists');\n      return;\n    }\n\n    // Override dimensions when subscribing to a mobile screen\n    if (_subscribingToMobileScreen) {\n      videoDimensions.width = width;\n      videoDimensions.height = height;\n    }\n    var origRatio = videoDimensions.width / videoDimensions.height;\n    var destRatio = width / height;\n    var calcDimensions = {\n      top: 0,\n      left: 0,\n      height: height,\n      width: width\n    };\n\n    if (!_elements.externalWindow) {\n      if (origRatio < destRatio) {\n        // height is the limiting prop, we'll get vertical bars\n        calcDimensions.width = calcDimensions.height * origRatio;\n        calcDimensions.left = (width - calcDimensions.width) / 2;\n      } else {\n        calcDimensions.height = calcDimensions.width / origRatio;\n        calcDimensions.top = (height - calcDimensions.height) / 2;\n      }\n    }\n\n    $(_elements.canvasContainer).find('canvas').css(calcDimensions);\n\n    $(_elements.canvasContainer).find('canvas').attr(calcDimensions);\n\n    _refreshCanvas();\n    _triggerEvent('resizeCanvas');\n  }, 500, {trailing: false});\n\n  var _changeColorByIndex = function (colorIndex) {\n    _canvas.changeColorByIndex(colorIndex);\n  };\n\n  var _takeScreenShot = function () {\n    _canvas.captureScreenshot(true);\n  };\n\n  var _listenForResize = function () {\n    $(_elements.resizeSubject).on('resize', _resizeCanvas);\n  };\n\n  var _createToolbar = function (session, options, externalWindow) {\n    _setupUI();\n\n    var toolbarId = _.property('toolbarId')(options) || 'toolbar';\n    var items = _.property('toolbarItems')(options) || [];\n    var shapes = _.property('toolbarShapes')(options) || [];\n    var colors = _.property('colors')(options) || _palette;\n    var imageAssets = _.property('imageAssets')(options) || null;\n    var backgroundColor = _.property('backgroundColor')(options) || null;\n\n    var container = function () {\n      var w = !!externalWindow ? externalWindow : window;\n      return w.document.getElementById(toolbarId);\n    };\n\n    /* eslint-disable no-native-reassign */\n    toolbar = new OTSolution.Annotations.Toolbar({\n      session: session,\n      container: container(),\n      colors: colors,\n      items: items.length ? items : ['*'],\n      shapes: shapes.length ? shapes : ['rectangle', 'oval', 'star', 'arrow', 'line'],\n      externalWindow: externalWindow || null,\n      imageAssets: imageAssets,\n      backgroundColor: backgroundColor,\n      OTKAnalytics: OTKAnalytics\n    });\n\n    toolbar.itemClicked(function (id) {\n      var actions = {\n        OT_pen: _logEventData.actionFreeHand,\n        OT_colors: _logEventData.actionPickerColor,\n        OT_text: _logEventData.actionText,\n        OT_clear: _logEventData.actionErase\n      };\n\n      var action = actions[id];\n\n      if (!!action) {\n        _log(action, _logEventData.variationSuccess);\n      }\n    });\n\n    /* eslint-enable no-native-reassign */\n  };\n\n  // Create external screen sharing window\n  var _createExternalWindow = function () {\n    var deferred = $.Deferred();\n\n    var width = screen.width * 0.80 | 0;\n    var height = width / (_aspectRatio);\n    var externalWindowHTML = '<!DOCTYPE html><html lang=\"en\"><head><meta http-equiv=\"Content-type\" content=\"text/html; charset=utf-8\"><title>OpenTok Screen Sharing Solution Annotation</title><link rel=\"stylesheet\" href=\"https://assets.tokbox.com/solutions/css/style.css\"><style type=\"text/css\" media=\"screen\"> body{margin:0;background-color:rgba(0,153,203,.7);box-sizing:border-box;height:100vh}canvas{top:0;z-index:1000}.hidden{display:none}.ots-hidden{display:none !important}.main-wrap{width:100%;height:100%;-ms-box-orient:horizontal;display:-webkit-box;display:-moz-box;display:-ms-flexbox;display:-moz-flex;display:-webkit-flex;display:flex;-webkit-justify-content:center;justify-content:center;-webkit-align-items:center;align-items:center}.inner-wrap{position:relative;border-radius:8px;overflow:hidden}.publisherContainer{display:block;background-color:#000;position:absolute}.publisher-wrap{height:100%;width:100%}.subscriberContainer{position:absolute;display:flex;top:20px;left:20px;width:200px;height:120px;background-color:#000;border:2px solid #fff;border-radius:6px}.subscriberContainer .OT_video-poster{width:100%;height:100%;opacity:.25;background-repeat:no-repeat;background-image:url(https://static.opentok.com/webrtc/v2.8.2/images/rtc/audioonly-silhouette.svg);background-size:50%;background-position:center}.OT_video-element{height:100%;width:100%}.OT_edge-bar-item{display:none}</style></head><body> <div class=\"main-wrap\"> <div id=\"annotationContainer\" class=\"inner-wrap\"></div></div><div id=\"toolbarContainer\" class=\"ots-annotation-toolbar-container\"> <div id=\"toolbar\" class=\"toolbar-wrap\"></div></div><div id=\"subscriberVideo\" class=\"subscriberContainer hidden\"></div><script type=\"text/javascript\" charset=\"utf-8\"> /** Must use double-quotes since everything must be converted to a string */ var opener; var canvas; if (!toolbar){alert(\"Something went wrong: You must pass an OpenTok annotation toolbar object into the window.\")}else{opener=window.opener; window.onbeforeunload=window.triggerCloseEvent;}var localScreenProperties={insertMode: \"append\", width: \"100%\", height: \"100%\", videoSource: \"window\", showControls: false, style:{buttonDisplayMode: \"off\"}, subscribeToVideo: \"true\", subscribeToAudio: \"false\", fitMode: \"contain\"}; var createContainerElements=function(){var parentDiv=document.getElementById(\"annotationContainer\"); var publisherContainer=document.createElement(\"div\"); publisherContainer.setAttribute(\"id\", \"screenshare_publisher\"); publisherContainer.classList.add(\"publisher-wrap\"); parentDiv.appendChild(publisherContainer); return{annotation: parentDiv, publisher: publisherContainer};}; var addSubscriberVideo=function(stream){var container=document.getElementById(\"subscriberVideo\"); var subscriber=session.subscribe(stream, container, localScreenProperties, function(error){if (error){console.log(\"Failed to add subscriber video\", error);}container.classList.remove(\"hidden\");});}; if (navigator.userAgent.indexOf(\"Firefox\") !==-1){var ghost=window.open(\"about:blank\"); ghost.focus(); ghost.close();}</script></body></html>';\n\n    /* eslint-disable max-len */\n    var windowFeatures = [\n      'toolbar=no',\n      'location=no',\n      'directories=no',\n      'status=no',\n      'menubar=no',\n      'scrollbars=no',\n      'resizable=no',\n      'copyhistory=no', ['width=', width].join(''), ['height=', height].join(''), ['left=', ((screen.width / 2) - (width / 2))].join(''), ['top=', ((screen.height / 2) - (height / 2))].join('')\n    ].join(',');\n    /* eslint-enable max-len */\n\n    var annotationWindow = window.open('about:blank', '', windowFeatures);\n    annotationWindow.document.write(externalWindowHTML);\n    window.onbeforeunload = function () {\n      annotationWindow.close();\n    };\n\n    // External window needs access to certain globals\n    annotationWindow.toolbar = toolbar;\n    annotationWindow.OT = OT;\n    annotationWindow.session = _session;\n    annotationWindow.$ = $;\n\n    annotationWindow.triggerCloseEvent = function () {\n      _triggerEvent('annotationWindowClosed');\n    };\n\n    annotationWindow.onbeforeunload = function () {\n      _triggerEvent('annotationWindowClosed');\n    };\n\n    // TODO Find something better.\n    var windowReady = function () {\n      if (!!annotationWindow.createContainerElements) {\n        $(annotationWindow.document).ready(function () {\n          deferred.resolve(annotationWindow);\n        });\n      } else {\n        setTimeout(windowReady, 100);\n      }\n    };\n\n    windowReady();\n\n    return deferred.promise();\n  };\n\n  // Remove the toolbar and cancel event listeners\n  var _removeToolbar = function () {\n    _canvas.onClearAnnotation();\n    $(_elements.resizeSubject).off('resize', _resizeCanvas);\n    toolbar.remove();\n    $('#annotationToolbarContainer').remove();\n  };\n\n  // Determine whether or not the subscriber stream is from a mobile device\n  var _requestPlatformData = function (pubSub, mobileInitiator) {\n    if (!!pubSub.stream) {\n\n      var isPublisher = Object.prototype.hasOwnProperty.call(pubSub, 'accessAllowed');\n\n      _session.signal({\n        type: 'otAnnotation_requestPlatform',\n        to: pubSub.stream.connection,\n      });\n\n      _session.on('signal:otAnnotation_mobileScreenShare', function (event) {\n        var platform = event.data ? JSON.parse(event.data).platform : null;\n        var isMobile = (platform == 'ios' || platform === 'android');\n        _subscribingToMobileScreen = isMobile;\n        _canvas.onMobileScreenShare(isMobile, isPublisher);\n      });\n    }\n\n    if (mobileInitiator) {\n      _subscribingToMobileScreen = true;\n      _canvas.onMobileScreenShare(true);\n    }\n  };\n\n  /**\n   * Creates an external window (if required) and links the annotation toolbar\n   * to the session\n   * @param {object} session\n   * @param {object} [options]\n   * @param {boolean} [options.screensharing] - Using an external window\n   * @param {string} [options.toolbarId] - If the container has an id other than 'toolbar'\n   * @param {array} [options.items] - Custom set of tools\n   * @param {array} [options.colors] - Custom color palette\n   * @returns {promise} < Resolve: undefined | {object} Reference to external annotation window >\n   */\n  var start = function (session, options) {\n    var deferred = $.Deferred();\n\n    if (_.property('screensharing')(options)) {\n      _createExternalWindow()\n        .then(function (externalWindow) {\n          _createToolbar(session, options, externalWindow);\n          toolbar.createPanel(externalWindow);\n          _triggerEvent('startAnnotation', externalWindow);\n          _log(_logEventData.actionStart, _logEventData.variationSuccess);\n          deferred.resolve(externalWindow);\n        });\n    } else {\n      _createToolbar(session, options);\n      _triggerEvent('startAnnotation');\n      _log(_logEventData.actionStart, _logEventData.variationSuccess);\n      deferred.resolve();\n    }\n\n    return deferred.promise();\n  };\n\n  /**\n   * @param {object} pubSub - Either the publisher(sharing) or subscriber(viewing)\n   * @ param {object} container - The parent container for the canvas element\n   * @ param {object} options\n   * @param {object} options.canvasContainer - The id of the parent for the annotation canvas\n   * @param {object | string} [options.externalWindow] - Reference to the annotation window (or query selector) if publishing\n   * @param {array | string} [options.absoluteParent] - Reference to element (or query selector) for resize if other than container\n   * * @param {Boolean} [options.mobileInitiator] - Is cobrowsing being initiated by a mobile device\n   */\n  var linkCanvas = function (pubSub, container, options) {\n    /**\n     * jQuery only allows listening for a resize event on the window or a\n     * jQuery resizable element, like #wmsFeedWrap.  windowRefernce is a\n     * reference to the popup window created for annotation.  If this doesn't\n     * exist, we are watching the canvas belonging to the party viewing the\n     * shared screen\n     */\n    _elements.resizeSubject = _getElem(_.property('externalWindow')(options) || window);\n    _elements.externalWindow = _getElem(_.property('externalWindow')(options) || null);\n    _elements.absoluteParent = _getElem(_.property('absoluteParent')(options) || null);\n    _elements.cobrowsingImage = _getElem(_.property('cobrowsingImage')(options) || null);\n    _elements.canvasContainer = _getElem(container);\n\n    // The canvas object\n    _canvas = new OTSolution.Annotations({\n      feed: pubSub,\n      container: _elements.canvasContainer,\n      externalWindow: _elements.externalWindow\n    });\n\n    toolbar.addCanvas(_canvas, _elements.externalWindow);\n\n    var onScreenCapture = _this.options.onScreenCapture ? _this.options.onScreenCapture :\n      function (dataUrl) {\n        var win = window.open(dataUrl, '_blank');\n        win.focus();\n      };\n\n    _canvas.onScreenCapture(onScreenCapture);\n    _requestPlatformData(pubSub, options && options.mobileInitiator);\n\n    var context = _elements.externalWindow ? _elements.externalWindow : window;\n    // The canvas DOM element\n    _elements.canvas = $(_.first(context.document.getElementsByTagName('canvas')));\n\n    _listenForResize();\n    _resizeCanvas();\n    _triggerEvent('linkAnnotation');\n  };\n\n  /**\n   * Manually update the size of the canvas to match it's container, or the\n   * absolute parent, if defined.\n   */\n  var resizeCanvas = function () {\n    _resizeCanvas();\n  };\n\n  /**\n   * Change the annotation color of the toolbar passing the colorIndex\n   * @param {Integer} colorIndex - The color index number\n   */\n  var changeColorByIndex = function (colorIndex) {\n    _changeColorByIndex(colorIndex);\n  };\n\n  var takeScreenShot = function () {\n    _takeScreenShot();\n  };\n\n  /**\n   * Adds a subscriber's video the external annotation window\n   * @param {Object} stream - The subscriber stream object\n   */\n  var addSubscriberToExternalWindow = function (stream) {\n    if (!_elements.externalWindow) {\n      console.log('OT Annotation: External window does not exist. Cannot add subscriber video.');\n    } else {\n      _elements.externalWindow.addSubscriberVideo(stream);\n    }\n  };\n\n  /**\n   * Stop annotation and clean up components\n   * @param {Boolean} publisher Are we the publisher?\n   */\n  var end = function () {\n    _removeToolbar();\n    _elements.canvas = null;\n\n    if (!!_elements.externalWindow) {\n      _elements.externalWindow.close();\n      _elements.externalWindow = null;\n      _elements.resizeSubject = null;\n    }\n    _triggerEvent('endAnnotation');\n\n    _log(_logEventData.actionEnd, _logEventData.variationSuccess);\n  };\n\n  var hideToolbar = function () {\n    $(toolbar.parent).hide();\n  };\n\n  var showToolbar = function () {\n    $(toolbar.parent).show();\n  };\n\n  /**\n   * @constructor\n   * Represents an annotation component, used for annotation over video or a shared screen\n   * @param {object} options\n   * @param {object} options.session - An OpenTok session\n   * @param {object} options.canvasContainer - The id of the parent for the annotation canvas\n   * @param {object} options.watchForResize - The DOM element to watch for resize\n   * @param {object} options.onScreenCapture- A callback function to be invoked on screen capture\n   */\n  var AnnotationAccPack = function (options) {\n    _this = this;\n    _this.options = _.omit(options, 'accPack', 'session');\n    _accPack = _.property('accPack')(options);\n    _session = _.property('session')(options);\n\n    if (!_session) {\n      throw new Error('OpenTok Annotation Accelerator Pack requires an OpenTok session');\n    }\n    _registerEvents();\n    // init analytics logs\n    _logAnalytics();\n    _log(_logEventData.actionInitialize, _logEventData.variationSuccess);\n  };\n\n  AnnotationAccPack.prototype = {\n    constructor: AnnotationAccPack,\n    start: start,\n    linkCanvas: linkCanvas,\n    resizeCanvas: resizeCanvas,\n    addSubscriberToExternalWindow: addSubscriberToExternalWindow,\n    end: end,\n    hideToolbar: hideToolbar,\n    showToolbar: showToolbar,\n    changeColorByIndex: changeColorByIndex,\n    takeScreenShot: takeScreenShot\n  };\n\n  if (typeof exports === 'object') {\n    module.exports = AnnotationAccPack;\n  } else if (typeof define === 'function' && define.amd) {\n    define(function () {\n      return AnnotationAccPack;\n    });\n  } else {\n    this.AnnotationAccPack = AnnotationAccPack;\n  }\n}.call(this));\n\n/*!\n *  Annotation Plugin for OpenTok\n *\n *  @Author: Trevor Boyer\n *  @Copyright (c) 2015 TokBox, Inc\n **/\n\n/* eslint-disable */\n\n/** Analytics */\n(function () {\n\n  var _OTKAnalytics;\n  var _otkanalytics;\n  var _session;\n\n\n  // vars for the analytics logs. Internal use\n  var _logEventData = {\n    clientVersion: 'js-vsol-2.0.59', // x.y.z filled by npm build script\n    componentId: 'annotationsAccPack',\n    name: 'guidAnnotationsKit',\n    actionStartDrawing: 'StartDrawing',\n    actionEndDrawing: 'EndDrawing',\n    variationSuccess: 'Success',\n  };\n\n  var _logAnalytics = function () {\n    // init the analytics logs\n    var _source = window.location.href;\n\n    var otkanalyticsData = {\n      clientVersion: _logEventData.clientVersion,\n      source: _source,\n      componentId: _logEventData.componentId,\n      name: _logEventData.name\n    };\n\n    _otkanalytics = new _OTKAnalytics(otkanalyticsData);\n\n    var sessionInfo = {\n      sessionId: _session.id,\n      connectionId: _session.connection.connectionId,\n      partnerId: _session.apiKey\n    };\n\n    _otkanalytics.addSessionInfo(sessionInfo);\n  };\n\n  var _log = function (action, variation) {\n    var data = {\n      action: action,\n      variation: variation\n    };\n    _otkanalytics.logEvent(data);\n  };\n\n  /** End Analytics */\n\n\n  //--------------------------------------\n  //  OPENTOK ANNOTATION CANVAS/VIEW\n  //--------------------------------------\n  var DEFAULT_ASSET_URL = 'https://assets.tokbox.com/solutions/images/';\n\n  OTSolution = this.OTSolution || {};\n\n  OTSolution.Annotations = function (options) {\n\n    options = options || {};\n    this.widgetVersion = 'js-1.0.0-beta';\n    this.parent = options.container;\n    this.videoFeed = options.feed;\n    this.imageAssets = options.imageAssets || DEFAULT_ASSET_URL;\n\n    _OTKAnalytics = _OTKAnalytics || options.OTKAnalytics;\n    if (!_otkanalytics) {\n      _logAnalytics();\n    }\n\n    if (typeof module === 'object' && typeof module.exports === 'object') {\n      $ = require('jquery');\n    }\n\n    var context = options.externalWindow ? options.externalWindow.document : window.document;\n\n    var self = this;\n\n    if (this.parent) {\n      var canvas = document.createElement('canvas');\n      canvas.setAttribute('id', 'opentok_canvas'); // session.connection.id?\n      canvas.style.position = 'absolute';\n      this.parent.appendChild(canvas);\n      canvas.setAttribute('width', this.parent.clientWidth + 'px');\n      canvas.style.width = window.getComputedStyle(this.parent).width;\n      canvas.setAttribute('height', this.parent.clientHeight + 'px');\n      canvas.style.height = window.getComputedStyle(this.parent).height;\n    }\n\n    function VideoRelativeCoordinateSet(update) {\n\n      var returnedObj = {};\n\n      var scale = {\n        get X() {\n          if (publishingScreenToMobileDevice || (cobrowsing && subscribingToMobileScreen)) {\n            return update.canvasWidth / canvas.width;\n          }\n          var width = cobrowsing ? canvas.width : self.videoFeed.stream.videoDimensions.width;\n          return width / canvas.width;\n        },\n        get Y() {\n          if (publishingScreenToMobileDevice || (cobrowsing && subscribingToMobileScreen)) {\n            return update.canvasHeight / canvas.height;\n          }\n          var height = cobrowsing ? canvas.height : self.videoFeed.stream.videoDimensions.height;\n          return height / canvas.height;\n        }\n      };\n\n      Object.keys(update).forEach(function (attr) {\n        returnedObj[attr] = update[attr];\n      });\n      ['X', 'Y'].forEach(function (coord) {\n        ['to', 'from', 'last', 'm', 'start', 'point'].forEach(function (verb) {\n          var attr = verb + coord;\n          returnedObj['_' + attr] = returnedObj[attr];\n          Object.defineProperty(returnedObj, attr, {\n            get: function () {\n              return returnedObj['_' + attr] / scale[coord];\n            },\n            set: function (newVal) {\n              returnedObj['_' + attr] = newVal; // * scale[coord];\n            }\n          });\n        });\n      });\n      return returnedObj;\n    }\n\n\n    var self = this;\n    var ctx;\n    var cbs = [];\n    var isPublisher;\n    var mirrored;\n    var scaledToFill;\n    var batchUpdates = [];\n    var drawHistory = [];\n    var drawHistoryReceivedFrom = [];\n    var updateHistory = [];\n    var eventHistory = [];\n    var isStartPoint = false;\n    var isVideo = self.videoFeed && self.videoFeed.element ? true : false;\n    var cobrowsing = !self.videoFeed.stream;\n    var subscribingToMobileScreen = false;\n    var publishingScreenToMobileDevice = false;\n    var client = new VideoRelativeCoordinateSet({\n      dragging: false\n    });\n\n\n    // INFO Mirrored feeds contain the OT_mirrored class\n    if (isVideo) {\n      isPublisher = (' ' + self.videoFeed.element.className + ' ').indexOf(' ' + 'OT_publisher' + ' ') > -1;\n      mirrored = isPublisher ? (' ' + self.videoFeed.element.className + ' ').indexOf(' ' + 'OT_mirrored' + ' ') > -1 : false;\n      scaledToFill = (' ' + self.videoFeed.element.className + ' ').indexOf(' ' + 'OT_fit-mode-cover' + ' ') > -1;\n    } else {\n      mirrored = false;\n      scaledToFill = false;\n    }\n\n    this.canvas = function () {\n      return canvas;\n    };\n\n    /**\n     * Links an OpenTok session to the annotation canvas. Typically, this is automatically linked\n     * when using {@link Toolbar#addCanvas}.\n     * @param session The OpenTok session.\n     */\n    this.link = function (session) {\n      this.session = session;\n    };\n\n    /**\n     * Changes the active annotation color for the canvas.\n     * @param color The hex string representation of the color (#rrggbb).\n     */\n    this.changeColor = function (color) {\n      self.userColor = color;\n      if (!self.lineWidth) {\n        self.lineWidth = 2; // TODO Default to first option in list of line widths\n      }\n    };\n\n    /**\n     * Changes the active annotation color for the canvas.\n     * @param colorIndex - the index regarding the colors array\n     */\n    this.changeColorByIndex = function (colorIndex) {\n\n      //set the user color\n      self.userColor = this.colors[colorIndex];\n\n      //activate the change on the toolbar\n      var colorChoices = context.querySelectorAll('.color-choice');\n      colorChoices[colorIndex].classList.add('active');\n      var button = context.getElementById('OT_colors');\n      button.setAttribute('class', 'OT_color annotation-btn colors');\n      button.style.borderRadius = '50%';\n      button.style.backgroundColor = this.colors[colorIndex];\n    };\n\n    /**\n     * Changes the line/stroke width of the active annotation for the canvas.\n     * @param size The size in pixels.\n     */\n    this.changeLineWidth = function (size) {\n      this.lineWidth = size;\n    };\n\n    /**\n     * Sets the selected menu item from the toolbar. This is typically handled\n     * automatically by the toolbar, but can be used to programmatically select an item.\n     * @param item The menu item to set as selected.\n     */\n    this.selectItem = function (item) {\n      if (self.overlay) {\n        self.parent.removeChild(self.overlay);\n        self.overlay = null;\n      }\n\n      /**\n       * Update classes for toolbar items\n       */\n      var updateSelected = function () {\n\n        // Remove the 'selected' class from the currently selected item (or parent)\n        var current = context.getElementById(self.selectedItem.id);\n        var shapesBtn = context.getElementById('OT_shapes');\n        var currentIsShape = shapesBtn.classList.contains('selected');\n        currentIsShape ? shapesBtn.classList.remove('selected') : current.classList.remove('selected');\n\n        // If the newly selected item is a shape, update the shapes subpanel button\n        var newlySelected = context.getElementById(item.id);\n        if (newlySelected.parentElement.classList.contains('shapes')) {\n          shapesBtn.classList.add('selected');\n        } else {\n          newlySelected.classList.add('selected');\n        }\n      }\n\n      if (item && item.id === 'OT_capture') {\n        self.captureScreenshot();\n      } else if (item && item.id.indexOf('OT_line_width') !== -1) {\n        if (item.size) {\n          self.changeLineWidth(item.size);\n        }\n        // 'undo' and 'clear' are actions, not items that can be selected\n      } else if (item.id !== 'OT_undo' && item.id !== 'OT_clear') {\n        updateSelected();\n        self.selectedItem = item;\n      }\n    };\n\n    /**\n     * Sets the color palette for the color picker\n     * @param colors The array of hex color strings (#rrggbb).\n     */\n    this.colors = function (colors) {\n      this.colors = colors;\n      this.changeColor(colors[0]);\n    };\n\n    /**\n     * Clears the canvas for the active user. Only annotations added by the active OpenTok user will\n     * be removed, leaving the history of all other annotations.\n     */\n    this.clear = function () {\n      clearCanvas(false, self.session.connection.connectionId);\n      if (self.session) {\n        self.session.signal({\n          type: 'otAnnotation_clear'\n        });\n      }\n    };\n\n    this.undo = function () {\n      undoLast(false, self.session.connection.connectionId);\n    }\n\n    // TODO Allow the user to choose the image type? (jpg, png) Also allow size?\n    /**\n     * Captures a screenshot of the annotations displayed on top of the active video feed.\n     */\n    this.captureScreenshot = function (isAnnotationEnd) {\n\n      var canvasCopy = document.createElement('canvas');\n      canvasCopy.width = canvas.width;\n      canvasCopy.height = canvas.height;\n\n      var width = isVideo ? self.videoFeed.videoWidth() : canvas.width;\n      var height = isVideo ? self.videoFeed.videoHeight() : canvas.height;\n\n      var scale = 1;\n\n      var offsetX = 0;\n      var offsetY = 0;\n\n      if (scaledToFill) {\n        if (width < height) {\n          scale = canvas.width / width;\n          width = canvas.width;\n          height = height * scale;\n        } else {\n          scale = canvas.height / height;\n          height = canvas.height;\n          width = width * scale;\n        }\n        // If stretched to fill, we need an offset to center the image\n        offsetX = (width - canvas.width) / 2;\n        offsetY = (height - canvas.height) / 2;\n\n      } else {\n        if (width > height) {\n          scale = canvas.width / width;\n          width = canvas.width;\n          height = height * scale;\n          offsetX = 0;\n          offsetY = (canvas.height - height) / 2;\n        } else {\n          scale = canvas.height / height;\n          height = canvas.height;\n          width = width * scale;\n          offsetX = (canvas.width - width) / 2;\n          offsetY = 0;\n        }\n\n      }\n\n      // Combine the video and annotation images\n      var image = new Image();\n\n      image.onload = function () {\n        var ctxCopy = canvasCopy.getContext('2d');\n        if (mirrored) {\n          ctxCopy.translate(width, 0);\n          ctxCopy.scale(-1, 1);\n        }\n        ctxCopy.drawImage(image, offsetX, offsetY, width, height);\n\n        // We want to make sure we draw the annotations the same way, so we need to flip back\n        if (mirrored) {\n          ctxCopy.translate(width, 0);\n          ctxCopy.scale(-1, 1);\n        }\n        ctxCopy.drawImage(canvas, 0, 0);\n\n        cbs.forEach(function (cb) {\n          var data = { src: canvasCopy.toDataURL(), isAnnotationEnd: isAnnotationEnd };\n          cb.call(self, data);\n        });\n\n        // Clear and destroy the canvas copy\n        canvasCopy = null;\n      };\n\n      if (isVideo) {\n        imgData = 'data:image/png;base64,' + self.videoFeed.getImgData();\n        image.src = imgData;\n      } else {\n        var currentWindow = options.externalWindow ? options.externalWindow : window;\n        image.src = currentWindow.getComputedStyle(self.parent)['background-image'].replace(/url\\(\"|\"\\)/g, '');\n      }\n\n    };\n\n    this.onScreenCapture = function (cb) {\n      cbs.push(cb);\n    };\n\n    /**\n     * Set flags for sharing with mobile devices\n     * @param {Boolean} mobile - Is the other party using a mobile device\n     * @param {Boolean} publishing - Are we publishing our screen?\n     */\n    this.onMobileScreenShare = function (mobile, publishing) {\n      if (publishing) {\n        publishingScreenToMobileDevice = mobile;\n      } else {\n        subscribingToMobileScreen = mobile;\n      }\n    };\n\n    this.onResize = function () {\n      drawUpdates(updateHistory, true);\n      draw(null, true);\n    };\n\n    this.onClearAnnotation = function () {\n      dismissTextAnnotation();\n    };\n    /** Canvas Handling **/\n\n    function addEventListeners(el, s, fn) {\n      var evts = s.split(' ');\n      for (var i = 0, iLen = evts.length; i < iLen; i++) {\n        el.addEventListener(evts[i], fn, true);\n      }\n    }\n\n    function updateCanvas(event, resizeEvent) {\n\n      // Ensure that our canvas has been properly sized\n      if (canvas.width === 0) {\n        canvas.width = self.parent.getBoundingClientRect().width;\n      }\n\n      if (canvas.height === 0) {\n        canvas.height = self.parent.getBoundingClientRect().height;\n      }\n\n      var offsetLeft = !!resizeEvent ? event.canvas.offsetLeft : canvas.offsetLeft;\n      var offsetTop = !!resizeEvent ? event.canvas.offsetTop : canvas.offsetTop;\n\n      if (cobrowsing) {\n        var baseWidth = !!resizeEvent ? event.canvas.width : self.parent.clientWidth;\n        var baseHeight = !!resizeEvent ? event.canvas.height : self.parent.clientHeight;\n        var scaleX = canvas.width / baseWidth;\n        var scaleY = canvas.height / baseHeight;\n        var offsetX = event.offsetX || event.pageX - offsetLeft ||\n          (event.changedTouches && event.changedTouches[0].pageX - offsetLeft);\n        var offsetY = event.offsetY || event.pageY - offsetTop ||\n          (event.changedTouches && event.changedTouches[0].pageY - offsetTop);\n        var x = offsetX * scaleX;\n        var y = offsetY * scaleY;\n      } else {\n        var videoDimensions = self.videoFeed.stream.videoDimensions;\n        var scaleX = videoDimensions.width / canvas.width;\n        var scaleY = videoDimensions.height / canvas.height;\n        if (subscribingToMobileScreen) {\n          scaleX = 1;\n          scaleY = 1;\n        }\n        var offsetX = event.offsetX || event.pageX - offsetLeft ||\n          (event.changedTouches && event.changedTouches[0].pageX - offsetLeft);\n        var offsetY = event.offsetY || event.pageY - offsetTop ||\n          (event.changedTouches && event.changedTouches[0].pageY - offsetTop);\n        var x = offsetX * scaleX;\n        var y = offsetY * scaleY;\n      }\n\n      var update;\n      var selectedItem = resizeEvent ? event.selectedItem : self.selectedItem;\n\n      if (selectedItem) {\n        if (selectedItem.id === 'OT_pen') {\n\n          switch (event.type) {\n            case 'mousedown':\n            case 'touchstart':\n              client.dragging = true;\n              client.lastX = x;\n              client.lastY = y;\n              self.isStartPoint = true;\n              !resizeEvent && _log(_logEventData.actionStartDrawing, _logEventData.variationSuccess);\n              break;\n            case 'mousemove':\n            case 'touchmove':\n              if (client.dragging) {\n                update = {\n                  id: isVideo ? self.videoFeed.stream.connection.connectionId : self.session.connection.connectionId,\n                  fromId: self.session.connection.connectionId,\n                  fromX: client._lastX,\n                  fromY: client._lastY,\n                  toX: x,\n                  toY: y,\n                  color: resizeEvent ? event.userColor : self.userColor,\n                  lineWidth: self.lineWidth,\n                  videoWidth: isVideo ? self.videoFeed.videoElement().clientWidth : canvas.width,\n                  videoHeight: isVideo ? self.videoFeed.videoElement().clientHeight : canvas.height,\n                  canvasWidth: canvas.width,\n                  canvasHeight: canvas.height,\n                  mirrored: mirrored,\n                  startPoint: self.isStartPoint, // Each segment is treated as a new set of points\n                  endPoint: false,\n                  selectedItem: selectedItem,\n                  platform: 'web',\n                  guid: event.guid\n                };\n                draw(new VideoRelativeCoordinateSet(update), true);\n                client.lastX = x;\n                client.lastY = y;\n                !resizeEvent && sendUpdate(update);\n                self.isStartPoint = false;\n              }\n              break;\n            case 'mouseup':\n            case 'touchend':\n              client.dragging = false;\n              update = {\n                id: isVideo ? self.videoFeed.stream.connection.connectionId : self.session.connection.connectionId,\n                fromId: self.session.connection.connectionId,\n                fromX: client._lastX,\n                fromY: client._lastY,\n                toX: x,\n                toY: y,\n                color: resizeEvent ? event.userColor : self.userColor,\n                lineWidth: self.lineWidth,\n                videoWidth: isVideo ? self.videoFeed.videoElement().clientWidth : canvas.width,\n                videoHeight: isVideo ? self.videoFeed.videoElement().clientHeight : canvas.height,\n                canvasWidth: canvas.width,\n                canvasHeight: canvas.height,\n                mirrored: mirrored,\n                startPoint: self.isStartPoint, // Each segment is treated as a new set of points\n                endPoint: true,\n                selectedItem: selectedItem,\n                platform: 'web',\n                guid: event.guid\n              };\n              draw(new VideoRelativeCoordinateSet(update), true);\n              client.lastX = x;\n              client.lastY = y;\n              !resizeEvent && sendUpdate(update);\n              self.isStartPoint = false;\n              !resizeEvent && _log(_logEventData.actionEndDrawing, _logEventData.variationSuccess);\n              break;\n            case 'mouseout':\n              client.dragging = false;\n          }\n        } else if (selectedItem.id === 'OT_text') {\n\n          update = {\n            id: isVideo ? self.videoFeed.stream.connection.connectionId : self.session.connection.connectionId,\n            fromId: self.session.connection.connectionId,\n            fromX: x,\n            fromY: y + event.inputHeight, // Account for the height of the text input\n            color: event.userColor,\n            font: event.font,\n            text: event.text,\n            videoWidth: isVideo ? self.videoFeed.videoElement().clientWidth : canvas.width,\n            videoHeight: isVideo ? self.videoFeed.videoElement().clientHeight : canvas.height,\n            canvasWidth: canvas.width,\n            canvasHeight: canvas.height,\n            mirrored: mirrored,\n            selectedItem: selectedItem,\n            platform: 'web',\n            guid: event.guid\n          };\n\n          draw(new VideoRelativeCoordinateSet(update));\n          !resizeEvent && sendUpdate(update);\n        } else {\n          // We have a shape or custom object\n\n          // We are currently using a constant default width for shapes\n          var shapeLineWidth = 2;\n\n          if (selectedItem && selectedItem.points) {\n            client.mX = x;\n            client.mY = y;\n\n            switch (event.type) {\n              case 'mousedown':\n              case 'touchstart':\n                client.isDrawing = true;\n                client.dragging = true;\n                client.startX = x;\n                client.startY = y;\n                break;\n              case 'mousemove':\n              case 'touchmove':\n                if (client.dragging) {\n                  update = {\n                    color: resizeEvent ? event.userColor : self.userColor,\n                    lineWidth: resizeEvent ? event.lineWidth : shapeLineWidth,\n                    selectedItem: selectedItem\n                      // INFO The points for scaling will get added when drawing is complete\n                  };\n\n                  draw(new VideoRelativeCoordinateSet(update), true);\n                }\n                break;\n              case 'mouseup':\n              case 'touchend':\n                client.isDrawing = false;\n\n                var points = selectedItem.points;\n\n                if (points.length === 2) {\n                  update = {\n                    id: isVideo ? self.videoFeed.stream.connection.connectionId : self.session.connection.connectionId,\n                    fromId: self.session.connection.connectionId,\n                    fromX: client._startX,\n                    fromY: client._startY,\n                    toX: client._mX,\n                    toY: client._mY,\n                    color: resizeEvent ? event.userColor : self.userColor,\n                    lineWidth: resizeEvent ? event.lineWidth : shapeLineWidth,\n                    videoWidth: isVideo ? self.videoFeed.videoElement().clientWidth : canvas.width,\n                    videoHeight: isVideo ? self.videoFeed.videoElement().clientHeight : canvas.height,\n                    canvasWidth: canvas.width,\n                    canvasHeight: canvas.height,\n                    mirrored: mirrored,\n                    smoothed: false,\n                    startPoint: true,\n                    selectedItem: selectedItem,\n                    platform: 'web',\n                    guid: event.guid\n                  };\n\n                  drawHistory.push(new VideoRelativeCoordinateSet(update));\n\n                  !resizeEvent && sendUpdate(update);\n                } else {\n                  var scale = scaleForPoints(points);\n\n                  for (var i = 0; i < points.length; i++) {\n                    var firstPoint = false;\n                    var endPoint = false;\n\n                    // Scale the points according to the difference between the start and end points\n                    var pointX = client._startX + (scale.x * points[i][0]);\n                    var pointY = client._startY + (scale.y * points[i][1]);\n\n                    if (i === 0) {\n                      client.lastX = pointX;\n                      client.lastY = pointY;\n                      firstPoint = true;\n                    } else if (i === points.length - 1) {\n                      endPoint = true;\n                    }\n\n                    update = {\n                      id: isVideo ? self.videoFeed.stream.connection.connectionId : self.session.connection.connectionId,\n                      fromId: self.session.connection.connectionId,\n                      fromX: client._lastX,\n                      fromY: client._lastY,\n                      toX: pointX,\n                      toY: pointY,\n                      color: resizeEvent ? event.userColor : self.userColor,\n                      lineWidth: resizeEvent ? event.lineWidth : shapeLineWidth,\n                      videoWidth: isVideo ? self.videoFeed.videoElement().clientWidth : canvas.width,\n                      videoHeight: isVideo ? self.videoFeed.videoElement().clientHeight : canvas.height,\n                      canvasWidth: canvas.width,\n                      canvasHeight: canvas.height,\n                      mirrored: mirrored,\n                      smoothed: selectedItem.enableSmoothing,\n                      startPoint: firstPoint,\n                      endPoint: endPoint,\n                      selectedItem: selectedItem,\n                      platform: 'web',\n                      guid: event.guid\n\n                    };\n\n                    drawHistory.push(new VideoRelativeCoordinateSet(update));\n\n                    !resizeEvent && sendUpdate(update);\n\n                    client.lastX = pointX; // SCALE BACK!\n                    client.lastY = pointY;\n                  }\n\n                  draw(null);\n                }\n\n                client.dragging = false;\n            }\n          }\n        }\n      }\n    }\n\n    function guid() {\n      return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n        var r = Math.random() * 16 | 0,\n          v = c == 'x' ? r : (r & 0x3 | 0x8);\n        return v.toString(16);\n      });\n    }\n\n    addEventListeners(canvas, 'mousedown mousemove mouseup mouseout touchstart touchmove touchend', function (event) {\n\n      // Handle text annotation separately and ignore mouse movements if we're not dragging.\n      var istextEvent = self.selectedItem && self.selectedItem.id === 'OT_text';\n      var notDragging = event.type === 'mousemove' && !client.dragging;\n\n      if (istextEvent || notDragging) {\n        return;\n      }\n\n      event.preventDefault();\n\n      // Save raw events to reprocess on canvas resize\n      event.selectedItem = self.selectedItem;\n\n      if (event.selectedItem) {\n        event.canvas = {\n          width: canvas.width,\n          height: canvas.height,\n          offsetLeft: canvas.offsetLeft,\n          offsetTop: canvas.offsetTop\n        };\n\n        event.userColor = self.userColor;\n        event.lineWidth = self.lineWidth;\n        event.guid = guid();\n        eventHistory.push(event);\n      }\n\n      updateCanvas(event);\n\n    });\n\n    /**\n     * We need intermediate event handling for text annotation since the user is adding\n     * text to an input element before it is actually added to the canvas.  The original\n     * click event is assigned to textEvent, which is then updated before being passed\n     * to updateCanvas.\n     */\n\n    /** Listen for a click on the canvas.  When it occurs, append a text input\n     * that the user can edit and listen for keydown on the enter key. When enter is\n     * pressed, processTextEvent is called, the input element is removed, and the text\n     * is appended to the canvas.\n     */\n    var textEvent;\n    var textInputId = 'textAnnotation';\n    var commitPopId = 'commitTextPop';\n    var commitPopClickId = 'confirm-btn';\n    var dismissPopId = 'dismiss-btn';\n    var ignoreClicks = false;\n    var handleClick = function (event) {\n      event.preventDefault();\n\n      if (!self.selectedItem || self.selectedItem.id !== 'OT_text' || ignoreClicks) {\n        return;\n      }\n\n      ignoreClicks = true;\n\n      // Save raw events to reprocess on canvas resize\n      event.selectedItem = self.selectedItem;\n\n      createTextInput(event);\n\n    };\n\n\n    /**\n     * Get the value of the text input and use it to create an \"event\".\n     */\n    var processTextEvent = function () {\n\n      var textInput = context.getElementById(textInputId);\n      var inputheight = textInput.clientHeight;\n\n      if (!textInput.value) {\n        textEvent = null;\n        return;\n      }\n\n      textEvent.text = textInput.value;\n      textEvent.font = '16px Arial';\n      textEvent.userColor = self.userColor;\n\n      textEvent.canvas = {\n        width: canvas.width,\n        height: canvas.height,\n        offsetLeft: canvas.offsetLeft,\n        offsetTop: canvas.offsetTop\n      }\n      eventHistory.push(textEvent);\n      updateCanvas(textEvent);\n      dismissTextAnnotation();\n      ignoreClicks = false;\n    };\n\n\n    var createTextInput = function (event) {\n\n      var textInput = context.createElement('input');\n\n      textInput.setAttribute('type', 'text');\n      textInput.style.position = 'fixed';\n      textInput.style.top = event.clientY + 'px';\n      textInput.style.left = event.clientX + 'px';\n      textInput.style.background = 'rgba(255,255,255, .5)';\n      textInput.style.width = '100px';\n      textInput.style.maxWidth = '200px';\n      textInput.style.border = '1px dashed red';\n      textInput.style.fontSize = '16px';\n      textInput.style.color = self.userColor;\n      textInput.style.fontFamily = 'Arial';\n      textInput.style.zIndex = '1001';\n      textInput.setAttribute('data-canvas-origin', JSON.stringify({\n        x: event.offsetX,\n        y: event.offsetY\n      }));\n      textInput.setAttribute('data-top', event.clientY - 50)\n      textInput.id = textInputId;\n\n      context.body.appendChild(textInput);\n      textInput.focus();\n\n      textInput.addEventListener('keydown', function (event) {\n        //If its Enter\n        if (event.which === 13) {\n          creteCommitPop(textInput)\n        }\n      })\n\n      textInput.addEventListener('blur', function () {\n        creteCommitPop(textInput)\n      })\n\n      textEvent = event;\n      textEvent.inputHeight = textInput.clientHeight;\n      ignoreClicks = true;\n\n    };\n\n    var creteCommitPop = function (textInput) {\n      if (context.getElementById(commitPopId)) return;\n\n      var commitPop = context.createElement('div');\n\n      commitPop.style.position = 'fixed';\n      commitPop.style.top = textInput.dataset.top + 'px';\n      commitPop.style.left = textInput.style.left;\n      commitPop.style.width = '200px';\n      commitPop.style.fontSize = '16px';\n      commitPop.style.fontFamily = 'Arial';\n      commitPop.style.zIndex = '2000';\n      commitPop.style.border = '1px solid grey';\n      commitPop.style.height = '40px';\n      commitPop.className = 'ots-annotation-prompt';\n      commitPop.id = commitPopId;\n\n      var commitPopText = context.createElement('span');\n      var text = context.createTextNode('Commit type?');\n      commitPopText.appendChild(text);\n      commitPop.append(commitPopText)\n\n      var commitPopClick = context.createElement('div');\n      commitPopClick.id = commitPopClickId;\n      commitPopClick.className = commitPopClickId;\n\n      var dismissDiv = context.createElement('div');\n      dismissDiv.id = dismissPopId;\n      dismissDiv.className = dismissPopId;\n\n      commitPop.appendChild(commitPopClick);\n      commitPop.appendChild(dismissDiv);\n\n      context.body.appendChild(commitPop);\n\n      dismissDiv.addEventListener('click', dismissTextAnnotation);\n\n      commitPopClick.addEventListener('click', function () {\n        processTextEvent();\n      });\n    };\n\n    var dismissTextAnnotation = function () {\n      if (context.getElementById(textInputId)) context.getElementById(textInputId).remove();\n      if (context.getElementById(commitPopId)) context.getElementById(commitPopId).remove();\n      textEvent = null;\n      ignoreClicks = false;\n    }\n\n    addEventListeners(canvas, 'click', handleClick);\n\n    /**\n     * End Handle text markup\n     */\n\n    var draw = function (update, resizeEvent) {\n\n      if (!ctx) {\n        ctx = canvas.getContext('2d');\n        ctx.lineCap = 'round';\n        ctx.lineJoin = 'round';\n        ctx.fillStyle = 'solid';\n      }\n\n      // Clear the canvas\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n      // Repopulate the canvas with items from drawHistory\n      drawHistory.forEach(function (history) {\n\n        ctx.strokeStyle = history.color;\n        ctx.lineWidth = history.lineWidth;\n\n        // INFO iOS serializes bools as 0 or 1\n        history.smoothed = !!history.smoothed;\n        history.startPoint = !!history.startPoint;\n\n        var secondPoint = false;\n        var isText = history.hasOwnProperty('text');\n\n        if (isText) {\n          ctx.font = history.font;\n          ctx.fillStyle = history.color;\n          ctx.fillText(history.text, history.fromX, history.fromY);\n\n        } else {\n\n          if (history.smoothed) {\n            if (history.startPoint) {\n              self.isStartPoint = true;\n            } else {\n              // If the start point flag was already set, we received the next point in the sequence\n              if (self.isStartPoint) {\n                secondPoint = true;\n                self.isStartPoint = false;\n              }\n            }\n\n            if (history.startPoint) {\n              // Close the last path and create a new one\n              ctx.closePath();\n              ctx.beginPath();\n            } else if (secondPoint) {\n              ctx.moveTo((history.fromX + history.toX) / 2, (history.fromY + history.toY) / 2);\n            } else {\n              // console.log('Points: (' + (history.fromX + history.toX) / 2 + ', ' + (history.fromY + history.toY) / 2 + ')');\n              // console.log('Control Points: (' + history.fromX + ', ' + history.fromY + ')');\n              ctx.quadraticCurveTo(history.fromX, history.fromY, (history.fromX + history.toX) / 2, (history.fromY + history.toY) / 2);\n\n              ctx.stroke();\n            }\n          } else {\n            ctx.beginPath();\n            ctx.moveTo(history.fromX, history.fromY);\n            ctx.lineTo(history.toX, history.toY);\n            ctx.stroke();\n            ctx.closePath();\n          }\n        }\n\n      });\n\n      if (!!resizeEvent && !update) {\n        return;\n      }\n\n      var selectedItem = !!resizeEvent ? update.selectedItem : self.selectedItem;\n\n      if (selectedItem && (selectedItem.title === 'Pen' || selectedItem.title === 'Text')) {\n\n        if (update) {\n\n          if (selectedItem.title === 'Pen') {\n            ctx.strokeStyle = update.color;\n            ctx.lineWidth = update.lineWidth;\n            ctx.beginPath();\n            ctx.moveTo(update.fromX, update.fromY);\n            ctx.lineTo(update.toX, update.toY);\n            ctx.stroke();\n            ctx.closePath();\n          }\n\n          if (selectedItem.title === 'Text') {\n            ctx.font = update.font;\n            ctx.fillStyle = update.color;\n            ctx.fillText(update.text, update.fromX, update.fromY);\n          }\n\n          drawHistory.push(update);\n        }\n      } else {\n        if (client.isDrawing) {\n          if (update) {\n            ctx.strokeStyle = update.color;\n            ctx.lineWidth = update.lineWidth;\n          }\n          if (selectedItem && selectedItem.points) {\n            drawPoints(ctx, self.selectedItem.points);\n          }\n        }\n      }\n    };\n\n    var drawPoints = function (ctx, points) {\n      var scale = scaleForPoints(points);\n\n      ctx.beginPath();\n\n      if (points.length === 2) {\n        // We have a line\n        ctx.moveTo(client.startX, client.startY);\n        ctx.lineTo(client.mX, client.mY);\n      } else {\n        for (var i = 0; i < points.length; i++) {\n          // Scale the points according to the difference between the start and end points\n          // Use device independent points here!\n          client.pointX = client._startX + (scale.x * points[i][0]);\n          client.pointY = client._startY + (scale.y * points[i][1]);\n\n          if (self.selectedItem.enableSmoothing) {\n            if (i === 0) {\n              // Do nothing\n            } else if (i === 1) {\n              ctx.moveTo((client.pointX + client.lastX) / 2, (client.pointY + client.lastY) / 2);\n              client.lastX = (client._pointX + client._lastX) / 2;\n              client.lastX = (client._pointY + client._lastY) / 2;\n            } else {\n              ctx.quadraticCurveTo(client.lastX, client.lastY, (client.pointX + client.lastX) / 2,\n                (client.pointY + client.lastY) / 2);\n              client.lastX = (client._pointX + client._lastX) / 2;\n              client.lastY = (client._pointY + client._lastY) / 2;\n            }\n          } else {\n            if (i === 0) {\n              ctx.moveTo(client.pointX, client.pointY);\n            } else {\n              ctx.lineTo(client.pointX, client.pointY);\n            }\n          }\n\n          client.lastX = client._pointX; // SCALE BACK!\n          client.lastY = client._pointY;\n        }\n      }\n\n      ctx.stroke();\n      ctx.closePath();\n    };\n\n    var scaleForPoints = function (points) {\n      // mX and mY refer to the end point of the enclosing rectangle (touch up)\n      var minX = Number.MAX_VALUE;\n      var minY = Number.MAX_VALUE;\n      var maxX = 0;\n      var maxY = 0;\n      for (var i = 0; i < points.length; i++) {\n        if (points[i][0] < minX) {\n          minX = points[i][0];\n        } else if (points[i][0] > maxX) {\n          maxX = points[i][0];\n        }\n\n        if (points[i][1] < minY) {\n          minY = points[i][1];\n        } else if (points[i][1] > maxY) {\n          maxY = points[i][1];\n        }\n      }\n      var dx = Math.abs(maxX - minX);\n      var dy = Math.abs(maxY - minY);\n\n      var scaleX = (client._mX - client._startX) / dx;\n      var scaleY = (client._mY - client._startY) / dy;\n\n      return {\n        x: scaleX,\n        y: scaleY\n      };\n    };\n\n    var drawIncoming = function (update, resizeEvent, index) {\n\n      var iCanvas = {\n        width: update.canvasWidth,\n        height: update.canvasHeight\n      };\n\n      var iVideo = {\n        width: update.videoWidth,\n        height: update.videoHeight\n      };\n\n      var video = {\n        width: isVideo ? self.videoFeed.videoElement().clientWidth : canvas.width,\n        height: isVideo ? self.videoFeed.videoElement().clientHeight : canvas.height\n      };\n\n      // INFO iOS serializes bools as 0 or 1\n      update.mirrored = !!update.mirrored;\n\n      // Check if the incoming signal was mirrored\n      if (update.mirrored) {\n        update.fromX = video.width - update.fromX;\n        update.toX = video.width - update.toX;\n      }\n\n      // Check to see if the active video feed is also mirrored (double negative)\n      if (mirrored) {\n        // Revert (Double negative)\n        update.fromX = video.width - update.fromX;\n        update.toX = video.width - update.toX;\n      }\n\n\n      /** Keep history of updates for resize */\n      var updateForHistory = JSON.parse(JSON.stringify(update));\n      updateForHistory.canvasWidth = canvas.width;\n      updateForHistory.canvasHeight = canvas.height;\n      updateForHistory.videoWidth = video.width;\n      updateForHistory.videoHeight = video.height;\n\n      if (resizeEvent) {\n        updateHistory[index] = updateForHistory;\n      } else {\n        updateHistory.push(updateForHistory);\n        drawHistory.push(new VideoRelativeCoordinateSet(update));\n      }\n      /** ********************************** */\n\n      draw(null);\n    };\n\n    var drawUpdates = function (updates, resizeEvent) {\n\n      updates.forEach(function (update, index) {\n        if (!isVideo || (self.videoFeed && self.videoFeed.stream && update.id === self.videoFeed.stream.connection.connectionId)) {\n          drawIncoming(update, resizeEvent, index);\n        }\n      });\n    };\n\n    var clearCanvas = function (incoming, cid) {\n      // console.log('cid: ' + cid);\n      // Remove all elements from history that were drawn by the sender\n\n      drawHistory = drawHistory.filter(function (history) {\n        return history.fromId !== cid;\n      });\n\n      if (!incoming) {\n        if (self.session) {\n          self.session.signal({\n            type: 'otAnnotation_clear'\n          });\n        }\n        eventHistory = [];\n      } else {\n        updateHistory = [];\n      }\n\n\n      // Refresh the canvas\n      draw();\n    };\n\n    var undoLast = function (incoming, cid, itemsToRemove) {\n\n      var historyItem;\n      var removed;\n      var endPoint = false;\n      var removedItems = [];\n      for (var i = drawHistory.length - 1; i >= 0; i--) {\n        historyItem = drawHistory[i];\n        if (historyItem.fromId === cid) {\n\n          if (historyItem.platform === 'ios' && !!itemsToRemove && !!itemsToRemove.length && itemsToRemove[0] !== null) {\n            undoLastIos(incoming, cid, itemsToRemove);\n            break;\n          }\n\n          endPoint = endPoint || historyItem.endPoint;\n          removed = drawHistory.splice(i, 1)[0];\n          removedItems.push(removed.guid);\n          if (!endPoint || (endPoint && removed.startPoint === true)) {\n            break;\n          }\n        }\n      }\n\n      if (incoming) {\n        updateHistory = updateHistory.filter(function (history) {\n          return !itemsToRemove.includes(history.guid);\n        });\n      } else {\n        eventHistory = eventHistory.filter(function (history) {\n          return !removedItems.includes(history.guid);\n        });\n\n        self.session.signal({\n          type: 'otAnnotation_undo',\n          data: JSON.stringify(removedItems)\n        });\n      }\n\n      draw();\n    }\n\n    var undoLastIos = function (incoming, cid, itemsToRemove) {\n\n      var historyItem;\n      var removed;\n      var endPoint = false;\n      var removedItems = [];\n\n\n      for (var i = drawHistory.length - 1; i >= 0; i--) {\n        historyItem = drawHistory[i];\n        if (historyItem.fromId === cid) {\n          if (historyItem.guid === itemsToRemove[0]) {\n            removed = drawHistory.splice(i, 1)[0];\n            removedItems.push(removed.guid);\n          }\n        }\n      }\n\n      if (incoming) {\n        updateHistory = updateHistory.filter(function (history) {\n          return !itemsToRemove.includes(history.guid);\n        });\n      } else {\n        eventHistory = eventHistory.filter(function (history) {\n          return !removedItems.includes(history.guid);\n        });\n\n        self.session.signal({\n          type: 'otAnnotation_undo',\n          data: JSON.stringify(removedItems)\n        });\n      }\n\n      draw();\n    }\n\n\n    var count = 0;\n    /** Signal Handling **/\n    if (_session) {\n      _session.on({\n        'signal:otAnnotation_pen': function (event) {\n          if (event.from.connectionId !== _session.connection.connectionId) {\n            var paths = JSON.parse(event.data);\n            drawUpdates(paths);\n          }\n        },\n        'signal:otAnnotation_text': function (event) {\n          if (event.from.connectionId !== _session.connection.connectionId) {\n            drawUpdates(JSON.parse(event.data));\n          }\n        },\n        'signal:otAnnotation_history': function (event) {\n          // We will receive these from everyone in the room, only listen to the first\n          // person. Also the data is chunked together so we need all of that person's\n          if (!drawHistoryReceivedFrom || drawHistoryReceivedFrom === event.from.connectionId) {\n            drawHistoryReceivedFrom = event.from.connectionId;\n            drawUpdates(JSON.parse(event.data));\n          }\n        },\n        'signal:otAnnotation_clear': function (event) {\n          if (event.from.connectionId !== _session.connection.connectionId) {\n            // Only clear elements drawn by the sender's (from) Id\n            clearCanvas(true, event.from.connectionId);\n          }\n        },\n        'signal:otAnnotation_undo': function (event) {\n          if (event.from.connectionId !== _session.connection.connectionId) {\n            // Only clear elements drawn by the sender's (from) Id\n            undoLast(true, event.from.connectionId, JSON.parse(event.data));\n          }\n        },\n        connectionCreated: function (event) {\n          if (drawHistory.length > 0 && event.connection.connectionId !== _session.connection.connectionId) {\n            batchSignal('otWhiteboard_history', drawHistory, event.connection);\n          }\n        }\n      });\n    }\n\n    var batchSignal = function (data, toConnection) {\n\n      var signalError = function (err) {\n        if (err) {\n          TB.error(err);\n        }\n      };\n\n      var type = 'otAnnotation_pen';\n      var updateType = function (chunk) {\n        if (!chunk || !chunk[0] || !chunk[0].selectedItem || !chunk[0].selectedItem.id) {\n          return;\n        }\n        var id = chunk[0].selectedItem.id;\n        type = id === 'OT_text' ? 'otAnnotation_text' : 'otAnnotation_pen';\n      };\n\n      /**\n       * If the 'type' string exceeds the maximum length (128 bytes), or the\n       * 'data' string exceeds the maximum size (8 kB), OT will return a 413 error\n       * and the signal will not be sent.  The maximum number of characters that\n       * can be sent in the signal is 8,192.  Currently, the largest updates are\n       * 995 characters, meaning that the limit for the number of updates per\n       * signal should be 8, even taking into account the additional characters\n       * required to convert the entire array of updates as opposed to each one\n       * individually.  However, OT is throwing a 413 error once the size exceeds\n       * 7,900 characters. So, 7 is the magic number for the time being.\n       * UPDATE: At 7, we're still seeing errors.  So, 6 it is.\n       */\n      var dataChunk;\n      var start = 0;\n      var updatesPerSignal = 6;\n      while (start < data.length) {\n        dataChunk = data.slice(start, start + updatesPerSignal);\n        updateType(dataChunk);\n        start += updatesPerSignal;\n        var signal = {\n          type: type,\n          data: JSON.stringify(dataChunk)\n        };\n        if (toConnection) {\n          signal.to = toConnection;\n        }\n        self.session.signal(signal, signalError);\n      }\n    };\n\n    var updateTimeout;\n    var sendUpdate = function (update) {\n      if (self.session) {\n        batchUpdates.push(update);\n        if (!updateTimeout) {\n          updateTimeout = setTimeout(function () {\n            batchSignal(batchUpdates);\n            batchUpdates = [];\n            updateTimeout = null;\n          }, 100);\n        }\n      }\n    };\n  };\n\n  //--------------------------------------\n  //  OPENTOK ANNOTATION TOOLBAR\n  //--------------------------------------\n\n  OTSolution.Annotations.Toolbar = function (options) {\n    var self = this;\n    var _toolbar = this;\n\n    options || (options = {});\n\n    if (!options.session) {\n      throw new Error('OpenTok Annotation Widget requires an OpenTok session');\n    } else {\n      _session = options.session;\n    }\n\n    if (!_OTKAnalytics && !options.OTKAnalytics) {\n      throw new Error('OpenTok Annotation Widget requires an OpenTok Solution');\n    } else {\n      _OTKAnalytics = _OTKAnalytics || options.OTKAnalytics;\n\n    }\n\n    if (!_otkanalytics) {\n      _logAnalytics();\n    }\n\n    this.session = options.session;\n    this.parent = options.container;\n    this.externalWindow = options.externalWindow;\n    // TODO Allow 'style' objects to be passed in for buttons, menu toolbar, etc?\n    this.backgroundColor = options.backgroundColor || 'rgba(102, 102, 102, 0.90)';\n    this.subpanelBackgroundColor = options.subpanelBackgroundColor || '#323232';\n\n    var imageAssets = options.imageAssets || DEFAULT_ASSET_URL;\n\n    var toolbarItems = [{\n        id: 'OT_pen',\n        title: 'Pen',\n        icon: [imageAssets, 'annotation-pencil.png'].join(''),\n        selectedIcon: [imageAssets, 'annotation-pencil.png'].join(''),\n        items: { /* Built dynamically */ }\n      }, {\n        id: 'OT_colors',\n        title: 'Colors',\n        icon: '',\n        items: { /* Built dynamically */ }\n      }, {\n        id: 'OT_shapes',\n        title: 'Shapes',\n        icon: [imageAssets, 'annotation-shapes.png'].join(''),\n        items: [{\n            id: 'OT_rect',\n            title: 'Rectangle',\n            icon: [imageAssets, 'annotation-rectangle.png'].join(''),\n            points: [\n              [0, 0],\n              [1, 0],\n              [1, 1],\n              [0, 1],\n              [0, 0] // Reconnect point\n            ]\n          },\n          {\n            id: 'OT_rect_fill',\n            title: 'Rectangle-Fill',\n            icon: [imageAssets, 'annotation-rectangle.png'].join(''),\n            points: [\n              [0, 0],\n              [1, 0],\n              [1, 1],\n              [0, 1],\n              [0, 0] // Reconnect point\n            ]\n          }, {\n            id: 'OT_oval',\n            title: 'Oval',\n            icon: [imageAssets, 'annotation-oval.png'].join(''),\n            enableSmoothing: true,\n            points: [\n              [0, 0.5],\n              [0.5 + 0.5 * Math.cos(5 * Math.PI / 4), 0.5 + 0.5 * Math.sin(5 * Math.PI / 4)],\n              [0.5, 0],\n              [0.5 + 0.5 * Math.cos(7 * Math.PI / 4), 0.5 + 0.5 * Math.sin(7 * Math.PI / 4)],\n              [1, 0.5],\n              [0.5 + 0.5 * Math.cos(Math.PI / 4), 0.5 + 0.5 * Math.sin(Math.PI / 4)],\n              [0.5, 1],\n              [0.5 + 0.5 * Math.cos(3 * Math.PI / 4), 0.5 + 0.5 * Math.sin(3 * Math.PI / 4)],\n              [0, 0.5],\n              [0.5 + 0.5 * Math.cos(5 * Math.PI / 4), 0.5 + 0.5 * Math.sin(5 * Math.PI / 4)]\n            ]\n          }, {\n            id: 'OT_oval_fill',\n            title: 'Oval-Fill',\n            icon: [imageAssets, 'annotation-oval-fill.png'].join(''),\n            enableSmoothing: true,\n            points: [\n              [0, 0.5],\n              [0.5 + 0.5 * Math.cos(5 * Math.PI / 4), 0.5 + 0.5 * Math.sin(5 * Math.PI / 4)],\n              [0.5, 0],\n              [0.5 + 0.5 * Math.cos(7 * Math.PI / 4), 0.5 + 0.5 * Math.sin(7 * Math.PI / 4)],\n              [1, 0.5],\n              [0.5 + 0.5 * Math.cos(Math.PI / 4), 0.5 + 0.5 * Math.sin(Math.PI / 4)],\n              [0.5, 1],\n              [0.5 + 0.5 * Math.cos(3 * Math.PI / 4), 0.5 + 0.5 * Math.sin(3 * Math.PI / 4)],\n              [0, 0.5],\n              [0.5 + 0.5 * Math.cos(5 * Math.PI / 4), 0.5 + 0.5 * Math.sin(5 * Math.PI / 4)]\n            ]\n          }, {\n            id: 'OT_star',\n            title: 'Star',\n            icon: [imageAssets, 'annotation-star.png'].join(''),\n            points: [\n              /* eslint-disable max-len */\n              [0.5 + 0.5 * Math.cos(90 * (Math.PI / 180)), 0.5 + 0.5 * Math.sin(90 * (Math.PI / 180))],\n              [0.5 + 0.25 * Math.cos(126 * (Math.PI / 180)), 0.5 + 0.25 * Math.sin(126 * (Math.PI / 180))],\n              [0.5 + 0.5 * Math.cos(162 * (Math.PI / 180)), 0.5 + 0.5 * Math.sin(162 * (Math.PI / 180))],\n              [0.5 + 0.25 * Math.cos(198 * (Math.PI / 180)), 0.5 + 0.25 * Math.sin(198 * (Math.PI / 180))],\n              [0.5 + 0.5 * Math.cos(234 * (Math.PI / 180)), 0.5 + 0.5 * Math.sin(234 * (Math.PI / 180))],\n              [0.5 + 0.25 * Math.cos(270 * (Math.PI / 180)), 0.5 + 0.25 * Math.sin(270 * (Math.PI / 180))],\n              [0.5 + 0.5 * Math.cos(306 * (Math.PI / 180)), 0.5 + 0.5 * Math.sin(306 * (Math.PI / 180))],\n              [0.5 + 0.25 * Math.cos(342 * (Math.PI / 180)), 0.5 + 0.25 * Math.sin(342 * (Math.PI / 180))],\n              [0.5 + 0.5 * Math.cos(18 * (Math.PI / 180)), 0.5 + 0.5 * Math.sin(18 * (Math.PI / 180))],\n              [0.5 + 0.25 * Math.cos(54 * (Math.PI / 180)), 0.5 + 0.25 * Math.sin(54 * (Math.PI / 180))],\n              [0.5 + 0.5 * Math.cos(90 * (Math.PI / 180)), 0.5 + 0.5 * Math.sin(90 * (Math.PI / 180))]\n              /* eslint-enable max-len */\n            ]\n          }, {\n            id: 'OT_arrow',\n            title: 'Arrow',\n            icon: [imageAssets, 'annotation-arrow.png'].join(''),\n            points: [\n              [0, 1],\n              [3, 1],\n              [3, 0],\n              [5, 2],\n              [3, 4],\n              [3, 3],\n              [0, 3],\n              [0, 1] // Reconnect point\n            ]\n          }, {\n            id: 'OT_line',\n            title: 'Line',\n            icon: [imageAssets, 'annotation-line.png'].join(''),\n            selectedIcon: [imageAssets, 'annotation-line.png'].join(''),\n            points: [\n              [0, 0],\n              [0, 1]\n            ]\n          }\n        ]\n      }, {\n        id: 'OT_text',\n        title: 'Text',\n        icon: [imageAssets, 'annotation-text.png'].join(''),\n        selectedIcon: [imageAssets, 'annotation-text.png'].join('')\n      }, {\n        id: 'OT_capture',\n        title: 'Capture',\n        icon: [imageAssets, 'annotation-camera.png'].join(''),\n        selectedIcon: [imageAssets, 'annotation-camera.png'].join('')\n      }, {\n        id: 'OT_undo',\n        title: 'Undo',\n        icon: [imageAssets, 'annotation-undo.png'].join('')\n      },\n      {\n        id: 'OT_clear',\n        title: 'Clear',\n        icon: [imageAssets, 'annotation-clear.png'].join('')\n      }\n    ];\n\n\n    /**\n     * If we recieve items as part of the options hash, build the toolbar from the list of items.\n     * Otherwise, include all items.\n     */\n    var getItems = function () {\n      var itemNames = ['pen', 'colors', 'shapes', 'text', 'capture', 'undo', 'clear'];\n      var shapeNames = ['rectangle', 'rectangle-fill', 'oval', 'oval-fill', 'star', 'arrow', 'line'];\n      var addItem = function (acc, item) {\n        var index = itemNames.indexOf(item);\n        if (index !== -1) {\n          var toolbarItem = toolbarItems[index];\n          if (toolbarItem.title === 'Shapes' && !!options.shapes) {\n            var shapes = options.shapes.reduce(function (shapeAcc, shape) {\n              var shapeIndex = shapeNames.indexOf(shape);\n              return shapeIndex !== -1 ? shapeAcc.concat(toolbarItem.items[shapeIndex]) : shapeAcc;\n            }, []);\n            toolbarItem.items = shapes;\n          }\n          acc.push(toolbarItem);\n        }\n        return acc;\n      }\n\n      if (!!options.items && !!options.items.length) {\n        var itemsToBuild = options.items[0] === '*' ? itemNames : options.items;\n        return itemsToBuild.reduce(addItem, []);\n      } else {\n        return toolbarItems;\n      }\n    }\n\n    this.items = getItems();\n\n    this.colors = options.colors || [\n      '#1abc9c',\n      '#2ecc71',\n      '#3498db',\n      '#9b59b6',\n      '#34495e',\n      '#16a085',\n      '#27ae60',\n      '#2980b9',\n      '#8e44ad',\n      '#2c3e50',\n      '#f1c40f',\n      '#e67e22',\n      '#e74c3c',\n      '#ecf0f1',\n      '#95a5a6',\n      '#f39c12',\n      '#d35400',\n      '#c0392b',\n      '#bdc3c7',\n      '#7f8c8d'\n    ];\n\n    this.cbs = [];\n    var canvases = [];\n\n    /**\n     * Creates a sub-menu with a color picker.\n     *\n     * @param {String|Element} parent The parent div container for the color picker sub-menu.\n     * @param {Array} colors The array of colors to add to the palette.\n     * @param {Object} options options An object containing the following fields:\n     *\n     *  - `openEvent` (String): The open event (default: `\"click\"`).\n     *  - `style` (Object): Some style options:\n     *    - `display` (String): The display value when the picker is opened (default: `\"block\"`).\n     *  - `template` (String): The color item template. The `{color}` snippet will be replaced\n     *    with the color value (default: `\"<div data-col=\\\"{color}\\\" style=\\\"background-color: {color}\\\"></div>\"`).\n     *  - `autoclose` (Boolean): If `false`, the color picker will not be hidden by default (default: `true`).\n     *\n     * @constructor\n     */\n    var ColorPicker = function (parent, colors, options) {\n      var self = this;\n      var context = _toolbar.externalWindow ? _toolbar.externalWindow.document : document;\n\n      this.getElm = function (el, all) {\n        if (typeof el === 'string') {\n          return all ? context.querySelectorAll(el) : context.querySelector(el);\n        }\n        return el;\n      };\n\n      this.render = function () {\n        var self = this,\n          html = '';\n\n        self.colors.forEach(function (c) {\n          html += self.options.template.replace(/\\{color\\}/g, c);\n        });\n\n        self.elm.innerHTML = html;\n      };\n\n      this.close = function () {\n        // this.elm.style.display = 'none';\n        this.elm.classList.add('ots-hidden');\n      };\n\n      this.open = function () {\n        // this.elm.style.display = this.options.style.display;\n        this.elm.classList.remove('ots-hidden')\n\n      };\n\n      this.colorChosen = function (cb) {\n        this.cbs.push(cb);\n      };\n\n      this.set = function (c, p) {\n        var self = this;\n        self.color = c;\n        if (p === false) {\n          return;\n        }\n        self.cbs.forEach(function (cb) {\n          cb.call(self, c);\n        });\n      };\n\n      options = options || {};\n      options.openEvent = options.openEvent || 'click';\n      options.style = Object(options.style);\n      // options.style.display = options.style.display || 'block';\n      options.template = options.template || '<div class=\\\"color-choice\\\" data-col=\\\"{color}\\\" style=\\\"background-color: {color}\\\"></div>';\n      self.elm = self.getElm(parent);\n      self.cbs = [];\n      self.colors = colors;\n      self.options = options;\n      self.render();\n\n      // Click on colors\n      self.elm.addEventListener('click', function (ev) {\n        var color = ev.target.getAttribute('data-col');\n        if (!color) {\n          return;\n        }\n        var colors = Array.from(self.getElm('.color-choice', true));\n        colors.forEach(function (el) {\n          el.classList.remove('active');\n        });\n        ev.target.classList.add('active');\n        self.set(color);\n        self.close();\n      });\n\n      if (options.autoclose !== false) {\n        self.close();\n      }\n    };\n\n    var panel;\n    this.createPanel = function (externalWindow) {\n      if (_toolbar.parent) {\n        var context = externalWindow ? externalWindow.document : document;\n        panel = context.createElement('div');\n        panel.setAttribute('id', 'OT_toolbar');\n        panel.setAttribute('class', 'OT_panel');\n        panel.style.width = '100%';\n        panel.style.height = '100%';\n        this.parent.appendChild(panel);\n        this.parent.style.position = 'relative';\n        this.parent.zIndex = 1000;\n\n        var toolbarItems = [];\n        var subPanel = context.createElement('div');\n\n        for (var i = 0, total = this.items.length; i < total; i++) {\n          var item = this.items[i];\n\n          var button = context.createElement('input');\n          button.setAttribute('type', 'button');\n          button.setAttribute('id', item.id);\n          button.classList.add('annotation-btn');\n          button.classList.add(item.title.split(' ').join('-').toLowerCase());\n\n          if (item.id === 'OT_colors') {\n\n            var colorPicker = context.createElement('div');\n            colorPicker.setAttribute('class', 'color-picker');\n            // colorPicker.style.backgroundColor = this.subpanelBackgroundColor;\n            this.parent.appendChild(colorPicker);\n\n            var pk = new ColorPicker('.color-picker', this.colors, {\n              externalWindow: _toolbar.externalWindow\n            });\n\n            pk.colorChosen(function (color) {\n              var colorGroup = context.getElementById('OT_colors');\n              colorGroup.style.backgroundColor = color;\n\n              canvases.forEach(function (canvas) {\n                canvas.changeColor(color);\n              });\n            });\n\n            var colorChoices = context.querySelectorAll('.color-choice');\n            colorChoices[0].classList.add('active');\n            button.setAttribute('class', 'OT_color annotation-btn colors');\n            button.style.borderRadius = '50%';\n            button.style.backgroundColor = this.colors[0];\n\n          }\n\n          if (item.title === 'Pen' && !Array.isArray(item.items)) {\n            // Add defaults\n            item.items = [{\n              id: 'OT_line_width_2',\n              title: 'Line Width 2',\n              size: 2\n            }, {\n              id: 'OT_line_width_4',\n              title: 'Line Width 4',\n              size: 4\n            }, {\n              id: 'OT_line_width_6',\n              title: 'Line Width 6',\n              size: 6\n            }, {\n              id: 'OT_line_width_8',\n              title: 'Line Width 8',\n              size: 8\n            }, {\n              id: 'OT_line_width_10',\n              title: 'Line Width 10',\n              size: 10\n            }, {\n              id: 'OT_line_width_12',\n              title: 'Line Width 12',\n              size: 12\n            }, {\n              id: 'OT_line_width_14',\n              title: 'Line Width 14',\n              size: 14\n            }];\n          }\n\n          if (item.items) {\n            // Indicate that we have a group\n            button.setAttribute('data-type', 'group');\n          }\n\n          button.setAttribute('data-col', item.title);\n\n\n          toolbarItems.push(button.outerHTML);\n        }\n\n        panel.innerHTML = toolbarItems.join('');\n\n        /**\n         * Since the color picker button uses its background to display the\n         * current color, we need to add a pseudo-element element to the toolbar\n         * to simulate hover state on the button.  When the user hovers over the\n         * button, we add the 'colors-hover' class to 'OT_toolbar' which has a\n         * pseudo-element which makes it seem as though the color picker button\n         * background is changing.\n         * TODO: Update the color picker and color choices to display colors\n         *       using pseudo-elements, so that we can more easily apply hover\n         *       states.\n         */\n        var toggleColorsHover = function (hover) {\n          var action = hover ? 'add' : 'remove';\n          document.getElementById('OT_toolbar').classList[action]('colors-hover');\n        };\n        var colors = context.getElementById('OT_colors');\n        colors.addEventListener('mouseenter', function () {\n          toggleColorsHover(true);\n        });\n        colors.addEventListener('mouseleave', function () {\n          toggleColorsHover(false);\n        });\n        /** End color picker hover state */\n\n        panel.onclick = function (ev) {\n          var group = ev.target.getAttribute('data-type') === 'group';\n          var itemName = ev.target.getAttribute('data-col');\n          var id = ev.target.getAttribute('id');\n\n\n          // Close the submenu if we are clicking on an item and not a group button\n          if (!group) {\n            self.items.forEach(function (item) {\n              if ((item.title !== 'Clear' || item.title !== 'Undo') && item.title === itemName) {\n\n                self.selectedItem = item;\n\n                attachDefaultAction(item);\n\n                canvases.forEach(function (canvas) {\n                  canvas.selectItem(self.selectedItem);\n                });\n\n                return false;\n              }\n            });\n            subPanel.classList.add('ots-hidden')\n          } else {\n            self.items.forEach(function (item) {\n              if (item.title === itemName) {\n                self.selectedGroup = item;\n\n                if (item.items) {\n                  subPanel.setAttribute('class', ['OT_subpanel', 'ots-hidden', item.title.toLowerCase()].join(' '));\n\n                  self.parent.appendChild(subPanel);\n\n                  if (Array.isArray(item.items)) {\n                    var submenuItems = [];\n\n                    if (item.id === 'OT_pen') {\n                      // We want to dynamically create icons for the list of possible line widths\n                      item.items.forEach(function (subItem) {\n                        // INFO Using a div here - not input to create an inner div representing the line width - better option?\n                        var itemButton = context.createElement('div');\n                        itemButton.setAttribute('data-col', subItem.title);\n                        itemButton.setAttribute('class', ['line-width-option', subItem.size].join(' '));\n                        itemButton.setAttribute('id', subItem.id);\n\n                        var lineIcon = context.createElement('div');\n                        lineIcon.setAttribute('class', 'line-width-icon')\n                          // TODO Allow devs to change this?\n                        lineIcon.style.backgroundColor = '#FFFFFF';\n                        lineIcon.style.width = '80%';\n                        lineIcon.style.height = subItem.size + 'px';\n                        lineIcon.style.position = 'relative';\n                        lineIcon.style.left = '50%';\n                        lineIcon.style.top = '50%';\n                        lineIcon.style.transform = 'translateX(-50%) translateY(-50%)';\n                        // Prevents div icon from catching events so they can be passed to the parent\n                        lineIcon.style.pointerEvents = 'none';\n\n                        itemButton.appendChild(lineIcon);\n\n                        submenuItems.push(itemButton.outerHTML);\n                      });\n                    } else {\n                      item.items.forEach(function (subItem) {\n                        var itemButton = context.createElement('input');\n                        itemButton.setAttribute('type', 'button');\n                        itemButton.setAttribute('data-col', subItem.title);\n                        itemButton.setAttribute('id', subItem.id);\n                        itemButton.setAttribute('class', ['annotation-btn', subItem.title.toLowerCase()].join(' '));\n                        // itemButton.style.backgroundImage = 'url(\"' + subItem.icon + '\")';\n                        // itemButton.style.position = 'relative';\n                        // itemButton.style.top = '50%';\n                        // itemButton.style.transform = 'translateY(-50%)';\n                        // itemButton.style.backgroundSize = self.iconWidth + ' ' + self.iconHeight;\n                        // itemButton.style.backgroundPosition = 'center';\n                        // itemButton.style.width = self.buttonWidth;\n                        // itemButton.style.height = self.buttonHeight;\n                        // itemButton.style.border = 'none';\n                        // itemButton.style.cursor = 'pointer';\n\n                        submenuItems.push(itemButton.outerHTML);\n                      });\n                    }\n\n                    subPanel.innerHTML = submenuItems.join('');\n                  }\n                }\n\n                if (id === 'OT_shapes' || id === 'OT_pen') {\n                  if (subPanel) {\n                    subPanel.classList.remove('ots-hidden');\n                  }\n                  pk.close();\n                } else if (id === 'OT_colors') {\n                  if (subPanel) {\n                    subPanel.classList.add('ots-hidden');\n                  }\n                  pk.open();\n                }\n              }\n            });\n          }\n\n          self.cbs.forEach(function (cb) {\n            cb.call(self, id);\n          });\n        };\n\n        subPanel.onclick = function (ev) {\n          var group = ev.target.getAttribute('data-type') === 'group';\n          var itemName = ev.target.getAttribute('data-col');\n          var id = ev.target.getAttribute('id');\n\n\n          if (!!id && id.replace(/[^a-z]/g, '') === 'linewidth') {\n            canvases.forEach(function (canvas) {\n              canvas.selectItem(self.selectedGroup);\n            });\n          }\n\n          subPanel.classList.add('ots-hidden');\n\n          if (!group) {\n            self.selectedGroup.items.forEach(function (item) {\n              if (item.id !== 'OT_clear' && item.id === id) {\n                if (self.selectedItem) {\n                  var lastBtn = document.getElementById(self.selectedItem.id);\n                  if (lastBtn) {\n                    // lastBtn.style.background = 'url(\"' + self.selectedItem.icon + '\") no-repeat';\n                    // lastBtn.style.backgroundSize = self.iconWidth + ' ' + self.iconHeight;\n                    // lastBtn.style.backgroundPosition = 'center';\n                  }\n                }\n\n                if (item.selectedIcon) {\n                  var selBtn = document.getElementById(item.id);\n                  if (lastBtn) {\n                    selBtn.style.background = 'url(\"' + item.selectedIcon + '\") no-repeat';\n                    selBtn.style.backgroundSize = self.iconWidth + ' ' + self.iconHeight;\n                    selBtn.style.backgroundPosition = 'center';\n                  }\n                }\n\n                self.selectedItem = item;\n\n                attachDefaultAction(item);\n\n                canvases.forEach(function (canvas) {\n                  canvas.selectItem(self.selectedItem);\n                });\n\n                return false;\n              }\n            });\n          }\n\n          self.cbs.forEach(function (cb) {\n            cb.call(self, id);\n          });\n        };\n\n        var onClear = context.getElementById('OT_clear').onclick = function () {\n          canvases.forEach(function (canvas) {\n            canvas.clear();\n          });\n        };\n\n        context.getElementById('OT_undo').onclick = function () {\n          canvases.forEach(function (canvas) {\n            canvas.undo();\n          });\n        };\n\n        window.addEventListener('OT_clear', function () {\n          onClear();\n          self.selectedItem = null;\n          canvases.forEach(function (canvas) {\n            canvas.selectItem(self.selectedItem);\n          });\n        });\n\n        window.addEventListener('OT_pen', function (evt) {\n          var item = self.items.find(function (item) {\n            return item.id === 'OT_pen';\n          });\n\n          self.selectedItem = item;\n          attachDefaultAction(item);\n          var color = evt.detail.color;\n          canvases.forEach(function (canvas) {\n            canvas.selectItem(self.selectedItem);\n            color && canvas.changeColor(color);\n          });\n        });\n      }\n    };\n\n    !this.externalWindow && this.createPanel();\n\n    var attachDefaultAction = function (item) {\n      if (!item.points) {\n        // Attach default actions\n        if (item.id === 'OT_line') {\n          self.selectedItem.points = [\n            [0, 0],\n            [0, 1]\n          ];\n        } else if (item.id === 'OT_arrow') {\n          self.selectedItem.points = [\n            [0, 1],\n            [3, 1],\n            [3, 0],\n            [5, 2],\n            [3, 4],\n            [3, 3],\n            [0, 3],\n            [0, 1] // Reconnect point\n          ];\n        } else if (item.id === 'OT_rect') {\n          self.selectedItem.points = [\n            [0, 0],\n            [1, 0],\n            [1, 1],\n            [0, 1],\n            [0, 0] // Reconnect point\n          ];\n        } else if (item.id === 'OT_oval') {\n          self.selectedItem.enableSmoothing = true;\n          self.selectedItem.points = [\n            [0, 0.5],\n            [0.5 + 0.5 * Math.cos(5 * Math.PI / 4), 0.5 + 0.5 * Math.sin(5 * Math.PI / 4)],\n            [0.5, 0],\n            [0.5 + 0.5 * Math.cos(7 * Math.PI / 4), 0.5 + 0.5 * Math.sin(7 * Math.PI / 4)],\n            [1, 0.5],\n            [0.5 + 0.5 * Math.cos(Math.PI / 4), 0.5 + 0.5 * Math.sin(Math.PI / 4)],\n            [0.5, 1],\n            [0.5 + 0.5 * Math.cos(3 * Math.PI / 4), 0.5 + 0.5 * Math.sin(3 * Math.PI / 4)],\n            [0, 0.5],\n            [0.5 + 0.5 * Math.cos(5 * Math.PI / 4), 0.5 + 0.5 * Math.sin(5 * Math.PI / 4)]\n          ];\n        }\n      }\n    };\n\n    /**\n     * Callback function for toolbar menu item click events.\n     * @param cb The callback function used to handle the click event.\n     */\n    this.itemClicked = function (cb) {\n      this.cbs.push(cb);\n    };\n\n    /**\n     * Links an annotation canvas to the toolbar so that menu actions can be handled on it.\n     * @param canvas The annotation canvas to be linked to the toolbar.\n     * @param externalWindow External screen sharing window\n     */\n    this.addCanvas = function (canvas, externalWindow) {\n      var self = this;\n      var context = externalWindow ? externalWindow.document : document;\n      canvas.link(self.session);\n      canvas.colors(self.colors);\n      canvases.push(canvas);\n      canvases.forEach(function (canvas) {\n        canvas.selectedItem = canvas.selectedItem || self.items[0];\n        context.getElementById(canvas.selectedItem.id).classList.add('selected');\n      });\n    };\n\n    /**\n     * Removes the annotation canvas with the specified connectionId from its parent container and\n     * unlinks it from the toolbar.\n     * @param connectionId The stream's connection ID for the video feed whose canvas should be removed.\n     */\n    this.removeCanvas = function (connectionId) {\n      canvases.forEach(function (annotationView) {\n        var canvas = annotationView.canvas();\n        if (annotationView.videoFeed.stream.connection.connectionId === connectionId) {\n          if (canvas.parentNode) {\n            canvas.parentNode.removeChild(canvas);\n          }\n        }\n      });\n\n      canvases = canvases.filter(function (annotationView) {\n        return annotationView.videoFeed.stream.connection.connectionId !== connectionId;\n      });\n    };\n\n    /**\n     * Removes the toolbar and all associated annotation canvases from their parent containers.\n     */\n    this.remove = function () {\n\n      try {\n        panel.parentNode.removeChild(panel);\n      } catch (e) {\n        console.log('Toolbar parent no longer exists');\n      }\n\n      canvases.forEach(function (annotationView) {\n        var canvas = annotationView.canvas();\n        if (canvas.parentNode) {\n          canvas.parentNode.removeChild(canvas);\n        }\n      });\n\n      canvases = [];\n    };\n  };\n\n}.call(this));\n"]},"metadata":{},"sourceType":"script"}