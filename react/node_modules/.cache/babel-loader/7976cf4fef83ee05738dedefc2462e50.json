{"ast":null,"code":"\"use strict\";\n\nfunction getHeaderValueFromOptions(options) {\n  var DEFAULT_POLICY = 'no-referrer';\n  var ALLOWED_POLICIES = ['no-referrer', 'no-referrer-when-downgrade', 'same-origin', 'origin', 'strict-origin', 'origin-when-cross-origin', 'strict-origin-when-cross-origin', 'unsafe-url', ''];\n  options = options || {};\n  var policyOption;\n\n  if ('policy' in options) {\n    policyOption = options.policy;\n  } else {\n    policyOption = DEFAULT_POLICY;\n  }\n\n  var policies = Array.isArray(policyOption) ? policyOption : [policyOption];\n\n  if (policies.length === 0) {\n    throw new Error('At least one policy must be supplied.');\n  }\n\n  var policiesSeen = new Set();\n  policies.forEach(function (policy) {\n    if (typeof policy !== 'string' || ALLOWED_POLICIES.indexOf(policy) === -1) {\n      var allowedPoliciesErrorList = ALLOWED_POLICIES.map(function (policy) {\n        if (policy.length) {\n          return \"\\\"\" + policy + \"\\\"\";\n        } else {\n          return 'and the empty string';\n        }\n      }).join(', ');\n      throw new Error(\"\\\"\" + policy + \"\\\" is not a valid policy. Allowed policies: \" + allowedPoliciesErrorList + \".\");\n    }\n\n    if (policiesSeen.has(policy)) {\n      throw new Error(\"\\\"\" + policy + \"\\\" specified more than once. No duplicates are allowed.\");\n    }\n\n    policiesSeen.add(policy);\n  });\n  return policies.join(',');\n}\n\nmodule.exports = function referrerPolicy(options) {\n  var headerValue = getHeaderValueFromOptions(options);\n  return function referrerPolicy(_req, res, next) {\n    res.setHeader('Referrer-Policy', headerValue);\n    next();\n  };\n};","map":{"version":3,"sources":["/home/fizoumizou/Documents/pfe/react/node_modules/referrer-policy/dist/index.js"],"names":["getHeaderValueFromOptions","options","DEFAULT_POLICY","ALLOWED_POLICIES","policyOption","policy","policies","Array","isArray","length","Error","policiesSeen","Set","forEach","indexOf","allowedPoliciesErrorList","map","join","has","add","module","exports","referrerPolicy","headerValue","_req","res","next","setHeader"],"mappings":"AAAA;;AACA,SAASA,yBAAT,CAAmCC,OAAnC,EAA4C;AACxC,MAAIC,cAAc,GAAG,aAArB;AACA,MAAIC,gBAAgB,GAAG,CACnB,aADmB,EAEnB,4BAFmB,EAGnB,aAHmB,EAInB,QAJmB,EAKnB,eALmB,EAMnB,0BANmB,EAOnB,iCAPmB,EAQnB,YARmB,EASnB,EATmB,CAAvB;AAWAF,EAAAA,OAAO,GAAGA,OAAO,IAAI,EAArB;AACA,MAAIG,YAAJ;;AACA,MAAI,YAAYH,OAAhB,EAAyB;AACrBG,IAAAA,YAAY,GAAGH,OAAO,CAACI,MAAvB;AACH,GAFD,MAGK;AACDD,IAAAA,YAAY,GAAGF,cAAf;AACH;;AACD,MAAII,QAAQ,GAAGC,KAAK,CAACC,OAAN,CAAcJ,YAAd,IAA8BA,YAA9B,GAA6C,CAACA,YAAD,CAA5D;;AACA,MAAIE,QAAQ,CAACG,MAAT,KAAoB,CAAxB,EAA2B;AACvB,UAAM,IAAIC,KAAJ,CAAU,uCAAV,CAAN;AACH;;AACD,MAAIC,YAAY,GAAG,IAAIC,GAAJ,EAAnB;AACAN,EAAAA,QAAQ,CAACO,OAAT,CAAiB,UAAUR,MAAV,EAAkB;AAC/B,QAAK,OAAOA,MAAP,KAAkB,QAAnB,IAAiCF,gBAAgB,CAACW,OAAjB,CAAyBT,MAAzB,MAAqC,CAAC,CAA3E,EAA+E;AAC3E,UAAIU,wBAAwB,GAAGZ,gBAAgB,CAACa,GAAjB,CAAqB,UAAUX,MAAV,EAAkB;AAClE,YAAIA,MAAM,CAACI,MAAX,EAAmB;AACf,iBAAO,OAAOJ,MAAP,GAAgB,IAAvB;AACH,SAFD,MAGK;AACD,iBAAO,sBAAP;AACH;AACJ,OAP8B,EAO5BY,IAP4B,CAOvB,IAPuB,CAA/B;AAQA,YAAM,IAAIP,KAAJ,CAAU,OAAOL,MAAP,GAAgB,8CAAhB,GAAiEU,wBAAjE,GAA4F,GAAtG,CAAN;AACH;;AACD,QAAIJ,YAAY,CAACO,GAAb,CAAiBb,MAAjB,CAAJ,EAA8B;AAC1B,YAAM,IAAIK,KAAJ,CAAU,OAAOL,MAAP,GAAgB,yDAA1B,CAAN;AACH;;AACDM,IAAAA,YAAY,CAACQ,GAAb,CAAiBd,MAAjB;AACH,GAhBD;AAiBA,SAAOC,QAAQ,CAACW,IAAT,CAAc,GAAd,CAAP;AACH;;AACDG,MAAM,CAACC,OAAP,GAAiB,SAASC,cAAT,CAAwBrB,OAAxB,EAAiC;AAC9C,MAAIsB,WAAW,GAAGvB,yBAAyB,CAACC,OAAD,CAA3C;AACA,SAAO,SAASqB,cAAT,CAAwBE,IAAxB,EAA8BC,GAA9B,EAAmCC,IAAnC,EAAyC;AAC5CD,IAAAA,GAAG,CAACE,SAAJ,CAAc,iBAAd,EAAiCJ,WAAjC;AACAG,IAAAA,IAAI;AACP,GAHD;AAIH,CAND","sourcesContent":["\"use strict\";\nfunction getHeaderValueFromOptions(options) {\n    var DEFAULT_POLICY = 'no-referrer';\n    var ALLOWED_POLICIES = [\n        'no-referrer',\n        'no-referrer-when-downgrade',\n        'same-origin',\n        'origin',\n        'strict-origin',\n        'origin-when-cross-origin',\n        'strict-origin-when-cross-origin',\n        'unsafe-url',\n        ''\n    ];\n    options = options || {};\n    var policyOption;\n    if ('policy' in options) {\n        policyOption = options.policy;\n    }\n    else {\n        policyOption = DEFAULT_POLICY;\n    }\n    var policies = Array.isArray(policyOption) ? policyOption : [policyOption];\n    if (policies.length === 0) {\n        throw new Error('At least one policy must be supplied.');\n    }\n    var policiesSeen = new Set();\n    policies.forEach(function (policy) {\n        if ((typeof policy !== 'string') || (ALLOWED_POLICIES.indexOf(policy) === -1)) {\n            var allowedPoliciesErrorList = ALLOWED_POLICIES.map(function (policy) {\n                if (policy.length) {\n                    return \"\\\"\" + policy + \"\\\"\";\n                }\n                else {\n                    return 'and the empty string';\n                }\n            }).join(', ');\n            throw new Error(\"\\\"\" + policy + \"\\\" is not a valid policy. Allowed policies: \" + allowedPoliciesErrorList + \".\");\n        }\n        if (policiesSeen.has(policy)) {\n            throw new Error(\"\\\"\" + policy + \"\\\" specified more than once. No duplicates are allowed.\");\n        }\n        policiesSeen.add(policy);\n    });\n    return policies.join(',');\n}\nmodule.exports = function referrerPolicy(options) {\n    var headerValue = getHeaderValueFromOptions(options);\n    return function referrerPolicy(_req, res, next) {\n        res.setHeader('Referrer-Policy', headerValue);\n        next();\n    };\n};\n"]},"metadata":{},"sourceType":"script"}